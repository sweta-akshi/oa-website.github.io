<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:x="urn:schemas-microsoft-com:office:excel"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=utf-8">
<meta name=ProgId content=Excel.Sheet>
<meta name=Generator content="Microsoft Excel 15">
<link id=Main-File rel=Main-File href="basicjs.htm">
<link rel=File-List href=filelist.xml>
<link rel=Stylesheet href=stylesheet.css>
<style>
<!--table
	{mso-displayed-decimal-separator:"\.";
	mso-displayed-thousand-separator:"\,";}
@page
	{margin:.75in .7in .75in .7in;
	mso-header-margin:.3in;
	mso-footer-margin:.3in;}
-->
</style>
<![if !supportTabStrip]><script language="JavaScript">
<!--
function fnUpdateTabs()
 {
  if (parent.window.g_iIEVer>=4) {
   if (parent.document.readyState=="complete"
    && parent.frames['frTabs'].document.readyState=="complete")
   parent.fnSetActiveSheet(0);
  else
   window.setTimeout("fnUpdateTabs();",150);
 }
}

if (window.name!="frSheet")
 window.location.replace("./basicjs.htm");
else
 fnUpdateTabs();
//-->
</script>
<![endif]>
</head>

<body link="#0563C1" vlink="#954F72">

<table border=0 cellpadding=0 cellspacing=0 width=1444 style='border-collapse:
 collapse;table-layout:fixed;width:1082pt'>
 <col width=87 span=3 style='width:65pt'>
 <col width=196 style='mso-width-source:userset;mso-width-alt:6272;width:147pt'>
 <col width=131 style='mso-width-source:userset;mso-width-alt:4181;width:98pt'>
 <col width=165 style='mso-width-source:userset;mso-width-alt:5290;width:124pt'>
 <col width=87 style='width:65pt'>
 <col width=173 style='mso-width-source:userset;mso-width-alt:5546;width:130pt'>
 <col width=123 style='mso-width-source:userset;mso-width-alt:3925;width:92pt'>
 <col width=87 style='width:65pt'>
 <col width=221 style='mso-width-source:userset;mso-width-alt:7082;width:166pt'>
 <tr height=21 style='height:16.0pt'>
  <td height=21 width=87 style='height:16.0pt;width:65pt'></td>
  <td width=87 style='width:65pt'></td>
  <td width=87 style='width:65pt'></td>
  <td width=196 style='width:147pt'></td>
  <td width=131 style='width:98pt'></td>
  <td width=165 style='width:124pt'></td>
  <td width=87 style='width:65pt'></td>
  <td width=173 style='width:130pt'></td>
  <td width=123 style='width:92pt'></td>
  <td width=87 style='width:65pt'></td>
  <td width=221 style='width:166pt'></td>
 </tr>
 <tr height=43 style='mso-height-source:userset;height:32.0pt'>
  <td height=43 style='height:32.0pt'></td>
  <td colspan=10 class=xl137>Basic JavaScript</td>
 </tr>
 <tr height=28 style='height:21.0pt'>
  <td height=28 style='height:21.0pt'></td>
  <td colspan=4 class=xl138 style='border-right:1.0pt solid black'>Data Types</td>
  <td colspan=3 class=xl138 style='border-right:1.0pt solid black;border-left:
  none'>Expressions</td>
  <td colspan=3 class=xl138 style='border-right:1.0pt solid black;border-left:
  none'>Variables</td>
 </tr>
 <tr height=43 style='mso-height-source:userset;height:32.0pt'>
  <td height=43 style='height:32.0pt'></td>
  <td colspan=4 class=xl141 width=501 style='border-right:1.0pt solid black;
  width:375pt'>Data Literals or the data type of a variable value</td>
  <td colspan=3 class=xl141 width=425 style='border-right:1.0pt solid black;
  border-left:none;width:319pt'>Any valid set of literals, variabless, and
  operators that resolves to a value.</td>
  <td colspan=3 class=xl141 width=431 style='border-right:1.0pt solid black;
  border-left:none;width:323pt'>Variables can be initialize by any of the
  following:<span style='mso-spacerun:yes'> </span></td>
 </tr>
 <tr height=24 style='mso-height-source:userset;height:18.0pt'>
  <td height=24 style='height:18.0pt'></td>
  <td class=xl92 width=87 style='border-top:none;width:65pt'>Type</td>
  <td class=xl101 width=87 style='border-top:none;width:65pt'>Category</td>
  <td class=xl101 width=196 style='border-top:none;width:147pt'>About</td>
  <td class=xl102 width=131 style='border-top:none;width:98pt'>Example</td>
  <td rowspan=3 class=xl88 style='border-top:none'>Numeric</td>
  <td colspan=2 rowspan=3 class=xl130 width=260 style='border-right:1.0pt solid black;
  width:195pt'>let x = 5;<br>
    let y = 3;<br>
    let result = 2 + x * (x + 1) / y - 3;</td>
  <td class=xl70 width=123 style='border-top:none;border-left:none;width:92pt'>Keyword</td>
  <td class=xl71 width=87 style='border-top:none;border-left:none;width:65pt'>Scope</td>
  <td class=xl72 width=221 style='border-top:none;border-left:none;width:166pt'>Example</td>
 </tr>
 <tr height=25 style='height:19.0pt'>
  <td height=25 style='height:19.0pt'></td>
  <td class=xl93 style='border-top:none'>Number</td>
  <td class=xl95 style='border-top:none'>Primitive</td>
  <td class=xl95 style='border-top:none'>Integer || Float</td>
  <td class=xl96 style='border-top:none'>1, 3.14, -42</td>
  <td class=xl73 style='border-top:none;border-left:none'>var</td>
  <td class=xl75 style='border-top:none;border-left:none'>Function</td>
  <td class=xl76 style='border-top:none;border-left:none'>var x = 42;</td>
 </tr>
 <tr height=25 style='height:19.0pt'>
  <td height=25 style='height:19.0pt'></td>
  <td class=xl93 style='border-top:none'>String</td>
  <td class=xl95 style='border-top:none'>Primitive</td>
  <td class=xl95 style='border-top:none'>utf-8 characters</td>
  <td class=xl96 style='border-top:none'>&quot;name&quot;, 'hammer'</td>
  <td class=xl73 style='border-top:none;border-left:none'>let</td>
  <td class=xl75 style='border-top:none;border-left:none'>Block</td>
  <td class=xl76 style='border-top:none;border-left:none'>let y = &quot;Thor's
  Hammer&quot;;<span style='mso-spacerun:yes'> </span></td>
 </tr>
 <tr height=51 style='mso-height-source:userset;height:38.0pt'>
  <td height=51 style='height:38.0pt'></td>
  <td class=xl93 style='border-top:none'>Boolean</td>
  <td class=xl95 style='border-top:none'>Primitive</td>
  <td class=xl95 style='border-top:none'>True || False</td>
  <td class=xl96 style='border-top:none'>let x = true;</td>
  <td class=xl88 style='border-top:none;border-left:none'>Numeric Shorthand</td>
  <td colspan=2 class=xl130 width=260 style='border-right:1.0pt solid black;
  width:195pt'>let x = 4;<br>
    x += 10;<span style='mso-spacerun:yes'>        </span>// 14</td>
  <td class=xl74 style='border-top:none;border-left:none'>const</td>
  <td class=xl77 style='border-top:none;border-left:none'>Block</td>
  <td class=xl78 style='border-top:none;border-left:none'>const __TAXRATE__ =
  .005</td>
 </tr>
 <tr height=31 style='mso-height-source:userset;height:23.0pt'>
  <td height=31 style='height:23.0pt'></td>
  <td class=xl93 style='border-top:none'>Array</td>
  <td class=xl95 style='border-top:none'>Composite</td>
  <td class=xl95 style='border-top:none'>A list of values</td>
  <td class=xl96 style='border-top:none'>let x = ['a', 'b', 'c'];</td>
  <td rowspan=2 class=xl89 style='border-top:none'>Boolean</td>
  <td colspan=2 rowspan=2 class=xl130 width=260 style='border-right:1.0pt solid black;
  width:195pt'>let a = 3; let b = 5;<br>
    let x = a &lt; b;<span style='mso-spacerun:yes'>   </span>// true</td>
  <td colspan=3 class=xl115 style='border-right:1.0pt solid black'>Functions</td>
 </tr>
 <tr height=43 style='mso-height-source:userset;height:32.0pt'>
  <td height=43 style='height:32.0pt'></td>
  <td class=xl93 style='border-top:none'>Object</td>
  <td class=xl95 style='border-top:none'>Composite</td>
  <td class=xl97 width=196 style='border-top:none;width:147pt'>Functions, JS
  objects, and base type for arrays.</td>
  <td class=xl96 style='border-top:none'>let x = {a:1, b:2, c:3)<span
  style='display:none'>;</span></td>
  <td rowspan=4 class=xl123>Defining</td>
  <td colspan=2 rowspan=4 class=xl121 width=308 style='border-right:1.0pt solid black;
  width:231pt'>function &lt;function_name&gt;(<font class="font5">parameters</font><font
  class="font0">) {<br>
    <span style='mso-spacerun:yes'>   </span>&lt;function_body&gt;<br>
    }<br>
    Ex: function average(num1, num2){<br>
    <span style='mso-spacerun:yes'>    </span>return (num1 + num2)/2; <br>
    }<span style='mso-spacerun:yes'> </span></font></td>
 </tr>
 <tr height=28 style='mso-height-source:userset;height:21.0pt'>
  <td height=28 style='height:21.0pt'></td>
  <td class=xl93 style='border-top:none'>undefined</td>
  <td class=xl95 style='border-top:none'>Special</td>
  <td class=xl95 style='border-top:none'>var that has not been defined</td>
  <td class=xl96 style='border-top:none'>let x;<span
  style='mso-spacerun:yes'> </span></td>
  <td class=xl89 style='border-top:none;border-left:none'>String</td>
  <td colspan=2 rowspan=2 class=xl130 width=260 style='border-right:1.0pt solid black;
  border-bottom:1.0pt solid black;width:195pt'>let first = 'orange'; let last =
  'method'; <br>
    let fullname = first + ' ' + last;<span style='mso-spacerun:yes'> </span></td>
 </tr>
 <tr height=25 style='mso-height-source:userset;height:19.0pt'>
  <td height=25 style='height:19.0pt'></td>
  <td class=xl93 style='border-top:none'>null</td>
  <td class=xl95 style='border-top:none'>Special</td>
  <td class=xl95 style='border-top:none'>can be assigned to variable;</td>
  <td class=xl96 style='border-top:none'>let x = null;<span
  style='mso-spacerun:yes'> </span></td>
  <td class=xl87 style='border-top:none;border-left:none'>&nbsp;</td>
 </tr>
 <tr height=47 style='height:35.0pt'>
  <td height=47 style='height:35.0pt'></td>
  <td class=xl93 style='border-top:none'>NaN</td>
  <td class=xl95 style='border-top:none'>Special</td>
  <td class=xl97 width=196 style='border-top:none;width:147pt'>Not a Number:
  the result in a mathematical error</td>
  <td class=xl96 style='border-top:none'>let z = 3 / ‘hello’;</td>
  <td colspan=3 class=xl134 style='border-right:1.0pt solid black;border-left:
  none'>Logic Comparison Operators</td>
 </tr>
 <tr height=48 style='mso-height-source:userset;height:36.0pt'>
  <td height=48 style='height:36.0pt'></td>
  <td class=xl94 style='border-top:none'>Infinity</td>
  <td class=xl98 style='border-top:none'>Special</td>
  <td class=xl99 width=196 style='border-top:none;width:147pt'>A numeric value
  too large to print</td>
  <td class=xl100 style='border-top:none'>let w = 3 / 0;</td>
  <td class=xl85 style='border-left:none'>==</td>
  <td class=xl82 colspan=2 style='mso-ignore:colspan;border-right:1.0pt solid black'>non-strict
  equals (possible type coercio<span style='display:none'>n)</span></td>
  <td rowspan=2 class=xl123 style='border-bottom:1.0pt solid black'>Calling<span
  style='mso-spacerun:yes'> </span></td>
  <td colspan=2 rowspan=2 class=xl119 width=308 style='border-right:1.0pt solid black;
  border-bottom:1.0pt solid black;width:231pt'>a.k.a Invoking.<span
  style='mso-spacerun:yes'>  </span>Pass in <font class="font5">Arguments. </font><font
  class="font0"><span style='mso-spacerun:yes'> </span>var x =
  &lt;functionName&gt;(arguments); <br>
    let a = average(2, 4); // a = 3</font></td>
 </tr>
 <tr height=29 style='height:22.0pt'>
  <td height=29 style='height:22.0pt'></td>
  <td colspan=4 class=xl114 style='border-right:1.0pt solid black'>Array
  Methods</td>
  <td class=xl86 style='border-top:none;border-left:none'>===</td>
  <td class=xl83 colspan=2 style='mso-ignore:colspan;border-right:1.0pt solid black'>strict
  equals(no type coercion)</td>
 </tr>
 <tr height=25 style='mso-height-source:userset;height:19.0pt'>
  <td height=25 style='height:19.0pt'></td>
  <td class=xl103>push</td>
  <td class=xl104 colspan=3 style='mso-ignore:colspan;border-right:1.0pt solid black'>adds
  to end of array.<span style='mso-spacerun:yes'>  
  </span>colors.push(&quot;yellow&quot;);</td>
  <td class=xl86 style='border-top:none;border-left:none'>!=</td>
  <td class=xl83 colspan=2 style='mso-ignore:colspan;border-right:1.0pt solid black'>non-strict
  not-equals (possible type coe<span style='display:none'>rcion)</span></td>
  <td colspan=3 class=xl114 style='border-right:1.0pt solid black;border-left:
  none'>Control Flow</td>
 </tr>
 <tr height=21 style='mso-height-source:userset;height:16.0pt'>
  <td height=21 style='height:16.0pt'></td>
  <td class=xl93 style='border-top:none'>pop</td>
  <td class=xl95 colspan=2 style='mso-ignore:colspan'>removes the last
  value<span style='mso-spacerun:yes'>     </span>colors.pop();<span
  style='mso-spacerun:yes'> </span></td>
  <td class=xl96 style='border-top:none'>&nbsp;</td>
  <td class=xl86 style='border-top:none;border-left:none'>!==</td>
  <td class=xl83 colspan=2 style='mso-ignore:colspan;border-right:1.0pt solid black'>strict
  not-equals (no type coercion)</td>
  <td rowspan=10 class=xl108>If statements</td>
  <td colspan=2 style='mso-ignore:colspan;border-right:1.0pt solid black'>`else
  if` and `elses` are optional</td>
 </tr>
 <tr height=23 style='mso-height-source:userset;height:17.0pt'>
  <td height=23 style='height:17.0pt'></td>
  <td class=xl93 style='border-top:none'>unshift</td>
  <td class=xl95 colspan=3 style='mso-ignore:colspan;border-right:1.0pt solid black'>add
  to the beginning of array.<span style='mso-spacerun:yes'>    
  </span>Colors.pop();<span style='mso-spacerun:yes'> </span></td>
  <td class=xl86 style='border-top:none;border-left:none'>&lt;</td>
  <td class=xl83 style='border-top:none'>less than</td>
  <td class=xl80 style='border-top:none'>&nbsp;</td>
  <td colspan=2 rowspan=9 class=xl121 width=308 style='border-right:1.0pt solid black;
  width:231pt'><br>
    let age = 22; <br>
    if (age &gt; 16){<br>
    <span style='mso-spacerun:yes'>    </span>console.log(&quot;You are
  eligible for a license.&quot;); <br>
    } else if( age === 16 ){<br>
    <span style='mso-spacerun:yes'>    </span>console.log(&quot;You might be
  eligible for a license.&quot;); <br>
    } else {<br>
    <span style='mso-spacerun:yes'>    </span>console.log(&quot;You are too
  young to apply.&quot;); <br>
    }<br>
    <span style='mso-spacerun:yes'> </span></td>
 </tr>
 <tr height=21 style='mso-height-source:userset;height:16.0pt'>
  <td height=21 style='height:16.0pt'></td>
  <td class=xl93 style='border-top:none'>shift</td>
  <td class=xl95 colspan=2 style='mso-ignore:colspan'>removes the first
  value<span style='mso-spacerun:yes'>    </span>colors.shift();<span
  style='mso-spacerun:yes'> </span></td>
  <td class=xl96 style='border-top:none'>&nbsp;</td>
  <td class=xl86 style='border-top:none;border-left:none'>&lt;=</td>
  <td class=xl83 colspan=2 style='mso-ignore:colspan;border-right:1.0pt solid black'>less
  than or equal</td>
 </tr>
 <tr height=21 style='mso-height-source:userset;height:16.0pt'>
  <td height=21 style='height:16.0pt'></td>
  <td class=xl93 style='border-top:none'>splice</td>
  <td class=xl95 colspan=3 style='mso-ignore:colspan;border-right:1.0pt solid black'>can
  remove and add items.<span style='mso-spacerun:yes'>    
  </span>colors.splice(1, 2, &quot;purple&quot;);</td>
  <td class=xl86 style='border-top:none;border-left:none'>&gt;</td>
  <td class=xl83 colspan=2 style='mso-ignore:colspan;border-right:1.0pt solid black'>greater
  than</td>
 </tr>
 <tr height=23 style='mso-height-source:userset;height:17.0pt'>
  <td height=23 style='height:17.0pt'></td>
  <td class=xl93 style='border-top:none'>reverse</td>
  <td class=xl95 colspan=3 style='mso-ignore:colspan;border-right:1.0pt solid black'>reverses
  order of items:<span style='mso-spacerun:yes'>  
  </span>arrayName.reverse();<span style='mso-spacerun:yes'> </span></td>
  <td class=xl87 style='border-top:none;border-left:none'>&gt;=</td>
  <td class=xl84 colspan=2 style='mso-ignore:colspan;border-right:1.0pt solid black'>greater
  than or equal</td>
 </tr>
 <tr height=27 style='mso-height-source:userset;height:20.0pt'>
  <td height=27 style='height:20.0pt'></td>
  <td rowspan=2 class=xl107 style='border-top:none'>sort</td>
  <td colspan=3 rowspan=2 class=xl110 width=414 style='border-right:1.0pt solid black;
  width:310pt'>Sorts elements in numerical or alphabetical order;<span
  style='mso-spacerun:yes'>  </span>arrayName.sort();<span
  style='mso-spacerun:yes'> </span></td>
  <td colspan=3 class=xl114 style='border-right:1.0pt solid black;border-left:
  none'>JS Objects and JSON</td>
 </tr>
 <tr height=21 style='height:16.0pt'>
  <td height=21 style='height:16.0pt'></td>
  <td rowspan=8 class=xl127>JavaScript Objects</td>
  <td colspan=2 rowspan=2 class=xl117 width=260 style='border-right:1.0pt solid black;
  width:195pt'>Keys do not need to be in quotation marks, but must be
  unique.<span style='mso-spacerun:yes'> </span></td>
 </tr>
 <tr height=21 style='mso-height-source:userset;height:16.0pt'>
  <td height=21 style='height:16.0pt'></td>
  <td class=xl93 style='border-top:none'>slice</td>
  <td class=xl95 colspan=3 style='mso-ignore:colspan;border-right:1.0pt solid black'>Extracts
  a section of an array.<span style='mso-spacerun:yes'> 
  </span>Array.slice(start, end);<span style='mso-spacerun:yes'> </span></td>
 </tr>
 <tr height=21 style='mso-height-source:userset;height:16.0pt'>
  <td height=21 style='height:16.0pt'></td>
  <td class=xl93 style='border-top:none'>concat</td>
  <td class=xl95 colspan=3 style='mso-ignore:colspan;border-right:1.0pt solid black'>Combine
  two arrays;<span style='mso-spacerun:yes'>  </span>array = array.concat(arr1,
  arr2);<span style='mso-spacerun:yes'> </span></td>
  <td colspan=2 rowspan=6 class=xl121 width=260 style='border-right:1.0pt solid black;
  width:195pt'>let car = {<br>
    <span style='mso-spacerun:yes'>    </span>color: &quot;red&quot;,<br>
    <span style='mso-spacerun:yes'>    </span>year: 1964, <br>
    <span style='mso-spacerun:yes'>    </span>gas: 10,<br>
    <span style='mso-spacerun:yes'>    </span>drive : function(){ this.gas -=
  10;},<br>
    };<span style='mso-spacerun:yes'> </span></td>
 </tr>
 <tr height=21 style='mso-height-source:userset;height:16.0pt'>
  <td height=21 style='height:16.0pt'></td>
  <td rowspan=2 class=xl107 style='border-top:none'>filter</td>
  <td colspan=3 rowspan=2 class=xl110 width=414 style='border-right:1.0pt solid black;
  width:310pt'>Takes a function to filter data in array.
  array.filter(filterFunction);</td>
 </tr>
 <tr height=21 style='mso-height-source:userset;height:16.0pt'>
  <td height=21 style='height:16.0pt'></td>
  <td rowspan=3 class=xl123 style='border-bottom:1.0pt solid black'>Loops</td>
  <td class=xl90>for loop</td>
  <td class=xl91 width=221 style='width:166pt'>for(var x=0; x&lt;5; x++){<span
  style='mso-spacerun:yes'>  </span>//… }</td>
 </tr>
 <tr height=21 style='mso-height-source:userset;height:16.0pt'>
  <td height=21 style='height:16.0pt'></td>
  <td rowspan=2 class=xl107 style='border-top:none'>map</td>
  <td colspan=3 rowspan=2 class=xl110 width=414 style='border-right:1.0pt solid black;
  width:310pt'>Accepts a function to transform each value.<span
  style='mso-spacerun:yes'>  </span>array.map(mappingFunction);</td>
  <td>for in loop</td>
  <td class=xl65>for(var carIndex in cars){ //…);<span
  style='mso-spacerun:yes'> </span></td>
 </tr>
 <tr height=21 style='mso-height-source:userset;height:16.0pt'>
  <td height=21 style='height:16.0pt'></td>
  <td class=xl66>while loop</td>
  <td class=xl67>while(x &gt; 100){ //… }</td>
 </tr>
 <tr height=21 style='mso-height-source:userset;height:16.0pt'>
  <td height=21 style='height:16.0pt'></td>
  <td class=xl93 style='border-top:none'>indexOf</td>
  <td class=xl95 colspan=3 style='mso-ignore:colspan;border-right:1.0pt solid black'>Locate
  the index of a specific value. Array.indexOf(value);<span
  style='mso-spacerun:yes'> </span></td>
  <td class=xl69></td>
  <td colspan=2 style='mso-ignore:colspan'></td>
 </tr>
 <tr height=21 style='mso-height-source:userset;height:16.0pt'>
  <td height=21 style='height:16.0pt'></td>
  <td rowspan=2 class=xl107 style='border-top:none'>every</td>
  <td colspan=3 rowspan=2 class=xl110 width=414 style='border-right:1.0pt solid black;
  width:310pt'>Returns boolean, true if all elements meet the criteria.
  Array.every(conditionFunction);<span style='mso-spacerun:yes'> </span></td>
  <td rowspan=8 class=xl108 style='border-bottom:1.0pt solid black'>JSON</td>
  <td colspan=2 rowspan=2 class=xl119 width=260 style='border-right:1.0pt solid black;
  width:195pt'>Much like JS Objects, but keys and values must be in double
  quotes.<span style='mso-spacerun:yes'> </span></td>
  <td class=xl69></td>
  <td colspan=2 style='mso-ignore:colspan'></td>
 </tr>
 <tr height=21 style='mso-height-source:userset;height:16.0pt'>
  <td height=21 style='height:16.0pt'></td>
  <td class=xl69></td>
  <td colspan=2 style='mso-ignore:colspan'></td>
 </tr>
 <tr height=21 style='mso-height-source:userset;height:16.0pt'>
  <td height=21 style='height:16.0pt'></td>
  <td rowspan=2 class=xl107 style='border-top:none'>some</td>
  <td colspan=3 rowspan=2 class=xl110 width=414 style='border-right:1.0pt solid black;
  width:310pt'>Returns boolean, true if at least one element meeting
  conditional statement; array.every(conditionalFunction);<span
  style='mso-spacerun:yes'> </span></td>
  <td colspan=2 rowspan=6 class=xl121 width=260 style='border-right:1.0pt solid black;
  border-bottom:1.0pt solid black;width:195pt'>let car = {<br>
    <span style='mso-spacerun:yes'>    </span>&quot;color&quot;:
  &quot;red&quot;,<br>
    <span style='mso-spacerun:yes'>    </span>&quot;year&quot;:
  &quot;1964&quot;, <br>
    <span style='mso-spacerun:yes'>    </span>&quot;gas&quot;: &quot;10&quot;<br>
    };<span style='mso-spacerun:yes'> </span></td>
  <td class=xl69></td>
  <td colspan=2 style='mso-ignore:colspan'></td>
 </tr>
 <tr height=21 style='mso-height-source:userset;height:16.0pt'>
  <td height=21 style='height:16.0pt'></td>
  <td class=xl69></td>
  <td colspan=2 style='mso-ignore:colspan'></td>
 </tr>
 <tr height=21 style='mso-height-source:userset;height:16.0pt'>
  <td height=21 style='height:16.0pt'></td>
  <td class=xl93 style='border-top:none'>toString</td>
  <td class=xl95 colspan=3 style='mso-ignore:colspan;border-right:1.0pt solid black'>Converts
  an array to a string; array.toString();<span
  style='mso-spacerun:yes'> </span></td>
  <td class=xl69></td>
  <td colspan=2 style='mso-ignore:colspan'></td>
 </tr>
 <tr height=21 style='mso-height-source:userset;height:16.0pt'>
  <td height=21 style='height:16.0pt'></td>
  <td class=xl106 style='border-top:none'>join</td>
  <td colspan=3 rowspan=2 class=xl110 width=414 style='border-right:1.0pt solid black;
  border-bottom:1.0pt solid black;width:310pt'>joins all elements into a string
  with comma by default.<span style='mso-spacerun:yes'> 
  </span>Array.join();<span style='mso-spacerun:yes'> </span></td>
  <td class=xl69></td>
  <td colspan=2 style='mso-ignore:colspan'></td>
 </tr>
 <tr height=23 style='height:17.0pt'>
  <td height=23 style='height:17.0pt'></td>
  <td class=xl68>&nbsp;</td>
  <td colspan=3 style='mso-ignore:colspan'></td>
 </tr>
 <tr height=23 style='height:17.0pt'>
  <td height=23 colspan=5 style='height:17.0pt;mso-ignore:colspan'></td>
  <td colspan=3 style='mso-ignore:colspan'></td>
 </tr>
 <![if supportMisalignedColumns]>
 <tr height=0 style='display:none'>
  <td width=87 style='width:65pt'></td>
  <td width=87 style='width:65pt'></td>
  <td width=87 style='width:65pt'></td>
  <td width=196 style='width:147pt'></td>
  <td width=131 style='width:98pt'></td>
  <td width=165 style='width:124pt'></td>
  <td width=87 style='width:65pt'></td>
  <td width=173 style='width:130pt'></td>
  <td width=123 style='width:92pt'></td>
  <td width=87 style='width:65pt'></td>
  <td width=221 style='width:166pt'></td>
 </tr>
 <![endif]>
</table>

</body>

</html>
