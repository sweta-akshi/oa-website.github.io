<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:x="urn:schemas-microsoft-com:office:excel"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=utf-8">
<meta name=ProgId content=Excel.Sheet>
<meta name=Generator content="Microsoft Excel 15">
<link id=Main-File rel=Main-File href="modernjs.htm">
<link rel=File-List href=filelist.xml>
<link rel=Stylesheet href=stylesheet.css>
<style>
<!--table
	{mso-displayed-decimal-separator:"\.";
	mso-displayed-thousand-separator:"\,";}
@page
	{margin:.75in .7in .75in .7in;
	mso-header-margin:.3in;
	mso-footer-margin:.3in;}
-->
</style>
<![if !supportTabStrip]><script language="JavaScript">
<!--
function fnUpdateTabs()
 {
  if (parent.window.g_iIEVer>=4) {
   if (parent.document.readyState=="complete"
    && parent.frames['frTabs'].document.readyState=="complete")
   parent.fnSetActiveSheet(0);
  else
   window.setTimeout("fnUpdateTabs();",150);
 }
}

if (window.name!="frSheet")
 window.location.replace("./modernjs.htm");
else
 fnUpdateTabs();
//-->
</script>
<![endif]>
</head>

<body link="#0563C1" vlink="#954F72">

<table border=0 cellpadding=0 cellspacing=0 width=1470 style='border-collapse:
 collapse;table-layout:fixed;width:1101pt'>
 <col width=87 style='width:65pt'>
 <col width=187 style='mso-width-source:userset;mso-width-alt:5973;width:140pt'>
 <col width=87 style='width:65pt'>
 <col width=220 style='mso-width-source:userset;mso-width-alt:7040;width:165pt'>
 <col width=79 style='mso-width-source:userset;mso-width-alt:2517;width:59pt'>
 <col width=87 style='width:65pt'>
 <col width=276 style='mso-width-source:userset;mso-width-alt:8832;width:207pt'>
 <col width=139 style='mso-width-source:userset;mso-width-alt:4437;width:104pt'>
 <col width=87 style='width:65pt'>
 <col width=221 style='mso-width-source:userset;mso-width-alt:7082;width:166pt'>
 <tr height=21 style='height:16.0pt'>
  <td height=21 width=87 style='height:16.0pt;width:65pt'></td>
  <td width=187 style='width:140pt'></td>
  <td width=87 style='width:65pt'></td>
  <td width=220 style='width:165pt'></td>
  <td width=79 style='width:59pt'></td>
  <td width=87 style='width:65pt'></td>
  <td width=276 style='width:207pt'></td>
  <td width=139 style='width:104pt'></td>
  <td width=87 style='width:65pt'></td>
  <td width=221 style='width:166pt'></td>
 </tr>
 <tr height=43 style='mso-height-source:userset;height:32.0pt'>
  <td height=43 style='height:32.0pt'></td>
  <td colspan=9 class=xl65>Modern JavaScript</td>
 </tr>
 <tr height=28 style='height:21.0pt'>
  <td height=28 style='height:21.0pt'></td>
  <td colspan=3 class=xl115 style='border-right:1.0pt solid black'>Arrow
  Functions</td>
  <td colspan=3 class=xl115 style='border-right:1.0pt solid black;border-left:
  none'>Modern Array Methods</td>
  <td colspan=3 class=xl115 style='border-right:1.0pt solid black;border-left:
  none'>Error Handling</td>
 </tr>
 <tr height=43 style='mso-height-source:userset;height:32.0pt'>
  <td height=43 style='height:32.0pt'></td>
  <td colspan=3 class=xl112 width=494 style='border-right:1.0pt solid black;
  width:370pt'>Introduced in ES5, a simplier syntax to writing functions.</td>
  <td colspan=3 class=xl124 width=442 style='border-right:1.0pt solid black;
  border-left:none;width:331pt'>Introduced in ES5, more versatile methods that
  developers used to use third party libs for (underscore, lodash) None mutate.</td>
  <td rowspan=4 class=xl86>try/catch</td>
  <td colspan=2 rowspan=4 class=xl72 width=308 style='border-right:1.0pt solid black;
  width:231pt'>
  <meta charset=utf-8>
  <span style='box-sizing: border-box'>try {<br>
    <span style='mso-spacerun:yes'>  </span>// our code which might encounter
  an error<br>
    } catch (err) {<br>
    <span style='mso-spacerun:yes'>  </span>// error handling<br>
    }</span></td>
 </tr>
 <tr height=24 style='mso-height-source:userset;height:18.0pt'>
  <td height=24 style='height:18.0pt'></td>
  <td rowspan=4 class=xl86>basic</td>
  <td colspan=2 style='mso-ignore:colspan'>drop the keyword function, must
  assign to var.</td>
  <td rowspan=2 class=xl86>indexOf</td>
  <td colspan=2 class=xl66 width=363 style='border-right:1.0pt solid black;
  width:272pt'>find the index of a value.<span
  style='mso-spacerun:yes'> </span></td>
 </tr>
 <tr height=27 style='mso-height-source:userset;height:20.0pt'>
  <td height=27 style='height:20.0pt'></td>
  <td colspan=2 rowspan=3 class=xl72 width=307 style='width:230pt'>let add =
  (n1, n2) =&gt; {<br>
    <span style='mso-spacerun:yes'>    </span>return n1 + n2; <br>
    }</td>
  <td colspan=2 class=xl66 width=363 style='border-right:1.0pt solid black;
  width:272pt'>
  <meta charset=utf-8>
  <span style='box-sizing: border-box'>const peachIndex =
  fruits.indexOf(&quot;peach&quot;);</span></td>
 </tr>
 <tr height=27 style='mso-height-source:userset;height:20.0pt'>
  <td height=27 style='height:20.0pt'></td>
  <td rowspan=2 class=xl86>filter</td>
  <td colspan=2 class=xl66 width=363 style='border-right:1.0pt solid black;
  width:272pt'>Filters an array based on given filtering function.<span
  style='mso-spacerun:yes'> </span></td>
 </tr>
 <tr height=29 style='mso-height-source:userset;height:22.0pt'>
  <td height=29 style='height:22.0pt'></td>
  <td colspan=2 class=xl66 width=363 style='border-right:1.0pt solid black;
  width:272pt'>
  <meta charset=utf-8>
  <span style='box-sizing: border-box'>const negativeValues = values.filter(v
  =&gt; v &lt; 0);</span></td>
  <td colspan=3 class=xl121 style='border-right:1.0pt solid black;border-left:
  none'>JavaScript Error Types</td>
 </tr>
 <tr height=31 style='mso-height-source:userset;height:23.0pt'>
  <td height=31 style='height:23.0pt'></td>
  <td rowspan=4 class=xl69>remove parens</td>
  <td colspan=2 style='mso-ignore:colspan'>if only one parameter</td>
  <td rowspan=2 class=xl86>find</td>
  <td colspan=2 class=xl66 width=363 style='border-right:1.0pt solid black;
  width:272pt'>Find<font class="font5"> first</font><font class="font0">
  occurance that matches given function.</font></td>
  <td rowspan=2 class=xl88 width=139 style='width:104pt'>
  <meta charset=utf-8>
  SyntaxError</td>
  <td colspan=2 rowspan=2 class=xl66 width=308 style='border-right:1.0pt solid black;
  width:231pt'>Raised when a syntax error occurs while parsing JavaScript code.</td>
 </tr>
 <tr height=43 style='mso-height-source:userset;height:32.0pt'>
  <td height=43 style='height:32.0pt'></td>
  <td colspan=2 rowspan=3 class=xl72 width=307 style='width:230pt'>let isEven =
  n1 =&gt; {<br>
    <span style='mso-spacerun:yes'>    </span>return n1 % 2 === 0;<br>
    }</td>
  <td colspan=2 class=xl72 width=363 style='border-right:1.0pt solid black;
  width:272pt'>const selectedFruit = fruits.find(fruit =&gt; fruit ===
  &quot;orange&quot;);</td>
 </tr>
 <tr height=28 style='mso-height-source:userset;height:21.0pt'>
  <td height=28 style='height:21.0pt'></td>
  <td rowspan=4 class=xl86>forEach</td>
  <td colspan=2 class=xl66 width=363 style='border-right:1.0pt solid black;
  width:272pt'>
  <meta charset=utf-8>
  <span style='font-variant-ligatures: normal;font-variant-caps: normal;
  orphans: 2;widows: 2;-webkit-text-stroke-width: 0px;text-decoration-style: initial;
  text-decoration-color: initial'>executes a provided function once per Array
  element.</span></td>
  <td class=xl71 style='border-left:none'>ReferenceError</td>
  <td colspan=2 class=xl66 width=308 style='border-right:1.0pt solid black;
  width:231pt'>Raised when an invalid reference is used.</td>
 </tr>
 <tr height=25 style='mso-height-source:userset;height:19.0pt'>
  <td height=25 style='height:19.0pt'></td>
  <td colspan=2 rowspan=3 class=xl72 width=363 style='border-right:1.0pt solid black;
  width:272pt'>arr.forEach(function(item) {<br>
    <span style='mso-spacerun:yes'>    </span>console.log(item);<br>
    });</td>
  <td rowspan=2 class=xl69>TypeError</td>
  <td colspan=2 rowspan=2 class=xl66 width=308 style='border-right:1.0pt solid black;
  width:231pt'>Raised when the type of a variable is not as expected.</td>
 </tr>
 <tr height=28 style='mso-height-source:userset;height:21.0pt'>
  <td height=28 style='height:21.0pt'></td>
  <td rowspan=2 class=xl69 style='border-bottom:1.0pt solid black'>remove curly
  brackets</td>
  <td colspan=2 style='mso-ignore:colspan'>if function is one liner</td>
 </tr>
 <tr height=27 style='mso-height-source:userset;height:20.0pt'>
  <td height=27 style='height:20.0pt'></td>
  <td colspan=2 class=xl87>let isEven = n1 =&gt; return n1 % 2 === 0;<span
  style='mso-spacerun:yes'> </span></td>
  <td rowspan=2 class=xl69 style='border-bottom:1.0pt solid black'>RangeError</td>
  <td colspan=2 rowspan=2 class=xl66 width=308 style='border-right:1.0pt solid black;
  border-bottom:1.0pt solid black;width:231pt'>Raised when a numeric variable
  exceeds its allowed range.</td>
 </tr>
 <tr height=29 style='height:22.0pt'>
  <td height=29 style='height:22.0pt'></td>
  <td colspan=3 class=xl115 style='border-right:1.0pt solid black'>Closures</td>
  <td rowspan=3 class=xl76>map</td>
  <td colspan=2 rowspan=2 class=xl66 width=363 style='width:272pt'>
  <meta charset=utf-8>
  <span style='font-variant-ligatures: normal;font-variant-caps: normal;
  orphans: 2;widows: 2;-webkit-text-stroke-width: 0px;text-decoration-style: initial;
  text-decoration-color: initial'>creates a new array containing transformed
  values from the original array.</span></td>
 </tr>
 <tr height=25 style='mso-height-source:userset;height:19.0pt'>
  <td height=25 style='height:19.0pt'></td>
  <td colspan=3 rowspan=2 class=xl94 width=494 style='border-right:1.0pt solid black;
  width:370pt'>A closure is a function or object that has a special binding to
  one or more variables.</td>
  <td colspan=3 class=xl118 style='border-right:1.0pt solid black'>Promises</td>
 </tr>
 <tr height=21 style='mso-height-source:userset;height:16.0pt'>
  <td height=21 style='height:16.0pt'></td>
  <td colspan=2 style='mso-ignore:colspan'>const squares = values.map(value
  =&gt; value * value);</td>
  <td class=xl101>State</td>
  <td class=xl102>pending</td>
  <td class=xl106>
  <meta charset=utf-8>
  <span style='font-variant-ligatures: normal;font-variant-caps: normal;
  orphans: 2;widows: 2;-webkit-text-stroke-width: 0px;text-decoration-style: initial;
  text-decoration-color: initial'>we are still waiting for the data</span></td>
 </tr>
 <tr height=23 style='mso-height-source:userset;height:17.0pt'>
  <td height=23 style='height:17.0pt'></td>
  <td colspan=3 rowspan=6 class=xl95 width=494 style='border-right:1.0pt solid black;
  border-bottom:.5pt solid black;width:370pt'>function makeAdder(x) {<span
  style='mso-spacerun:yes'>     </span>// makeAdder is a function builder<br>
    <span style='mso-spacerun:yes'>    </span>return function (y) {<span
  style='mso-spacerun:yes'>   </span>// this function closes on `x`<br>
    <span style='mso-spacerun:yes'>        </span>return x + y;<br>
    <span style='mso-spacerun:yes'>    </span>}<br>
    }</td>
  <td rowspan=3 class=xl76 style='border-bottom:1.0pt solid black'>reduce</td>
  <td colspan=2 style='mso-ignore:colspan'>reduces an array to a single value.</td>
  <td class=xl71>&nbsp;</td>
  <td class=xl104 width=87 style='width:65pt'>resolved</td>
  <td class=xl79 width=221 style='width:166pt'>we have successfully received
  the data</td>
 </tr>
 <tr height=21 style='mso-height-source:userset;height:16.0pt'>
  <td height=21 style='height:16.0pt'></td>
  <td colspan=2 rowspan=2 class=xl72 width=363 style='border-bottom:1.0pt solid black;
  width:272pt'>const sum = values.reduce((accumulator, v) =&gt; accumulator +
  v, 0);</td>
  <td class=xl71>&nbsp;</td>
  <td class=xl104 width=87 style='width:65pt'>rejected</td>
  <td class=xl79 width=221 style='width:166pt'>an error has occurred</td>
 </tr>
 <tr height=21 style='mso-height-source:userset;height:16.0pt'>
  <td height=21 style='height:16.0pt'></td>
  <td class=xl71>Callbacks</td>
  <td class=xl104 width=87 style='width:65pt'>resolve</td>
  <td class=xl79 width=221 style='width:166pt'>the success callback</td>
 </tr>
 <tr height=23 style='mso-height-source:userset;height:17.0pt'>
  <td height=23 style='height:17.0pt'></td>
  <td colspan=3 class=xl118 style='border-right:1.0pt solid black;border-left:
  none'>Classes</td>
  <td class=xl71 style='border-left:none'>&nbsp;</td>
  <td class=xl104 width=87 style='width:65pt'>reject</td>
  <td class=xl79 width=221 style='width:166pt'>the error callback</td>
 </tr>
 <tr height=27 style='mso-height-source:userset;height:20.0pt'>
  <td height=27 style='height:20.0pt'></td>
  <td colspan=3 rowspan=10 class=xl97 width=442 style='border-right:1.0pt solid black;
  border-bottom:1.0pt solid black;width:331pt'>function Person(name, job)
  {<br>
    <span style='mso-spacerun:yes'>  </span>this.name = name;<br>
    <span style='mso-spacerun:yes'>  </span>this.job = job;<br>
    }<br>
    Person.prototype.getName = function getName() {<br>
    <span style='mso-spacerun:yes'>  </span>return this.name;<br>
    };<br>
    var goodGuy = new Person(&quot;Jim Gordon&quot;,
  &quot;Commissioner&quot;);<br>
    console.log(goodGuy.getName());<span style='mso-spacerun:yes'>    </span>//
  prints &quot;Jim Gordon&quot;</td>
  <td class=xl71 style='border-left:none'>Chaining</td>
  <td class=xl104 width=87 style='width:65pt'>.then</td>
  <td class=xl79 width=221 style='width:166pt'>do something after a success</td>
 </tr>
 <tr height=21 style='mso-height-source:userset;height:16.0pt'>
  <td height=21 style='height:16.0pt'></td>
  <td class=xl71 style='border-left:none'>&nbsp;</td>
  <td class=xl103>.catch</td>
  <td class=xl79 width=221 style='width:166pt'>do something after a failure</td>
 </tr>
 <tr height=21 style='mso-height-source:userset;height:16.0pt'>
  <td height=21 style='height:16.0pt'></td>
  <td colspan=3 rowspan=8 class=xl95 width=494 style='border-right:1.0pt solid black;
  border-bottom:1.0pt solid black;width:370pt'>function
  makeCounter(initialValue = 0) {<br>
    <span style='mso-spacerun:yes'>    </span>let count = initialValue;<span
  style='mso-spacerun:yes'>    </span>// `count` is our bound (hidden)
  variable<br>
    <br>
    <span style='mso-spacerun:yes'>    </span>return {<span
  style='mso-spacerun:yes'>         </span>// return an object with methods
  that are closures<br>
    <span style='mso-spacerun:yes'>        </span>inc: function () { count +=
  1; },<span style='mso-spacerun:yes'>   </span>// `inc`, and `dec`, are the
  API<br>
    <span style='mso-spacerun:yes'>        </span>dec: function () { count -=
  1; },<span style='mso-spacerun:yes'>   </span>// they provide controlled
  access to `count`<br>
    <span style='mso-spacerun:yes'>       </span>};<br>
    }</td>
  <td colspan=3 rowspan=11 class=xl107 width=447 style='border-right:1.0pt solid black;
  border-bottom:1.0pt solid black;width:335pt'>const p = new Promise((resolve,
  reject) =&gt; {<br>
    <span style='mso-spacerun:yes'>    </span>dataObj =
  db.getData(params);<br>
    <span style='mso-spacerun:yes'>    </span>if(dataObj.err) {<span
  style='mso-spacerun:yes'>  </span><br>
    <span style='mso-spacerun:yes'>        </span>reject(dataObj.err);<br>
    <span style='mso-spacerun:yes'>     </span>} else {<br>
    <span style='mso-spacerun:yes'>           </span>resolve(dataObj.data);
  <br>
    <span style='mso-spacerun:yes'>    </span>} <br>
    }<br>
    p.then( data =&gt; {<br>
    <span style='mso-spacerun:yes'>    </span>// display the data on the
  screen<br>
    }). catch( err =&gt; { // display error on the screen});<span
  style='mso-spacerun:yes'> </span></td>
 </tr>
 <tr height=21 style='mso-height-source:userset;height:16.0pt'>
  <td height=21 style='height:16.0pt'></td>
 </tr>
 <tr height=21 style='mso-height-source:userset;height:16.0pt'>
  <td height=21 style='height:16.0pt'></td>
 </tr>
 <tr height=21 style='mso-height-source:userset;height:16.0pt'>
  <td height=21 style='height:16.0pt'></td>
 </tr>
 <tr height=21 style='mso-height-source:userset;height:16.0pt'>
  <td height=21 style='height:16.0pt'></td>
 </tr>
 <tr height=21 style='mso-height-source:userset;height:16.0pt'>
  <td height=21 style='height:16.0pt'></td>
 </tr>
 <tr height=21 style='mso-height-source:userset;height:16.0pt'>
  <td height=21 style='height:16.0pt'></td>
 </tr>
 <tr height=21 style='mso-height-source:userset;height:16.0pt'>
  <td height=21 style='height:16.0pt'></td>
 </tr>
 <tr height=21 style='mso-height-source:userset;height:16.0pt'>
  <td height=21 colspan=4 style='height:16.0pt;mso-ignore:colspan'></td>
  <td class=xl68 width=79 style='width:59pt'></td>
  <td class=xl68 width=87 style='width:65pt'></td>
  <td class=xl79 width=276 style='width:207pt'>&nbsp;</td>
 </tr>
 <tr height=21 style='mso-height-source:userset;height:16.0pt'>
  <td height=21 style='height:16.0pt'></td>
  <td class=xl78></td>
  <td class=xl68 width=87 style='width:65pt'></td>
  <td class=xl68 width=220 style='width:165pt'></td>
  <td class=xl68 width=79 style='width:59pt'></td>
  <td class=xl68 width=87 style='width:65pt'></td>
  <td class=xl79 width=276 style='width:207pt'>&nbsp;</td>
 </tr>
 <tr height=21 style='mso-height-source:userset;height:16.0pt'>
  <td height=21 style='height:16.0pt'></td>
  <td class=xl78></td>
  <td class=xl68 width=87 style='width:65pt'></td>
  <td class=xl68 width=220 style='width:165pt'></td>
  <td class=xl68 width=79 style='width:59pt'></td>
  <td class=xl68 width=87 style='width:65pt'></td>
  <td class=xl79 width=276 style='width:207pt'>&nbsp;</td>
 </tr>
 <tr height=21 style='mso-height-source:userset;height:16.0pt'>
  <td height=21 style='height:16.0pt'></td>
  <td class=xl70></td>
  <td></td>
  <td></td>
  <td class=xl78></td>
  <td class=xl68 width=87 style='width:65pt'></td>
  <td class=xl68 width=276 style='width:207pt'></td>
  <td class=xl78></td>
  <td></td>
  <td></td>
 </tr>
 <tr height=21 style='mso-height-source:userset;height:16.0pt'>
  <td height=21 style='height:16.0pt'></td>
  <td class=xl70></td>
  <td class=xl68 width=87 style='width:65pt'></td>
  <td class=xl68 width=220 style='width:165pt'></td>
  <td class=xl78></td>
  <td class=xl68 width=87 style='width:65pt'></td>
  <td class=xl68 width=276 style='width:207pt'></td>
  <td class=xl78></td>
  <td></td>
  <td></td>
 </tr>
 <tr height=21 style='mso-height-source:userset;height:16.0pt'>
  <td height=21 style='height:16.0pt'></td>
  <td></td>
  <td class=xl68 width=87 style='width:65pt'></td>
  <td class=xl68 width=220 style='width:165pt'></td>
  <td class=xl78></td>
  <td class=xl68 width=87 style='width:65pt'></td>
  <td class=xl68 width=276 style='width:207pt'></td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
 <tr height=21 style='mso-height-source:userset;height:16.0pt'>
  <td height=21 style='height:16.0pt'></td>
  <td></td>
  <td></td>
  <td></td>
  <td class=xl78></td>
  <td class=xl68 width=87 style='width:65pt'></td>
  <td class=xl68 width=276 style='width:207pt'></td>
  <td></td>
  <td></td>
  <td></td>
 </tr>
 <![if supportMisalignedColumns]>
 <tr height=0 style='display:none'>
  <td width=87 style='width:65pt'></td>
  <td width=187 style='width:140pt'></td>
  <td width=87 style='width:65pt'></td>
  <td width=220 style='width:165pt'></td>
  <td width=79 style='width:59pt'></td>
  <td width=87 style='width:65pt'></td>
  <td width=276 style='width:207pt'></td>
  <td width=139 style='width:104pt'></td>
  <td width=87 style='width:65pt'></td>
  <td width=221 style='width:166pt'></td>
 </tr>
 <![endif]>
</table>

</body>

</html>
