<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Orange Academy</title>
    <link>/</link>
    <description>Recent content on Orange Academy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="./index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Access Request Portal</title>
      <link>/path-to-production/dev-environment/arp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/path-to-production/dev-environment/arp/</guid>
      <description>Access Request There are two main resources to which you will need to request access before you can get far with the development of anything at The Home Depot.</description>
    </item>
    
    <item>
      <title>Build a Complete React App</title>
      <link>/react/foundations/misc/build-a-complete-react-app/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/foundations/misc/build-a-complete-react-app/</guid>
      <description>Concepts  Use Component Composition (stateful and presentational components) Work with the React useEffect hook to fetch data from an API Work with react-router to create routes and navigate between views  Introduction Now that we have covered all of the fundamentals of React, we are going to build a complete client-side application that makes use of the following:</description>
    </item>
    
    <item>
      <title>Concourse Setup</title>
      <link>/path-to-production/cicd/concourse-setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/path-to-production/cicd/concourse-setup/</guid>
      <description>Objectives Outline the steps to getting a basic Concourse CICD server set up.
 Pre Requisites You will need to have the following done before you can request a concourse server:</description>
    </item>
    
    <item>
      <title>Creating an RFC for PCF</title>
      <link>/path-to-production/change-management/creating-a-change/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/path-to-production/change-management/creating-a-change/</guid>
      <description>Before you Open a Request for Change Before you open the change, you will need:</description>
    </item>
    
    <item>
      <title>Cyber Security General Onboarding</title>
      <link>/onboarding/cyber-security/getting-started/general/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/onboarding/cyber-security/getting-started/general/</guid>
      <description>General Cyber Onboarding  General Cyber Onboarding Course Proposal  Module 1 (Labeled Section A): Why it’s important to keep information secure   Module Success: Be an advocate:</description>
    </item>
    
    <item>
      <title>Cybersecurity Specific Onboarding</title>
      <link>/onboarding/cyber-security/getting-started/cyber-specific/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/onboarding/cyber-security/getting-started/cyber-specific/</guid>
      <description>Specific Cyber Onboarding  Specific Cyber Onboarding Course Proposal  Module 1: The Cyber mission – protect what matters most.</description>
    </item>
    
    <item>
      <title>Django Introduction</title>
      <link>/python/web-framework/django_intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/web-framework/django_intro/</guid>
      <description>What is Django ¶ Django is a high-level Python Web framework that encourages rapid development and clean, pragmatic design.</description>
    </item>
    
    <item>
      <title>Git Branching Out</title>
      <link>/software-eng-essentials/git-pillars/git-branching-out/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/git-pillars/git-branching-out/</guid>
      <description>The following OM content has been curated to create a course with topics specific to increasing Collaboration and work Flow</description>
    </item>
    
    <item>
      <title>Intro to NPM</title>
      <link>/javascript/nodejs/getting-started/npm-modules/intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/nodejs/getting-started/npm-modules/intro/</guid>
      <description>Learning Objectives Concepts  Demo setting up projects with npm and yarn Explain semantic versioning of dependencies Showcase using npm scripts Discuss Encapsulation with ES6 Modules  Skills  Use dependencies in your projects Write Modular Code  npm &amp;amp; yarn Node uses a package management system to distribute open-source modules.</description>
    </item>
    
    <item>
      <title>Paved Road</title>
      <link>/path-to-production/tech-stack/paved-road/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/path-to-production/tech-stack/paved-road/</guid>
      <description>Knowing What Technology to Use When deciding to develop a thing, you&amp;rsquo;ll want an idea of what technologies you are going to use to develop and support that thing.</description>
    </item>
    
    <item>
      <title>Provisioning PCF</title>
      <link>/path-to-production/platforms/provision_pcf/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/path-to-production/platforms/provision_pcf/</guid>
      <description>Getting Set Up on Pivotal Cloud Foundry Installing the Cloud Foundry CLI Binary Download For just about everything you want to do with Cloud Foundry, you can do with the cli.</description>
    </item>
    
    <item>
      <title>RESTful APIs</title>
      <link>/software-eng-essentials/restful-api/rest/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/restful-api/rest/</guid>
      <description>Learning Objectives  Describe what a RESTful API does Map the CRUD operations to a set of RESTful endpoints  What is REST?</description>
    </item>
    
    <item>
      <title>Syllabus</title>
      <link>/javascript/pillars/resiliency-patterns/syllabus/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/pillars/resiliency-patterns/syllabus/</guid>
      <description>Topics Course Description Details Requirements Prerequisites Outcomes   Schedule   Course Description Details Resiliency is the ability of a system to gracefully handle and recover from failures.</description>
    </item>
    
    <item>
      <title>Syllabus</title>
      <link>/javascript/pillars/restful-api-express-node/syllabus/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/pillars/restful-api-express-node/syllabus/</guid>
      <description>Learn how to build RESTful APIs with NodeJS and Express.
 Details RESTful APIs have become foundational to building web applications.</description>
    </item>
    
    <item>
      <title>The Twelve-Factor App</title>
      <link>/path-to-production/before-you-build/12factor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/path-to-production/before-you-build/12factor/</guid>
      <description>The Twelve-Factor App the set of best practices and standards for producing cloud native apps. By implementing the 12 Factor App, we can have scalable, maintainable, and portable services.</description>
    </item>
    
    <item>
      <title>Web Scraping Tutorial</title>
      <link>/python/web_scraping/scrapy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/web_scraping/scrapy/</guid>
      <description>Source
Scrapy Tutorial — Scrapy 1.5.0 documentation In this tutorial, we&amp;rsquo;ll assume that Scrapy is already installed on your system.</description>
    </item>
    
    <item>
      <title>Choosing your Data Solution</title>
      <link>/path-to-production/tech-stack/data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/path-to-production/tech-stack/data/</guid>
      <description>Data Classification Before you choose a data service, you will need to understand the data classification under which the data for your application falls.</description>
    </item>
    
    <item>
      <title>Intro to FP</title>
      <link>/react/foundations/misc/intro-to-fp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/foundations/misc/intro-to-fp/</guid>
      <description>An brief introduction to Functional Programming
 Topics 1. Introduction 2. Example - Big Tipper 2.</description>
    </item>
    
    <item>
      <title>Labs for NPM</title>
      <link>/javascript/nodejs/getting-started/npm-modules/intro-labs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/nodejs/getting-started/npm-modules/intro-labs/</guid>
      <description>Lab 1 - Installing and Using Node Packages  Create a new project named loggerApp   Make sure to create new directory and cd into it</description>
    </item>
    
    <item>
      <title>Node JS: An Introduction</title>
      <link>/javascript/nodejs/getting-started/intro-to-node/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/nodejs/getting-started/intro-to-node/</guid>
      <description>Learning Objectives Concepts  Explain what Node.js is &amp;amp; why it exists Compare synchronous and asynchronous code execution Explain the advantages of asynchronous I/O  Skills  Write a simple JavaScript program and execute it with Node.</description>
    </item>
    
    <item>
      <title>Path to an Approved Pipeline</title>
      <link>/path-to-production/cicd/pipeline-stages/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/path-to-production/cicd/pipeline-stages/</guid>
      <description>Objectives To give a description of the steps required for a fully automated pipeline.
You will learn:</description>
    </item>
    
    <item>
      <title>Requesting a Sub-Experience</title>
      <link>/path-to-production/before-you-build/subexp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/path-to-production/before-you-build/subexp/</guid>
      <description>At The Home Depot, a group of related products falls under what we call an Experience</description>
    </item>
    
    <item>
      <title>Syllabus</title>
      <link>/react/foundations/syllabus/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/foundations/syllabus/</guid>
      <description>Preflight Checklist 🛫 Welcome to Foundations of React! 👋
👩‍✈️Before the workshop starts, please go over this preflight checklist.</description>
    </item>
    
    <item>
      <title>Tools and Editors</title>
      <link>/path-to-production/dev-environment/tools/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/path-to-production/dev-environment/tools/</guid>
      <description>Tools and Editors This section covers some of the most common tools that you will need to be immediately successful here at The Home Depot.</description>
    </item>
    
    <item>
      <title>Buffers &amp; Streams</title>
      <link>/javascript/nodejs/advanced/stdin-stdout-buffers-streams/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/nodejs/advanced/stdin-stdout-buffers-streams/</guid>
      <description>STDIN / STDOUT Focusing on the process object in node, we&amp;rsquo;ll go over what stdin and stdout do.</description>
    </item>
    
    <item>
      <title>ES2015 Modules</title>
      <link>/javascript/nodejs/getting-started/npm-modules/es2015-modules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/nodejs/getting-started/npm-modules/es2015-modules/</guid>
      <description>ES2015 introduced a cleaner syntax for modules which consist of export and import statements.
According to Mozilla&amp;hellip;</description>
    </item>
    
    <item>
      <title>Getting Started With an Architecture Security Assessment</title>
      <link>/path-to-production/before-you-build/asa/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/path-to-production/before-you-build/asa/</guid>
      <description>Part of getting an application to production, or prior to significant changes in an application, is to have it reviewed and approved by security.</description>
    </item>
    
    <item>
      <title>Getting Started With Postman</title>
      <link>/javascript/nodejs/advanced/postman/postman-getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/nodejs/advanced/postman/postman-getting-started/</guid>
      <description>Learning Objectives Concepts  Postman App Use Explanation of API&amp;rsquo;s, SOAP, and REST Making a Simple Postman Request  Getting started with the Postman App What is Postman?</description>
    </item>
    
    <item>
      <title>Messaging Options</title>
      <link>/path-to-production/tech-stack/messaging/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/path-to-production/tech-stack/messaging/</guid>
      <description>PubSub Through Service Catalog What is Pub/Sub?
 Cloud Pub/Sub is a scalable, durable, event ingestion and delivery system that supports the publish-subscribe pattern at large and small scales.</description>
    </item>
    
    <item>
      <title>Regex in Python</title>
      <link>/software-eng-essentials/fundamentals-of-regex/python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/fundamentals-of-regex/python/</guid>
      <description>Regex in the context of Python Skills  Basics of Regex Intermediate Regex  Basics of Regex Anchors    ^ $     ^Harry : Starts with the word &amp;lsquo;Harry&amp;rsquo;.</description>
    </item>
    
    <item>
      <title>The OS Module</title>
      <link>/javascript/nodejs/getting-started/node-core-modules/os-module/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/nodejs/getting-started/node-core-modules/os-module/</guid>
      <description>Learning Objectives Concepts  Retrieving information from the underlying system using Node  Skills  Learn to use the os module and its objects  Operating system module The Node.</description>
    </item>
    
    <item>
      <title>Choosing a CICD Solution</title>
      <link>/path-to-production/tech-stack/cicd-options/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/path-to-production/tech-stack/cicd-options/</guid>
      <description>CICD Options In addition to delivering value, we want to be able to be able to deliver quickly.</description>
    </item>
    
    <item>
      <title>Labs for OS Module</title>
      <link>/javascript/nodejs/getting-started/node-core-modules/os-module-labs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/nodejs/getting-started/node-core-modules/os-module-labs/</guid>
      <description>This lab will have you use the os module and its objects to retrieve and interact with system information.</description>
    </item>
    
    <item>
      <title>Labs for stdin/stdout with Buffers &amp; Streams</title>
      <link>/javascript/nodejs/advanced/stdin-stdout-buffers-streams-labs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/nodejs/advanced/stdin-stdout-buffers-streams-labs/</guid>
      <description>Lab 1 – stdin &amp;amp; stdout We&amp;rsquo;ll create a number guessing game for our lab.</description>
    </item>
    
    <item>
      <title>Regex in Java</title>
      <link>/software-eng-essentials/fundamentals-of-regex/java/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/fundamentals-of-regex/java/</guid>
      <description>Regex in the context of Java Skills  Basics of Regex Intermediate Regex  Basics of Regex Anchors    ^ $     ^Harry : Starts with the word &amp;lsquo;Harry&amp;rsquo;.</description>
    </item>
    
    <item>
      <title>Testing with Postman</title>
      <link>/javascript/nodejs/advanced/postman/postman-sports-team-api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/nodejs/advanced/postman/postman-sports-team-api/</guid>
      <description>Learning Objectives Concepts  Using the Postman App to exchange data with a local API Create collections of multiple API requests  Skills  Perform CRUD activities with and API resource Bundle several API requests together to create a collection  Review of CRUD Besides reading the data from a API interaction, if the APIs endpoint allow, we can also create data objects, update data objects and delete data objects from an APIs resource.</description>
    </item>
    
    <item>
      <title>Databases and Golang</title>
      <link>/golang/databases/database-intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/databases/database-intro/</guid>
      <description>We are going to go over how to interact with multiple databases in Go. Throughout the lessons, we are going to use a Hexagonal architecture.</description>
    </item>
    
    <item>
      <title>Git Information with git log</title>
      <link>/software-eng-essentials/git-pillars/git-log/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/git-pillars/git-log/</guid>
      <description>Git Logs git log provides the ability to see the history of commits on a repo.</description>
    </item>
    
    <item>
      <title>Hello Go</title>
      <link>/golang/foundations/hello-go/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/foundations/hello-go/</guid>
      <description>What Is Go?    Go (aka Golang) was created by Google in 2007 and released to the public in 2009.</description>
    </item>
    
    <item>
      <title>Intro to Hooks</title>
      <link>/custom-workshops/frontend-at-thd/react-crash-course/intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/custom-workshops/frontend-at-thd/react-crash-course/intro/</guid>
      <description>Concepts  Introduce React hooks and how they simplify your React code Understand the advantages of using hooks over writing JavaScript class components  What Are Hooks Hooks were added to React in v16.</description>
    </item>
    
    <item>
      <title>Intro to Hooks</title>
      <link>/react/pillars/hooks/intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/hooks/intro/</guid>
      <description>Concepts  Introduce React hooks and how they simplify your React code Understand the advantages of using hooks over writing JavaScript class components  What Are Hooks Hooks were added to React in v16.</description>
    </item>
    
    <item>
      <title>Intro to Knex</title>
      <link>/javascript/nodejs/advanced/express-and-bookshelf/knex/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/nodejs/advanced/express-and-bookshelf/knex/</guid>
      <description>Learning Objectives Concepts  Explain how Knex simplifies access to a relational database Explain migration scripts Explain seeding a database  Skills  Writing a knexfile that defines how knex connects to a database Create database migrations scripts Create seed files Use the Knex API to create SELECT, INSERT, UPDATE, and DELETE SQL statements.</description>
    </item>
    
    <item>
      <title>Labs for Postman</title>
      <link>/javascript/nodejs/advanced/postman/postman-lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/nodejs/advanced/postman/postman-lab/</guid>
      <description>Learning Objectives Concepts  Use Postman to test the endpoints of the Store Data API  Loading the Store Data API Clone the following repository from Github:</description>
    </item>
    
    <item>
      <title>Node Refresher</title>
      <link>/javascript/pillars/restful-api-express-node/node-refresher/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/pillars/restful-api-express-node/node-refresher/</guid>
      <description>1. Learning Objectives 1.1. Concepts   Understand that Node.js is basically just a runtime environment that can run JavaScript</description>
    </item>
    
    <item>
      <title>NoSQL vs SQL Databases</title>
      <link>/python/nonrelational-db/nosql-vs-sql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/nonrelational-db/nosql-vs-sql/</guid>
      <description>Learning Objectives  Understanding the key differences between relational and nonrelational databases Understanding the use cases for relational vs.</description>
    </item>
    
    <item>
      <title>Regex in JavaScript</title>
      <link>/software-eng-essentials/fundamentals-of-regex/javascript/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/fundamentals-of-regex/javascript/</guid>
      <description>During this course, feel free to use the console of a browser, jsfiddle, codepen, repl.it or a JS file in your favorite text editor.</description>
    </item>
    
    <item>
      <title>Syllabus</title>
      <link>/react/pillars/advanced-state-mgmt/syllabus/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/advanced-state-mgmt/syllabus/</guid>
      <description>Advanced State Management in React
 Topics 1. Lessons 2. Labs &amp;amp; Exercises 3. Additional Resources   1.</description>
    </item>
    
    <item>
      <title>Syllabus</title>
      <link>/react/pillars/testing/react-testing-library/syllabus/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/testing/react-testing-library/syllabus/</guid>
      <description>Learn how to test React components with the React Testing Library
 Lessons Testing and Tools  Intro to Testing</description>
    </item>
    
    <item>
      <title>Syllabus</title>
      <link>/react/pillars/testing/tdd/syllabus/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/testing/tdd/syllabus/</guid>
      <description>Learn how to do test-driven development (TDD) of React components with Enzyme.
 Lessons  Intro to Testing</description>
    </item>
    
    <item>
      <title>The Path Module</title>
      <link>/javascript/nodejs/getting-started/node-core-modules/path-module/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/nodejs/getting-started/node-core-modules/path-module/</guid>
      <description>Path module  The path module provides a way of working with directories and file paths.</description>
    </item>
    
    <item>
      <title>HTTP Requests</title>
      <link>/javascript/nodejs/advanced/axios-and-fetch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/nodejs/advanced/axios-and-fetch/</guid>
      <description>Concepts  Sending HTTP Requests Handling HTTP Responses  Skills  Using the Fetch API for sending HTTP requests and handling HTTP responses Using the axios library for sending HTTP requests and handling HTTP responses Handling errors with either the Fetch API or axios  API Communications  Making external calls to other apps and services is very common  Each call has a request from your app and a response from the external service There are helpful tools to handle these requests and responses: axios and fetch api    Fetch  Fetch is &amp;ldquo;an easy, logical way to fetch resources asynchronously across the network.</description>
    </item>
    
    <item>
      <title>Regex in SQL</title>
      <link>/software-eng-essentials/fundamentals-of-regex/sql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/fundamentals-of-regex/sql/</guid>
      <description>Regex in the context of SQL Skills  Basics of Regex Intermediate Regex  Basics of Regex Anchors    ^ $     ^Harry : Starts with the word &amp;lsquo;Harry&amp;rsquo;.</description>
    </item>
    
    <item>
      <title>The Path Module Labs</title>
      <link>/javascript/nodejs/getting-started/node-core-modules/path-module-labs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/nodejs/getting-started/node-core-modules/path-module-labs/</guid>
      <description>Path module exercise  Create a new path-exercise.js file. Copy and paste the code below into the new file:  const userObj = JSON.</description>
    </item>
    
    <item>
      <title>Basic Sed</title>
      <link>/software-eng-essentials/fundamentals-of-regex/basicsed/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/fundamentals-of-regex/basicsed/</guid>
      <description>indexduction SED stands for Stream editor. It was created exclusively for executing scripts. Thus all the input you feed into it passes through and goes out to STDOUT unless piped to another command.</description>
    </item>
    
    <item>
      <title>Create a Node Server</title>
      <link>/javascript/pillars/restful-api-express-node/node-refresher-lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/pillars/restful-api-express-node/node-refresher-lab/</guid>
      <description>Create a Node.JS server hosted on local host 3000   Use the patterns you see on Node Refresher 3.</description>
    </item>
    
    <item>
      <title>Labs for AJAX and Fetch</title>
      <link>/javascript/nodejs/advanced/ajax-and-fetch-lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/nodejs/advanced/ajax-and-fetch-lab/</guid>
      <description>LAB - Working with AJAX and Fetch Use fetch to get the following data from the JSON Placeholder API</description>
    </item>
    
    <item>
      <title>The FS Module</title>
      <link>/javascript/nodejs/getting-started/node-core-modules/fs-module/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/nodejs/getting-started/node-core-modules/fs-module/</guid>
      <description>Learning Objectives Concepts  Using Node to interact with the file system.  Skills  Learn to use the fs module Reading Receiving arguments  File system module Node can interact with files on your system.</description>
    </item>
    
    <item>
      <title>Cumulative Lab for Node and Express API Pillar</title>
      <link>/javascript/pillars/restful-api-express-node/cumulative-lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/pillars/restful-api-express-node/cumulative-lab/</guid>
      <description>Learning Objectives Concepts   RESTful routing using Express
  Happy path and Sad path return codes</description>
    </item>
    
    <item>
      <title>InquirerJS</title>
      <link>/javascript/nodejs/advanced/inquirer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/nodejs/advanced/inquirer/</guid>
      <description>What is Inquirer.js?  A collection of common interactive command line user interfaces. It eases the process of asking end user questions, parsing, validating answers, managing hierarchical prompts and providing error feedback.</description>
    </item>
    
    <item>
      <title>Labs for FS Module</title>
      <link>/javascript/nodejs/getting-started/node-core-modules/fs-module-labs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/nodejs/getting-started/node-core-modules/fs-module-labs/</guid>
      <description>Lab 1 - I/O with fs In your main.js (or app.js) file of the car module from our previous lab…​</description>
    </item>
    
    <item>
      <title>Error Handling</title>
      <link>/javascript/nodejs/getting-started/node-core-modules/error-handling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/nodejs/getting-started/node-core-modules/error-handling/</guid>
      <description>Learning Objectives Concepts  Error handling in Node.  Skills  Learn to write an error-first callback.</description>
    </item>
    
    <item>
      <title>Intro</title>
      <link>/software-eng-essentials/command-line-bash/intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/command-line-bash/intro/</guid>
      <description>Objectives  Understand why the Unix Command Line and bash scripting are important skills What we are going to do How we are going to do it  Why learn the Unix Command Line and Bash Scripting?</description>
    </item>
    
    <item>
      <title>Labs for InquirerJS</title>
      <link>/javascript/nodejs/advanced/inquirer-labs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/nodejs/advanced/inquirer-labs/</guid>
      <description>Lab 00 - Your Turn from Scratch  Create a repo on GitHub Create a new program using inquirer that will ask your neighbor 5 different questions using a minimum of 5 different prompt types.</description>
    </item>
    
    <item>
      <title>Virtual Environments</title>
      <link>/python/foundation/virt_env/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/foundation/virt_env/</guid>
      <description>What is a Virtual Environment? A virtual environment is a tool to maintain separate space for a project with its dependencies and libraries in one place.</description>
    </item>
    
    <item>
      <title>Automating Python Scripts</title>
      <link>/python/automation/automating-python-interactions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/automation/automating-python-interactions/</guid>
      <description>Learning Objectives  Automate processes with crons using both the terminal and Python Create, read, update and delete cron jobs in Python  There are many times when you need to run a shell script or command at regular intervals.</description>
    </item>
    
    <item>
      <title>Basic JavaScript Fact Sheet</title>
      <link>/javascript/foundations/cheatsheets/basicjs/basic-js/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/cheatsheets/basicjs/basic-js/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Basics</title>
      <link>/software-eng-essentials/command-line-bash/basics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/command-line-bash/basics/</guid>
      <description>Objectives  Run a terminal session Enter commands in the terminal Input/Output Use the man command Edit the line Clean up the command line  Running a terminal For our first terminal session, we simply want to identify the prompt and parts of a typical command.</description>
    </item>
    
    <item>
      <title>Can I buy you a beer?</title>
      <link>/application-security/api-security/01_service_to_service_oauth2/10_buying-beer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/application-security/api-security/01_service_to_service_oauth2/10_buying-beer/</guid>
      <description>Buying Beer with OAuth2 Buying Beer Slight Modifications From Real World  Tom starts with the license issuing station.</description>
    </item>
    
    <item>
      <title>Deploying to PCF</title>
      <link>/cloud/platforms/pcf-foundations/intro-to-pcf/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/cloud/platforms/pcf-foundations/intro-to-pcf/</guid>
      <description>Learning Objectives Concepts  What is PCF? The terms container and image in cloud technology The structure of Cloud Foundary: Foundations, Organizations, and Spaces.</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>/golang/foundations/getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/foundations/getting-started/</guid>
      <description>Learning Objectives  Installing Go Configuring Go Creating a Go Project Parts of a Go File Go Modes: Go Modules and GOPATH  Installation and Configuration Mac Installation brew install go or</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>/javascript/performance/getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/performance/getting-started/</guid>
      <description>Agenda How to gather performance metrics Client-side rendering Server-side rendering Universal (isomorphic) rendering Why Universal Rendering?</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>/react/performance/getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/performance/getting-started/</guid>
      <description>Agenda How to gather performance metrics Client-side rendering Server-side rendering Universal (isomorphic) rendering Why Universal Rendering?</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>/react/pillars/advanced-react/getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/advanced-react/getting-started/</guid>
      <description>Getting Started with React and Developer Tools for React.
 Topics 1. Learning Objectives 1.1. Concepts &amp;amp; Skills   2.</description>
    </item>
    
    <item>
      <title>Getting Started with Looker</title>
      <link>/software-eng-essentials/looker/getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/looker/getting-started/</guid>
      <description>This lesson will cover the basics of finding and using reports in Looker.
Objectives  Logging in and finding content How to find reports Filter the data you see in reports  Structure of Looker A LookML project is a collection of LookML files that describes a set of related models, views, Explores, and (optionally) LookML dashboards.</description>
    </item>
    
    <item>
      <title>Git Plumbing</title>
      <link>/software-eng-essentials/git-pillars/plumbing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/git-pillars/plumbing/</guid>
      <description>Git Plumbing Just what does git do? What makes a git repository? Where is this “git database” you speak of…</description>
    </item>
    
    <item>
      <title>Hello JavaScript Lab</title>
      <link>/javascript/foundations/labs/hello-js-lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/labs/hello-js-lab/</guid>
      <description>Step 1: Setup Create a directory for your labs for this course:
cd $HOME mkdir js-foundations cd js-foundations mkdir labs cd labs Step 2: Create a JavaScript file and add some code touch hello.</description>
    </item>
    
    <item>
      <title>Hello React</title>
      <link>/react/foundations/labs/lab-hello-react/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/foundations/labs/lab-hello-react/</guid>
      <description>Lab: Create your own &amp;ldquo;Hello World&amp;rdquo; React App Create a React app that introduces you.</description>
    </item>
    
    <item>
      <title>HTML Intro</title>
      <link>/web-essentials/webmastery-foundations/html-intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/web-essentials/webmastery-foundations/html-intro/</guid>
      <description>Learning Objectives Concepts  Explain the various parts of an HTML document, including:  the &amp;lt;head&amp;gt; and &amp;lt;body&amp;gt; tags container elements such as &amp;lt;div&amp;gt;, &amp;lt;header&amp;gt;, &amp;lt;footer&amp;gt;, &amp;lt;section&amp;gt;, and &amp;lt;article&amp;gt; common elements such as &amp;lt;h1&amp;gt;, &amp;lt;h2&amp;gt;, &amp;lt;p&amp;gt;, &amp;lt;ul&amp;gt;, and &amp;lt;li&amp;gt;   Explain the difference between HTML and the DOM  Skills  Build a simple web page using HTML Use Chrome&amp;rsquo;s Dev Tools to inspect the DOM  History   In November of 1989 Tim Berners-Lee connected Hypertext, the Transmission Control Protocol (TCP), and the domain name system ideas to create the World Wide Web to help facilitate the sharing and updating of information among researchers.</description>
    </item>
    
    <item>
      <title>Inner Workings of the Web</title>
      <link>/web-essentials/internet/how-internet-works/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/web-essentials/internet/how-internet-works/</guid>
      <description>Learning Objectives  Describe the basics of how computers communicate Name 4 ways that computers share data Define the following concepts:  Internet IP Address  IPv4 and IPv6 addresses static and dynamic dotted decimal notation   port socket Internet Domain URL Messages and Packets Communication protocols  IP TCP UDP HTTP lots of others   Routes LAN and WAN ping command ifconfig / ipconfig commands DNS MIME Types RESTful Web Services    What is the Internet?</description>
    </item>
    
    <item>
      <title>Intro to Containers and Virtualization</title>
      <link>/cloud/containers/docker-fundamentals/containers-and-virtualization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/cloud/containers/docker-fundamentals/containers-and-virtualization/</guid>
      <description>Concepts    Explain the purpose of a Virtual Machine Explain the purpose of a Container Identify the differences between Virtual Machines and Containers List some advantages of using Containers over Virtual Machines  A Little History To best understand containers we need to first look at the history of virtualization, data centers, and cloud computing.</description>
    </item>
    
    <item>
      <title>Intro to React</title>
      <link>/react/foundations/react-intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/foundations/react-intro/</guid>
      <description>An introduction to the concepts of ReactJS.
Concepts  Describe the React Framework Explain JSX List some advantages of building and using Components  What is React?</description>
    </item>
    
    <item>
      <title>Intro to Resiliency</title>
      <link>/software-eng-essentials/patterns/resiliency/intro-to-resiliency/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/patterns/resiliency/intro-to-resiliency/</guid>
      <description>Learning Objectives  Define resiliency Discuss the growing need for software system resiliency Explain resiliency patterns and what they do  What is Resiliency?</description>
    </item>
    
    <item>
      <title>Intro to Slackbot</title>
      <link>/python/bots/slackbot_intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/bots/slackbot_intro/</guid>
      <description>Learning Objectives This is an introduction to using the Slack Client Python API to create a simple bot.</description>
    </item>
    
    <item>
      <title>Intro to TDD</title>
      <link>/react/pillars/testing/tdd/intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/testing/tdd/intro/</guid>
      <description>Test Driven Development
 Topics 1. In this lesson you will learn: 2. Why Write Tests?</description>
    </item>
    
    <item>
      <title>Intro to the Agile Process</title>
      <link>/software-eng-essentials/agile-lean/intro-to-agile/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/agile-lean/intro-to-agile/</guid>
      <description>Learning Objectives  Describe the Waterfall Process and why it isn&amp;rsquo;t suitable for most software products.</description>
    </item>
    
    <item>
      <title>Intro to Unix (optional)</title>
      <link>/software-eng-essentials/terminal-and-shell/intro-to-unix/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/terminal-and-shell/intro-to-unix/</guid>
      <description>Learning Objectives  Explain the advantages of the UNIX operating systems Compare and contrast CLIs to GUIs Explain how command line usage can increase efficiency Explain the difference between the Terminal and the Shell  What is an Operating System?</description>
    </item>
    
    <item>
      <title>Introduction</title>
      <link>/cloud/containers/developing-with-docker/int-testing/intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/cloud/containers/developing-with-docker/int-testing/intro/</guid>
      <description>Concepts  Review TDD and BDD concepts Define Integration Testing Demo integration testing from app in container to a dependent app in a different container Demo integration testing from app in container to a database in a container  Introduction In this course we will be learning about how Docker and docker-compose can assist us with integration testing.</description>
    </item>
    
    <item>
      <title>Introduction</title>
      <link>/react/pillars/perf-opt-strategies/intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/perf-opt-strategies/intro/</guid>
      <description>Welcome to React Performance Optimization Strategies.
Concepts and Skills  Learn how to profile React applications to learn about the performance characteristics Eliminate redundant renders of components Choose the best patterns for application state management to optimize components by default Manage CPU intensive operations with memoization and web workers Learn about React’s built-in features such as React.</description>
    </item>
    
    <item>
      <title>Introduction to JavaScript</title>
      <link>/javascript/foundations/intro-to-js/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/intro-to-js/</guid>
      <description>An introduction to the JavaScript language.
Learning Objectives Concepts  Discuss the history of JavaScript Describe JavaScript as both an OOP and a FP language  Background  JavaScript should not be confused with Java.</description>
    </item>
    
    <item>
      <title>Introduction to RTL</title>
      <link>/react/pillars/testing/react-testing-library/rtl-intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/testing/react-testing-library/rtl-intro/</guid>
      <description>Introduction to the React Testing Library Kent C. Dodds created the React Testing Library to address one problem:</description>
    </item>
    
    <item>
      <title>Introduction to Testing</title>
      <link>/react/pillars/testing/common/intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/testing/common/intro/</guid>
      <description>Introduction to testing React applications.
 Topics 1. In this lesson you will learn: 2. The Myriad of Testing Methods 2.</description>
    </item>
    
    <item>
      <title>Introduction to Text Editors</title>
      <link>/software-eng-essentials/text-editors/intro-to-text-editors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/text-editors/intro-to-text-editors/</guid>
      <description>One of the most important tools a software developer uses is the text editor: where they write their software programs.</description>
    </item>
    
    <item>
      <title>Mac Shortcuts</title>
      <link>/software-eng-essentials/terminal-and-shell/supplemental/mac-shortcuts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/terminal-and-shell/supplemental/mac-shortcuts/</guid>
      <description>Mac keyboard shortcuts  Save: command + s Quit: command + q Copy: command + c Paste: command + v Force Quit: command + option +escape  Mac commands review When you need to open a program on a Mac, simply type command + spacebar and the Spotlight Search bar will appear.</description>
    </item>
    
    <item>
      <title>Modern Web Applications</title>
      <link>/application-security/api-security/02_human_to_service_oidc/10_modern-webapps/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/application-security/api-security/02_human_to_service_oidc/10_modern-webapps/</guid>
      <description>Two In One These days WebApp are really two different apps shoved together:
 SPA - Single Page Apps.</description>
    </item>
    
    <item>
      <title>MongoDB and Python</title>
      <link>/python/nonrelational-db/mongo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/nonrelational-db/mongo/</guid>
      <description>Learning Objectives  Installing the pymongo database adapter Using pymongo to connect to/disconnect from a database Executing MongDB CRUD statements in Python to interact with database resources  Set Up We are going to show how to connect and work with MongoDB and Python.</description>
    </item>
    
    <item>
      <title>Paths Lab</title>
      <link>/software-eng-essentials/terminal-and-shell/labs/lab-paths/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/terminal-and-shell/labs/lab-paths/</guid>
      <description>Using the below directory structure, answer the following with a neighbor:
 What is the absolute path for pic4.</description>
    </item>
    
    <item>
      <title>Postman Essentials</title>
      <link>/software-eng-essentials/postman-foundations/getting_started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/postman-foundations/getting_started/</guid>
      <description>Learning Objectives Concepts  Postman App Use Explanation of API&amp;rsquo;s, SOAP, and REST Making a Simple Postman Request  Postman Intro Postman is an App used for interacting with APIs.</description>
    </item>
    
    <item>
      <title>Programming Languages Fundamentals</title>
      <link>/software-eng-essentials/comp-sci/programming-languages/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/comp-sci/programming-languages/</guid>
      <description>Introduction The primary goal for all programming languages is to provide a language that is both:</description>
    </item>
    
    <item>
      <title>Project Setup</title>
      <link>/javascript/performance/universal-rendering-lab/project-setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/performance/universal-rendering-lab/project-setup/</guid>
      <description>Purpose: To get hands-on experience with the implementation of universal rendering.
In this lab, we will clone down a client-side rendered application from Github and convert it to leverage universal rendering.</description>
    </item>
    
    <item>
      <title>Project Setup</title>
      <link>/react/performance/universal-rendering-lab/project-setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/performance/universal-rendering-lab/project-setup/</guid>
      <description>Purpose: To get hands-on experience with the implementation of universal rendering.
In this lab, we will clone down a client-side rendered application from Github and convert it to leverage universal rendering.</description>
    </item>
    
    <item>
      <title>PyCharm Setup</title>
      <link>/python/foundation/pycharm-setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/foundation/pycharm-setup/</guid>
      <description>IDLE Idle is Python&amp;rsquo;s default Integrated DeveLopment Environment. It&amp;rsquo;s installed automatically when you download Python3 onto your computer.</description>
    </item>
    
    <item>
      <title>Rebase vs Merge</title>
      <link>/software-eng-essentials/git-pillars/rebase-merge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/git-pillars/rebase-merge/</guid>
      <description>Introduction A common question is when to rebase and when to merge?
This is a question that should be answered by your team.</description>
    </item>
    
    <item>
      <title>Relational Databases</title>
      <link>/golang/databases/relational-databases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/databases/relational-databases/</guid>
      <description>Golang and Relational Databases The standard Golang library package database/sql provides a generic interface around SQL (or SQL-like) databases.</description>
    </item>
    
    <item>
      <title>Relational Databases</title>
      <link>/python/relational-db/relational-databases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/relational-db/relational-databases/</guid>
      <description>Learning Objectives  Introduce the Python Database API Discuss the various DB modules supported by the Python Database API  Python Database API You will find data in either memory, files or databases.</description>
    </item>
    
    <item>
      <title>RESTful API w/Flask</title>
      <link>/python/apis/flask/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/apis/flask/</guid>
      <description>Learning Objectives Concepts  Introduce Pythons Flask Package Discuss Flask RESTful Methods Showcase API built with Flask  Skills  Stand up an API using Flask Write handlers that support standard REST actions Authenticate a Flask API  Designing A Simple Web Service We are creating a todo application and we want to design a web service for it.</description>
    </item>
    
    <item>
      <title>Standing up a Webserver with Go</title>
      <link>/golang/api/go-webserver/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/api/go-webserver/</guid>
      <description>Objectives  Introduce Go&amp;rsquo;s net/http package Discuss Handlers and Handler Functions Work with the Default Serve Multiplexor Handle Request/Response cycle within an application  Skills  Get Experience with the DefaultServeMux How to write HTTP&amp;rsquo;s Handler and HandlerFuncs Handle incoming (GET) requests Use Environment Variables to set your webserver&amp;rsquo;s port  Go&amp;rsquo;s net/http Package If you&amp;rsquo;re coming to Go from another language, like: JavaScript, Python, Java, etc.</description>
    </item>
    
    <item>
      <title>Testing Basics</title>
      <link>/javascript/nodejs/testing/testing-basics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/nodejs/testing/testing-basics/</guid>
      <description>Learning Objectives  Why we test Types of testing Behavior Driven Development  Why We Test Testing in software is crucial, but often overlooked or misunderstood part of the process.</description>
    </item>
    
    <item>
      <title>The useState Hook</title>
      <link>/custom-workshops/frontend-at-thd/react-crash-course/usestate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/custom-workshops/frontend-at-thd/react-crash-course/usestate/</guid>
      <description>Concepts and Skills  Understand how useState allows for local state management in a function component.</description>
    </item>
    
    <item>
      <title>The useState Hook</title>
      <link>/react/pillars/hooks/usestate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/hooks/usestate/</guid>
      <description>Concepts and Skills  Understand how useState allows for local state management in a function component.</description>
    </item>
    
    <item>
      <title>Understanding Concurrency</title>
      <link>/golang/concurrency/introduction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/concurrency/introduction/</guid>
      <description>Concurrency Concurrency is the DESIGN or the managing of multiple processes that could occur at the same time but is not necessarily happening at the same time.</description>
    </item>
    
    <item>
      <title>Welcome to Golang</title>
      <link>/golang/fromjava/intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/fromjava/intro/</guid>
      <description>Good Choice! If you&amp;rsquo;re a Java developer and your interest was piqued enough to come look at this page, then congratulations.</description>
    </item>
    
    <item>
      <title>What is Java</title>
      <link>/java/foundations/what-is-java/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/java/foundations/what-is-java/</guid>
      <description>Learning Objectives Concepts  Describe the various aspects of Java as a language, a runtime environment, and an ecosystem Explain the process of compiling a Java program into bytecode List some advantages of compiling a language to a bytecode Describe the roles of the JVM, the JRE, and the JDK Define the concept of Garbage Collection?</description>
    </item>
    
    <item>
      <title>Why Do We Test?</title>
      <link>/golang/testing/why/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/testing/why/</guid>
      <description>Goals Gain an understanding why testing code is important and its benefits.
Learning Objectives  Explore misconceptions about testing Understand the goals of testing Review the benefits of testing correctly  Misconceptions of Testing  too difficult not worth the time  Actual Benefits Reduces time to:</description>
    </item>
    
    <item>
      <title>Why Do We Test?</title>
      <link>/python/testing/why/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/testing/why/</guid>
      <description>Goals Gain an understanding why testing code is important and its benefits.
Learning Objectives  Explore misconceptions about testing Understand the goals of testing Review the benefits of testing correctly  Misconceptions of Testing  too difficult not worth the time  Actual Benefits Reduces time to:</description>
    </item>
    
    <item>
      <title>Why Do We Test?</title>
      <link>/software-eng-essentials/testing/why/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/testing/why/</guid>
      <description>Goals Gain an understanding why testing code is important and its benefits.
Learning Objectives  Explore misconceptions about testing Understand the goals of testing Review the benefits of testing correctly  Misconceptions of Testing  too difficult not worth the time  Actual Benefits Reduces time to:</description>
    </item>
    
    <item>
      <title>Git Plumbing Labs</title>
      <link>/software-eng-essentials/git-pillars/plumbing-labs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/git-pillars/plumbing-labs/</guid>
      <description>Exercise 1: How Git Saves Files  Create a new folder and initialize git on it Use a text editor to create &amp;amp; save a new file.</description>
    </item>
    
    <item>
      <title>HTML Intro Labs</title>
      <link>/web-essentials/webmastery-foundations/html-intro-labs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/web-essentials/webmastery-foundations/html-intro-labs/</guid>
      <description>Create a Hello World Page  Create a new directory Create a basic html file Add a &amp;ldquo;Hello World&amp;rdquo; Header Open the html document in your browser Change &amp;ldquo;Hello World&amp;rdquo; to say &amp;ldquo;Hello World from your name&amp;rdquo;     Go to Common HTML Elements Lessons    Build a Simple Web Page Use HTML and a browser to recreate the webpage shown below.</description>
    </item>
    
    <item>
      <title>Streams</title>
      <link>/javascript/nodejs/getting-started/node-core-modules/streams/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/nodejs/getting-started/node-core-modules/streams/</guid>
      <description>Working with streams An option when working with the larger files or http request/response is to use Streams.</description>
    </item>
    
    <item>
      <title>CLI Tutorial</title>
      <link>/javascript/nodejs/getting-started/command-line-tutorial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/nodejs/getting-started/command-line-tutorial/</guid>
      <description>Learning Objectives Concepts  The ability to follow online tutorials and documentation is essential to the modern software engineer.</description>
    </item>
    
    <item>
      <title>CLI Project Ideas</title>
      <link>/javascript/nodejs/getting-started/command-line-project/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/nodejs/getting-started/command-line-project/</guid>
      <description>Project Guidelines You will build a command line application using Node. Below you will find a list of project ideas and requirements for each app.</description>
    </item>
    
    <item>
      <title>The HTTP Module</title>
      <link>/javascript/nodejs/getting-started/node-core-modules/http-module/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/nodejs/getting-started/node-core-modules/http-module/</guid>
      <description>HTTP Server Node comes with a module specific to creating an http server. The basic server consists of a server object created by doing the following.</description>
    </item>
    
    <item>
      <title>Labs for HTTP Module</title>
      <link>/javascript/nodejs/getting-started/node-core-modules/http-module-labs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/nodejs/getting-started/node-core-modules/http-module-labs/</guid>
      <description>5.1. Lab 3 - Working with a server  Using the previous Car example Create a file named server.</description>
    </item>
    
    <item>
      <title>Dependency Injection &amp; Mocks</title>
      <link>/javascript/nodejs/testing/di-and-mocks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/nodejs/testing/di-and-mocks/</guid>
      <description>Dependency Injection Dependency Injection (DI) is a pattern in software development that says you should separate dependencies form the code that uses them.</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>/react/pillars/testing/react-testing-library/rtl-getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/testing/react-testing-library/rtl-getting-started/</guid>
      <description>Getting Started If you are using the latest version of create-react-app and its react-scripts dependency then jest and react-testing-library are already setup for you.</description>
    </item>
    
    <item>
      <title>Intro to RDMS</title>
      <link>/software-eng-essentials/db-sql/intro-to-rdbms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/db-sql/intro-to-rdbms/</guid>
      <description>Learning Objectives  Describe why we use Databases Describe the following terms:  RDBMS Database   Define CRUD Explain DB Transactions, commit, and rollback Define the ACID properties of transactions  Why Do We Use Databases?</description>
    </item>
    
    <item>
      <title>Knex Movies Guided Lab</title>
      <link>/javascript/nodejs/advanced/express-and-bookshelf/knex-movies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/nodejs/advanced/express-and-bookshelf/knex-movies/</guid>
      <description>Learning Objectives Concepts  Setting up Express and Knex  Skills  Building an applications with Express that connects to a Postgres Database using Knex Creating migration scripts Creating seeds files Calling Knex functions from route handlers  Step 0 - Getting Started In this lesson, we are going to build a sample application using:</description>
    </item>
    
    <item>
      <title>The Event Module</title>
      <link>/javascript/nodejs/getting-started/node-core-modules/event-module/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/nodejs/getting-started/node-core-modules/event-module/</guid>
      <description>Learning Objectives Concepts  Event Driven Programming The Events Module Creating Events Triggering Events Cleaning up Events  Event Driven Programming What is event driven programming?</description>
    </item>
    
    <item>
      <title>Knex Todo App</title>
      <link>/javascript/nodejs/advanced/express-and-bookshelf/knex-todo-app/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/nodejs/advanced/express-and-bookshelf/knex-todo-app/</guid>
      <description>Learning Objectives Concepts  Setting up knex Migrations and seeding data Using knex in with express  Skills  Using knex in your RESTful routing Learning how to build RESTful APIS Full CRUD with a database  Big goal Your goal is to create a server that will let make calls to a database for a todo app.</description>
    </item>
    
    <item>
      <title>Labs for Event Module</title>
      <link>/javascript/nodejs/getting-started/node-core-modules/event-module-lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/nodejs/getting-started/node-core-modules/event-module-lab/</guid>
      <description>Lab  Create 2 functions that will print out the largest, and smallest representable number.  Number.</description>
    </item>
    
    <item>
      <title>APIs</title>
      <link>/python/apis/apis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/apis/apis/</guid>
      <description>This tutorial walks through how to GET data from APIs requiring data or header values.</description>
    </item>
    
    <item>
      <title>Bookshelf</title>
      <link>/javascript/nodejs/advanced/express-and-bookshelf/bookshelf/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/nodejs/advanced/express-and-bookshelf/bookshelf/</guid>
      <description>Learning Objectives Concepts  Object Relational Mapping Entity relationship diagramming  Skills  How to create a model using Bookshelf.</description>
    </item>
    
    <item>
      <title>Building Reports</title>
      <link>/software-eng-essentials/looker/building-reports/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/looker/building-reports/</guid>
      <description>This lesson will cover the creation of ad-hoc reports using the Explore interface.
Objectives  Explains the concepts of dimensions and measures within Looker How to select fields from the field picker How to use filters to limit query results How to create dashboards  Example: Starting with an Explore Getting Set Up In this lesson, there are going to be examples applying the previous section using the Home Depot flavored Looker.</description>
    </item>
    
    <item>
      <title>Building RESTful Services with the Go Standard Library</title>
      <link>/golang/api/restful-api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/api/restful-api/</guid>
      <description>Objectives  Showcase an API built with the Go Standard Library Demonstrate strategies for working with JSON Discuss working with URL &amp;amp; Query Params Working with standard CRUD actions  Skills  Stand up an API using only the standard library Write handlers that support standard REST actions Encode and Decode JSON Gracefully Handle Errors  The API We are going to continue to build on top of the previous lesson by setting up a tool rental API using Go&amp;rsquo;s net/http package.</description>
    </item>
    
    <item>
      <title>Cassandra and Python</title>
      <link>/python/nonrelational-db/cassandra/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/nonrelational-db/cassandra/</guid>
      <description>Learning Objectives  Installing the Cassandra database adapter Using cassandra-driver to connect to/disconnect from a database Executing DDL to create a database schema Executing statements to interact with database resources  Set Up We are going to show how to connect and work with Cassandra and Python.</description>
    </item>
    
    <item>
      <title>Chart Creation</title>
      <link>/python/automation/chart-creation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/automation/chart-creation/</guid>
      <description>Learning Objectives  Learn about Pandas and its data structures Generate charts based on data in a json using Pandas  Creating charts from data is a common task that Python is used for.</description>
    </item>
    
    <item>
      <title>Coding Our First Bot</title>
      <link>/python/bots/coding_first_bot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/bots/coding_first_bot/</guid>
      <description>We&amp;rsquo;ve got everything we need to write the Starter Bot code. Navigate to starterBot directory.</description>
    </item>
    
    <item>
      <title>Connecting to a Postgres Database</title>
      <link>/golang/databases/postgres-connection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/databases/postgres-connection/</guid>
      <description>Before you follow the rest of this lesson, make sure:
 You have created a database called tool_rental.</description>
    </item>
    
    <item>
      <title>Context and Hooks</title>
      <link>/react/pillars/advanced-state-mgmt/context-and-hooks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/advanced-state-mgmt/context-and-hooks/</guid>
      <description>How to combine the Context API and React Hooks for State Management
 Topics 1. Learning Objectives 1.</description>
    </item>
    
    <item>
      <title>CSS Intro</title>
      <link>/web-essentials/webmastery-foundations/css-intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/web-essentials/webmastery-foundations/css-intro/</guid>
      <description>Learning Objectives Concepts  Define CSS Describe the role of CSS in Building Web Sites List the 3 places where CSS code can go  Skills  Style an HTML element with inline, embedded, or external CSS  Separation of Concerns There is a fundamental principle in Software Engineering that code should be organized based on a separation of concerns.</description>
    </item>
    
    <item>
      <title>Deploying a React client app</title>
      <link>/cloud/platforms/pcf-foundations/deploy-react-client-app/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/cloud/platforms/pcf-foundations/deploy-react-client-app/</guid>
      <description>Objectives  Deploy a front-end React app Learn to configure a React client app to proxy a Node.</description>
    </item>
    
    <item>
      <title>Django Databases</title>
      <link>/python/web-framework/django_db/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/web-framework/django_db/</guid>
      <description>Next we&amp;rsquo;re going to create the database for our application, but first we will create the the Models or database tables our application will use.</description>
    </item>
    
    <item>
      <title>Docker Installation</title>
      <link>/cloud/containers/docker-fundamentals/installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/cloud/containers/docker-fundamentals/installation/</guid>
      <description>Concepts  Installing Docker Components on a Mac Installing Docker Components on Windows Installing Docker on Server on Demand Overview of the Components  Mac Installation You have 2 options for installing Docker on a Mac:</description>
    </item>
    
    <item>
      <title>Docker Volumes</title>
      <link>/cloud/containers/developing-with-docker/int-testing/volumes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/cloud/containers/developing-with-docker/int-testing/volumes/</guid>
      <description>Concepts  Describe how volumes allow containers to persisting data Compare bind mounts vs. docker volumes Explain how to create a volume Describe how volumes can be shared between containers  Persisting Data For the most part docker containers are ephimeral.</description>
    </item>
    
    <item>
      <title>Expressions Lab</title>
      <link>/javascript/foundations/labs/expressions-lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/labs/expressions-lab/</guid>
      <description>Let&amp;rsquo;s code a Temperature Converter.
Step 1: Create the JavaScript file and Add the Starter Code cd $HOME/js-foundations/labs touch expressions.</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>/java/foundations/getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/java/foundations/getting-started/</guid>
      <description>Concepts  Installing the JVM, JRE, and JDK Setting your classpath IDE: IntelliJ  Skills  Configure the Java classpath Write a simple Java Program Compile and run a simple Java Program Install and run a Java IDE  Installing Java  ℹ️ The following instructions are for MacOS.</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>/react/foundations/getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/foundations/getting-started/</guid>
      <description>Getting started with the create-react-app CLI.
Concepts  Introduce React syntax and JSX Talk about Components  Skills  Use the React CLI to create a new React application Understand how to setup and configure a React app Become familiar with the React application structure Build a basic React Component  The create-react-app CLI  create-react-app is a simple CLI (Command Line Interface) program for creating new React projects.</description>
    </item>
    
    <item>
      <title>Getting Started with Enzyme</title>
      <link>/react/pillars/testing/tdd/enzyme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/testing/tdd/enzyme/</guid>
      <description>Let&amp;#8217;s get started with Enzyme
 Topics 1. In this lesson you will learn: 2. What Is Enzyme?</description>
    </item>
    
    <item>
      <title>Git Hooks</title>
      <link>/software-eng-essentials/git-pillars/hooks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/git-pillars/hooks/</guid>
      <description>Git Life cycle hook Once a repo is initialized it takes the default template from the locations below and copies them to the hooks folder in the .</description>
    </item>
    
    <item>
      <title>Goroutines</title>
      <link>/golang/concurrency/goroutines/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/concurrency/goroutines/</guid>
      <description>Goroutines vs. Threads In general, threads are components of a process. A Process can contain multiple threads.</description>
    </item>
    
    <item>
      <title>Hello JavaScript</title>
      <link>/javascript/foundations/hello-js/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/hello-js/</guid>
      <description>Getting started with the JavaScript language.
Concepts  Explain how to add JavaScript code to a web page Execute JavaScript code outside of the browser  JavaScript in the Browser The anatomy of a web site or web application consists of HTML, CSS and JavaScript.</description>
    </item>
    
    <item>
      <title>Intro to PostgreSQL</title>
      <link>/software-eng-essentials/db-sql/intro-to-postgresql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/db-sql/intro-to-postgresql/</guid>
      <description>Learning Objectives  Verify that PostgreSQL is installed Learn how to start and stop PostgreSQL Verify the status of the PostgreSQL server Create a PostgreSQL database Connect to a database via psql List the database names Delete a database  PostgreSQL Set Up Install PostgreSQL package with the following command:</description>
    </item>
    
    <item>
      <title>Intro to the CLI</title>
      <link>/software-eng-essentials/terminal-and-shell/intro-to-cli/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/terminal-and-shell/intro-to-cli/</guid>
      <description>Learning Objectives  Compare and contrast CLIs to GUIs Explain how command line usage can increase efficiency Explain the difference between the Terminal and the Shell  What is a Command Line Interface?</description>
    </item>
    
    <item>
      <title>Introduction to Harmony</title>
      <link>/custom-workshops/frontend-at-thd/intro-to-components/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/custom-workshops/frontend-at-thd/intro-to-components/</guid>
      <description>Concepts and Skills  Understand why Harmony was created Use Harmony UI to discover existing components  Introduction Harmony is a UI component design system created by The Home Depot.</description>
    </item>
    
    <item>
      <title>JavaScript Testing</title>
      <link>/javascript/nodejs/testing/javascript-testing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/nodejs/testing/javascript-testing/</guid>
      <description>Learning Objectives  Test Runners vs Assertion Common BDD test structure in JavaScript Writing tests in JavaScript &amp;amp; Jest  Test Runners vs Assertions Frameworks In modern JavaScript development (and most other languages as well) it is standard to use some tooling to assist with testing.</description>
    </item>
    
    <item>
      <title>Jest</title>
      <link>/react/pillars/testing/common/jest/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/testing/common/jest/</guid>
      <description>Using jest to test React apps.
 1. In this lesson you will learn:   JavaScript Testing Vocabulary</description>
    </item>
    
    <item>
      <title>JSX Expressions</title>
      <link>/react/foundations/labs/lab-jsx-expressions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/foundations/labs/lab-jsx-expressions/</guid>
      <description>In this lab you will refactor a Shopping Cart App to better organize the JSX expressions.</description>
    </item>
    
    <item>
      <title>Lab: Measure FCP and FMP</title>
      <link>/javascript/performance/gathering-metrics-lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/performance/gathering-metrics-lab/</guid>
      <description>Purpose: To get hands-on experience with measuring the rendering performance of web applications.
In this lab, we will be using the performance measurement tools provided by Google Chrome to take a look under the hood of several web applications and observe the impact of different rendering strategies on performance.</description>
    </item>
    
    <item>
      <title>Lab: Measure FCP and FMP</title>
      <link>/react/performance/gathering-metrics-lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/performance/gathering-metrics-lab/</guid>
      <description>Purpose: To get hands-on experience with measuring the rendering performance of web applications.
In this lab, we will be using the performance measurement tools provided by Google Chrome to take a look under the hood of several web applications and observe the impact of different rendering strategies on performance.</description>
    </item>
    
    <item>
      <title>Liquid Prompt</title>
      <link>/software-eng-essentials/terminal-and-shell/supplemental/liquidprompt/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/terminal-and-shell/supplemental/liquidprompt/</guid>
      <description>We can customize the appearance of our BASH prompt to include fun and/or useful information. We can do this manually but there is a very nice GitHub project called LiquidPrompt that contains all of the BASH code to provide us with a very powerful BASH prompt.</description>
    </item>
    
    <item>
      <title>Manipulating files</title>
      <link>/software-eng-essentials/command-line-bash/manipulating-files/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/command-line-bash/manipulating-files/</guid>
      <description>Objectives  Redirecting and appending Listing Renaming, copying, deleting  Redirecting and Appending Let&amp;rsquo;s work with text from one of the oldest recorded epic poems.</description>
    </item>
    
    <item>
      <title>Math Operators</title>
      <link>/python/foundation/math-operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/foundation/math-operators/</guid>
      <description>An introduction to IDLE and math in Python3
Math! Arithmetic operators Arithmetic operators are used to perform mathematical operations like addition, subtraction, multiplication and division.</description>
    </item>
    
    <item>
      <title>Minimum Viable Product (MVP)</title>
      <link>/software-eng-essentials/agile-lean/mvp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/agile-lean/mvp/</guid>
      <description>Learning Objectives  Define MVP Describe the benefits of building an MVP List some uses of building an MVP  Definition of MVP The concept of an MVP:</description>
    </item>
    
    <item>
      <title>Modern JavaScript Fact Sheet</title>
      <link>/javascript/foundations/cheatsheets/modernjs/modern-js/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/cheatsheets/modernjs/modern-js/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Monorepo in Go</title>
      <link>/golang/monorepo/monorepo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/monorepo/monorepo/</guid>
      <description>MonoRepos This lesson covers how to create a monorepo in Go.
Learning Objectives At the end of this lesson students will be able to do the following:</description>
    </item>
    
    <item>
      <title>Navigating Directories Lab</title>
      <link>/software-eng-essentials/terminal-and-shell/labs/lab-navigating-directories/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/terminal-and-shell/labs/lab-navigating-directories/</guid>
      <description>To practice navigating a directory, you will need to clone down a directory called command-line-kitchen-organizer. (If you do not know what clone means, no worries!</description>
    </item>
    
    <item>
      <title>Packages</title>
      <link>/golang/foundations/packages/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/foundations/packages/</guid>
      <description>Learning Objectives  Understand how packages are used to organize code Package naming rules How to export from a package How to import and use packages Using external (3rd party) modules and packages  What are Packages?</description>
    </item>
    
    <item>
      <title>Quick Recap</title>
      <link>/application-security/api-security/02_human_to_service_oidc/20_recap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/application-security/api-security/02_human_to_service_oidc/20_recap/</guid>
      <description>Roles in OAuth2  Resource Owner (Human, Optional :D ) Client (Browser, iPhone, FirstPhone, Server, etc) Resource Server (Service on PCF or GCP) Authorization Server (PingFed, AzureAD, etc)  Authorization Server (AS) / Identity Provider (IdP)  The Authorization Server&amp;rsquo;s job is to handle OAuth2 requests.</description>
    </item>
    
    <item>
      <title>React Router Advanced</title>
      <link>/react/pillars/advanced-react/react-router-advanced/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/advanced-react/react-router-advanced/</guid>
      <description>Advanced patterns with React Router v4 and the Marta API.
 Topics 1. Learning Objectives 1.</description>
    </item>
    
    <item>
      <title>React.memo</title>
      <link>/react/pillars/perf-opt-strategies/memo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/perf-opt-strategies/memo/</guid>
      <description>Use React.memo to avoid unnecessary renders of a complex component.
Background React.memo is React&amp;rsquo;s way of memoizing a function component.</description>
    </item>
    
    <item>
      <title>RESTful APIs</title>
      <link>/javascript/express/restful-apis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/express/restful-apis/</guid>
      <description>Restful APIs To learn about RESTful APIs, see: RESTful APIs</description>
    </item>
    
    <item>
      <title>Step 1: Create a route handler</title>
      <link>/javascript/performance/universal-rendering-lab/step-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/performance/universal-rendering-lab/step-1/</guid>
      <description>First, we need to create a route handler with Express so that we can build the document dynamically, rather than serving a static index.</description>
    </item>
    
    <item>
      <title>Step 1: Create a route handler</title>
      <link>/react/performance/universal-rendering-lab/step-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/performance/universal-rendering-lab/step-1/</guid>
      <description>First, we need to create a route handler with Express so that we can build the document dynamically, rather than serving a static index.</description>
    </item>
    
    <item>
      <title>Testing API Endpoints</title>
      <link>/software-eng-essentials/postman-foundations/testing_api_endpoints/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/postman-foundations/testing_api_endpoints/</guid>
      <description>Learning Objectives Concepts  Using the Postman App to exchange data with a local API Create collections of multiple API requests  Skills  Perform CRUD activities with and API resource Bundle several API requests together to create a collection  Sports Teams API To get a real sense of how Postman can be a powerful tool for interacting and testing the endpoints of an API, we will use it to test the endpoints of the Sports Teams API.</description>
    </item>
    
    <item>
      <title>Testing Presentational Components</title>
      <link>/react/pillars/testing/react-testing-library/rtl-presentational-components/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/testing/react-testing-library/rtl-presentational-components/</guid>
      <description>Introduction  The easiest and most common component to test is the presentational component. Recall that there are generally 2 kinds of React components:  Presentational Components - only depend on the props being passed into them Container Components - have state (memory) that is managed by React (setState, useState, or useReducer) or a 3rd party library such as redux or mobx    Testing the Product Component Our first component to test is the Product component at client/src/components/product/Product.</description>
    </item>
    
    <item>
      <title>The Retry Pattern</title>
      <link>/javascript/pillars/resiliency-patterns/retry/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/pillars/resiliency-patterns/retry/</guid>
      <description>The Retry resiliency pattern.
 Topics 1. Learning Objectives 2. What is the Retry Pattern? 2.</description>
    </item>
    
    <item>
      <title>The useEffect Hook</title>
      <link>/custom-workshops/frontend-at-thd/react-crash-course/useeffect/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/custom-workshops/frontend-at-thd/react-crash-course/useeffect/</guid>
      <description>Concepts and Skills  Understand how useEffect replaces componentDidMount, componentDidUpdate, and componentWillUnmount. Apply the useEffect hook to manage side effects in a React component.</description>
    </item>
    
    <item>
      <title>The useEffect Hook</title>
      <link>/react/pillars/hooks/useeffect/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/hooks/useeffect/</guid>
      <description>Concepts and Skills  Understand how useEffect replaces componentDidMount, componentDidUpdate, and componentWillUnmount. Apply the useEffect hook to manage side effects in a React component.</description>
    </item>
    
    <item>
      <title>Types of Testing</title>
      <link>/golang/testing/types/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/testing/types/</guid>
      <description>Goals Gain an understanding of the different types of testing.
Learning Objectives  Ways to execute tests Explore scopes of testing Investigate classifications of testing  Executing Tests  Manual - A user runs tests via the UI, in the same fashion as a true customer would.</description>
    </item>
    
    <item>
      <title>Types of Testing</title>
      <link>/python/testing/types/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/testing/types/</guid>
      <description>Goals Gain an understanding of the different types of testing.
Learning Objectives  Ways to execute tests Explore scopes of testing Investigate classifications of testing  Executing Tests  Manual - A user runs tests via the UI, in the same fashion as a true customer would.</description>
    </item>
    
    <item>
      <title>Types of Testing</title>
      <link>/software-eng-essentials/testing/types/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/testing/types/</guid>
      <description>Goals Gain an understanding of the different types of testing.
Learning Objectives  Ways to execute tests Explore scopes of testing Investigate classifications of testing  Executing Tests  Manual - A user runs tests via the UI, in the same fashion as a true customer would.</description>
    </item>
    
    <item>
      <title>VS Code</title>
      <link>/software-eng-essentials/text-editors/vs-code/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/text-editors/vs-code/</guid>
      <description>The main purpose of this lesson is to get comfortable with the VS Code editor, including how to configure it, install plugins, and discover more efficient ways of editing files.</description>
    </item>
    
    <item>
      <title>What is OAuth2?</title>
      <link>/application-security/api-security/01_service_to_service_oauth2/20_whatisoauth2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/application-security/api-security/01_service_to_service_oauth2/20_whatisoauth2/</guid>
      <description>Why OAuth2  Now the de facto industry standard. It has been adopted by some of the largest names in tech: Google, Facebook, Github, Microsoft, etc RFC based solution Can handle Human to Service and Service to Service.</description>
    </item>
    
    <item>
      <title>Creating and Writing Tests</title>
      <link>/golang/testing/creating-tests/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/testing/creating-tests/</guid>
      <description>Learning Objectives  Intro to testing Test File Set Up Test Function Skipping Tests Sub Tests  Testing Intro Testing is an extremely important part of software engineering, ensuring quality and improve reliability.</description>
    </item>
    
    <item>
      <title>React Router Advanced Solutions</title>
      <link>/react/pillars/advanced-react/react-router-advanced-solutions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/advanced-react/react-router-advanced-solutions/</guid>
      <description>Advanced patterns with React Router v4 and the Marta API.
 Topics 1. Lab 01 - Application Setup 1.</description>
    </item>
    
    <item>
      <title>Setting up Pytest with PyCharm</title>
      <link>/python/testing/additional-material/pytest-pycharm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/testing/additional-material/pytest-pycharm/</guid>
      <description>Adding pytest to pycharm project To add pytest to your Pycharm Project goto:
 PyCharm &amp;gt; Preferences &amp;gt; Tools &amp;gt; Python Integrated Tools &amp;gt; Testing.</description>
    </item>
    
    <item>
      <title>Building Reports: Deep Dive</title>
      <link>/software-eng-essentials/looker/building-reports-dive/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/looker/building-reports-dive/</guid>
      <description>This lesson will cover a deeper dive of the creation of ad-hoc reports using the Explore interface.</description>
    </item>
    
    <item>
      <title>Creating and Writing Tests</title>
      <link>/python/testing/intro-to-pytest/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/testing/intro-to-pytest/</guid>
      <description>Learning Objectives  Intro to testing in Python with pytest Test File Set Up Test Function Skipping Tests Sub Tests  Testing Intro Testing is an extremely important part of software engineering, ensuring quality and improve reliability.</description>
    </item>
    
    <item>
      <title>Harmony in Practice</title>
      <link>/custom-workshops/frontend-at-thd/harmony-in-practice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/custom-workshops/frontend-at-thd/harmony-in-practice/</guid>
      <description>Concepts and Skills  Use Harmony CLI to create a new component Use Harmony UI to document a new component  Introduction So far, we have seen how to discover components using the Harmony UI.</description>
    </item>
    
    <item>
      <title>PostgreSQL and Python</title>
      <link>/python/relational-db/postgres-python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/relational-db/postgres-python/</guid>
      <description>Learning Objectives  Installing the Psycopg PostgreSQL database adapter Using Psycopg to connect to/disconnect from a database Executing DDL to create a database schema Executing SQL statements to interact with database resources  Set Up We are going to show how to connect and work with relational databases and Python using PostgreSQL.</description>
    </item>
    
    <item>
      <title>Testing Postgres</title>
      <link>/python/relational-db/postgres-testing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/relational-db/postgres-testing/</guid>
      <description>Learning Objective  Getting familiar the Python Unittest Library Writing test using Unittest methods  Unittest Testing Library We will use the Python testing library, Unittest, to test our database interactions.</description>
    </item>
    
    <item>
      <title>ORM Intro</title>
      <link>/python/relational-db/orm-intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/relational-db/orm-intro/</guid>
      <description>Learning Objectives  Understand the SQLAlchemy Object Relationship Mapper Define the file hierarchy of the course Set up a successful database connection  SQLAlchemy ORM An object relational mapper(ORM) maps a relational database system to objects.</description>
    </item>
    
    <item>
      <title>Atom</title>
      <link>/software-eng-essentials/text-editors/atom/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/text-editors/atom/</guid>
      <description>Learning Objectives The main purpose of this lesson is to get students comfortable with the Atom editor, including how to configure it, install plugins, and discover faster, more efficient ways of editing files.</description>
    </item>
    
    <item>
      <title>Building</title>
      <link>/golang/foundations/building/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/foundations/building/</guid>
      <description>Learning Objectives  Building and running a Go file Cross Compiling Installing the built artifact  Building The build subcommand compiles the packages named by the import paths, along with their dependencies, but it does not install the results.</description>
    </item>
    
    <item>
      <title>Channels</title>
      <link>/golang/concurrency/channels/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/concurrency/channels/</guid>
      <description>Channels provide a way for goroutines to communicate. Channels are created by using the the make keyword, and are defined with the type chan and the data type of the data the channel will carry.</description>
    </item>
    
    <item>
      <title>CLI - Getting Started</title>
      <link>/software-eng-essentials/terminal-and-shell/getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/terminal-and-shell/getting-started/</guid>
      <description>Learning Objectives  How to start a terminal session Understanding the role of the Terminal and the Shell Executing basic commands Using man pages Chaining and Piping commands  Starting a Terminal Session Recall that the Terminal is a window where we can interact with the computer using a Command Line Interface.</description>
    </item>
    
    <item>
      <title>Client-side Rendering</title>
      <link>/javascript/performance/client-side-rendering/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/performance/client-side-rendering/</guid>
      <description>Modern web development: client-side rendering What is client-side rendering? Client-side rendering is a way to present rich data in an application, but relies on the client (rather than the server) to build the content of the webpage.</description>
    </item>
    
    <item>
      <title>Client-side Rendering</title>
      <link>/react/performance/client-side-rendering/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/performance/client-side-rendering/</guid>
      <description>Modern web development: client-side rendering What is client-side rendering? Client-side rendering is a way to present rich data in an application, but relies on the client (rather than the server) to build the content of the webpage.</description>
    </item>
    
    <item>
      <title>Code Coverage</title>
      <link>/golang/testing/coverage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/testing/coverage/</guid>
      <description>Goals Understand the meaning of code coverage and why its important.
Learning Objectives  What is code coverage?</description>
    </item>
    
    <item>
      <title>Code Coverage</title>
      <link>/python/testing/coverage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/testing/coverage/</guid>
      <description>Goals Understand the meaning of code coverage and why its important.
Learning Objectives  What is code coverage?</description>
    </item>
    
    <item>
      <title>Code Coverage</title>
      <link>/software-eng-essentials/testing/coverage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/testing/coverage/</guid>
      <description>Goals Understand the meaning of code coverage and why its important.
Learning Objectives  What is code coverage?</description>
    </item>
    
    <item>
      <title>Component Props</title>
      <link>/react/foundations/labs/lab-component-props/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/foundations/labs/lab-component-props/</guid>
      <description>Part 1: Create a React Application to display a list of Products Using create-react-app create a new application:</description>
    </item>
    
    <item>
      <title>Containerizing Persistent Data Sources</title>
      <link>/cloud/containers/developing-with-docker/int-testing/data-sources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/cloud/containers/developing-with-docker/int-testing/data-sources/</guid>
      <description>Concepts  List some purposes for containerizing data sources Explain how containerizing a data source helps with testing Write a Dockerfile to containerize a data source Use environment variables to configure a containerized data source Seed a database as part of a docker build Clean up data source volumes  Why Containerize a Data Source?</description>
    </item>
    
    <item>
      <title>Cryptography 101</title>
      <link>/application-security/api-security/01_service_to_service_oauth2/30_cryptography/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/application-security/api-security/01_service_to_service_oauth2/30_cryptography/</guid>
      <description>Hey Gary is this license from you?
This is meant as a quick explanation for those unfamiliar with the basics of Cryptography.</description>
    </item>
    
    <item>
      <title>DB Schemas</title>
      <link>/software-eng-essentials/db-sql/schemas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/db-sql/schemas/</guid>
      <description>Learning Objectives Concepts  Describe the following:  Database Schema CRUD Table Row Column Primary Key    Skills  Create a database Create tables Read and explain an ERD diagram Create an ERD diagram  Database Schemas The set of database tables, sequences, indexes, and other objects that define the structure of a database.</description>
    </item>
    
    <item>
      <title>Express: An Introduction</title>
      <link>/javascript/express/express-intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/express/express-intro/</guid>
      <description>Learning Objectives  Write a simple RESTful API with Express Identify the HTTP verbs and routes we&amp;rsquo;ll be using for an API Create an API with Express Interact with routes using cURL &amp;amp; httpie Monitor and automatically restart a Node app with nodemon  Web Servers, Web Applications, and Web Frameworks Web Server:</description>
    </item>
    
    <item>
      <title>Git Filter Branch</title>
      <link>/software-eng-essentials/git-pillars/filter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/git-pillars/filter/</guid>
      <description>Learning Objectives  Remove History Remove Dead Branches  Mistakes were made Say something private (like personal email or password) was accidentally committed.</description>
    </item>
    
    <item>
      <title>Git Filter Branch Lab</title>
      <link>/software-eng-essentials/git-pillars/filter-lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/git-pillars/filter-lab/</guid>
      <description>Scenario You are working on a team that is writing tests. A team member accidentally pushed private information onto GitHub.</description>
    </item>
    
    <item>
      <title>Git Interactive Rebase</title>
      <link>/software-eng-essentials/git-pillars/interactive-rebase/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/git-pillars/interactive-rebase/</guid>
      <description>Let&amp;rsquo;s clean up our messy history tree! We can actually combine and even get rid of commits of our choosing.</description>
    </item>
    
    <item>
      <title>History</title>
      <link>/software-eng-essentials/git-foundations/history/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/git-foundations/history/</guid>
      <description>Learning Objectives  Why use a system of version control History of version control How it makes life better How it could make life worse     To get the idea of why we use version control, go to why version control?</description>
    </item>
    
    <item>
      <title>How Docker Works</title>
      <link>/cloud/containers/docker-fundamentals/how-docker-works/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/cloud/containers/docker-fundamentals/how-docker-works/</guid>
      <description>Objectives  Understand the difference between Images vs Containers Using Basic Docker Commands  Images vs Containers In Docker, there are images and there are containers.</description>
    </item>
    
    <item>
      <title>Inspecting Files</title>
      <link>/software-eng-essentials/command-line-bash/inspecting-files/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/command-line-bash/inspecting-files/</guid>
      <description>Objectives  Downloading a file Heads or Tails Less is more Grepping  Downloading A File To start we&amp;rsquo;ll download a file from the Internet using the powerful curl utility (sometimes written as &amp;ldquo;cURL&amp;rdquo;), which allows us to interact with a URL at the command line.</description>
    </item>
    
    <item>
      <title>Interacting with the API</title>
      <link>/python/web-framework/django_db_api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/web-framework/django_db_api/</guid>
      <description>Now, let’s hop into the interactive Python shell and play around with the free API Django gives you.</description>
    </item>
    
    <item>
      <title>Introduction to Experiences</title>
      <link>/custom-workshops/frontend-at-thd/intro-to-experiences/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/custom-workshops/frontend-at-thd/intro-to-experiences/</guid>
      <description>Nucleus Why was Nucleus created? Standardization As the Online organization moved into the Squad Model, it was soon discovered that the existing applications (CPR, PIP, BASS, etc) were built very differently.</description>
    </item>
    
    <item>
      <title>JSX Expressions</title>
      <link>/react/foundations/jsx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/foundations/jsx/</guid>
      <description>What is JSX and how to organize your JSX expressions.
Concepts  JSX expressions combine the HTML and JavaScript languages.</description>
    </item>
    
    <item>
      <title>Labs</title>
      <link>/python/bots/bot_labs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/bots/bot_labs/</guid>
      <description>Create a class called Bot() that:
 Gets the ID of all &amp;ldquo;bot users&amp;rdquo; Writes a message to slack channel whenever the bot is mentioned List all usernames along with any message sent by a specific user in the channel.</description>
    </item>
    
    <item>
      <title>Listing Files Lab</title>
      <link>/software-eng-essentials/terminal-and-shell/labs/lab-listing-files/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/terminal-and-shell/labs/lab-listing-files/</guid>
      <description>Navigating inside the command-line-kitchen-organizer directory and do the following commands:
 List the absolute path of the current directory.</description>
    </item>
    
    <item>
      <title>Mocking</title>
      <link>/react/pillars/testing/common/mocking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/testing/common/mocking/</guid>
      <description>react Mocking
 Topics 1. In this lesson you will learn: 2. What are mocks? 3.</description>
    </item>
    
    <item>
      <title>Movies App with Bookshelf</title>
      <link>/javascript/nodejs/advanced/express-and-bookshelf/bookshelf-movies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/nodejs/advanced/express-and-bookshelf/bookshelf-movies/</guid>
      <description>Bookshelf Movies This project builds off the knex-movies-express app. The aim is to use knex for migrations and bookshelf&amp;rsquo;s ORM capabilities for interacting with the database.</description>
    </item>
    
    <item>
      <title>OpenID Connect &#43; Auth Code Grant</title>
      <link>/application-security/api-security/02_human_to_service_oidc/30_openid-connect-auth-code/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/application-security/api-security/02_human_to_service_oidc/30_openid-connect-auth-code/</guid>
      <description>Auth Code Grant Remember the Client Credentials grant for service to service? Auth Code Grant is the much larger cousin for Authorization of Humans and their clients to resource servers.</description>
    </item>
    
    <item>
      <title>ORM Models</title>
      <link>/python/relational-db/orm-models/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/relational-db/orm-models/</guid>
      <description>Learning Objectives  Learning how to set up classes to build out the corresponding database tables Understand how to connect and interact with the database.</description>
    </item>
    
    <item>
      <title>Packages</title>
      <link>/java/foundations/package/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/java/foundations/package/</guid>
      <description>Learning Objectives Concepts  Package structures Package naming conventions Import statements  Skills  Organize your Java apps into packages  What is a Package A package is a group of related classes and interfaces.</description>
    </item>
    
    <item>
      <title>PCF Backing Service</title>
      <link>/cloud/platforms/pcf-foundations/pcf-backing-service/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/cloud/platforms/pcf-foundations/pcf-backing-service/</guid>
      <description>Using a PCF Provided Backing Service Run the command cf marketplace. You should see a list of available services on the platform like this:</description>
    </item>
    
    <item>
      <title>PostgreSQL and Golang</title>
      <link>/golang/databases/postgres-golang/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/databases/postgres-golang/</guid>
      <description>Database Interaction Now that we have a model we can start to build logic around it.</description>
    </item>
    
    <item>
      <title>Postman Essential Labs</title>
      <link>/software-eng-essentials/postman-foundations/lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/postman-foundations/lab/</guid>
      <description>Learning Objective  Use Postman to test the endpoints of the Store Data API  Loading the Store Data API Clone the following repository from Github: https://github.</description>
    </item>
    
    <item>
      <title>Print Functions</title>
      <link>/python/foundation/print-function/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/foundation/print-function/</guid>
      <description>print() Function Since the first thing everyone needs to know how to do in any programming language is write a &amp;ldquo;Hello world&amp;rdquo; program, we&amp;rsquo;ll start with the print() function to do just that.</description>
    </item>
    
    <item>
      <title>React.useMemo</title>
      <link>/react/pillars/perf-opt-strategies/use-memo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/perf-opt-strategies/use-memo/</guid>
      <description>Use React.useMemo to avoid unnecessarily recomputing expensive operations.
Background  Memoization is an optimization technique used primarily to speed up computer programs by storing the results of expensive function calls and returning the cached result when the same inputs occur again.</description>
    </item>
    
    <item>
      <title>Report Creation</title>
      <link>/python/automation/report-creation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/automation/report-creation/</guid>
      <description>Learning Objectives  Create reports from Panda data frames in various formats Add images to the reports  Report Creation There are several database interactions in chart form that you might want to place together in one single report.</description>
    </item>
    
    <item>
      <title>Reusable Components</title>
      <link>/react/pillars/advanced-react/reusable-components/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/advanced-react/reusable-components/</guid>
      <description>Designing React Components for Reuse and Composition.
 Topics 1. Learning Objectives 1.1. Concepts &amp;amp; Skills   2.</description>
    </item>
    
    <item>
      <title>Routing &amp; Middleware with Gorilla/Mux</title>
      <link>/golang/api/routing-and-middleware/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/api/routing-and-middleware/</guid>
      <description>Objectives  Introduce gorilla/mux Discuss when to introduce a web framework Refactor our existing application  Skills  Work with major features of gorilla/mux Gracefully handle URL &amp;amp; query params Easily write middleware  Beyond the Standard Library As you may have noticed, we&amp;rsquo;re starting to run into limitations with the net/http package.</description>
    </item>
    
    <item>
      <title>Scheduling</title>
      <link>/software-eng-essentials/looker/scheduling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/looker/scheduling/</guid>
      <description>This lesson will cover the basics of scheduling reports in Looker.
Objectives  How to send reports  Scheduling It is possible to schedule ahead of time when a Look or Dashboard is run and delivered to any integrated services that are available for a Looker instance.</description>
    </item>
    
    <item>
      <title>Scrum &amp; Kanban</title>
      <link>/software-eng-essentials/agile-lean/scrum_and_kanban/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/agile-lean/scrum_and_kanban/</guid>
      <description>Learning Objectives  Describe the Scrum Process and sprints Describe the Kanban Process and pull Compare Scrum and Kanban List and describe the Agile ceremonies commonly used in Agile Development Describe Scrum and Kanban Boards  What are Scrum and Kanban?</description>
    </item>
    
    <item>
      <title>Selectors and Specificity</title>
      <link>/web-essentials/webmastery-foundations/selectors-and-specificity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/web-essentials/webmastery-foundations/selectors-and-specificity/</guid>
      <description>Learning Objectives Concepts  Explain the concept of CSS specificity Define &amp;ldquo;cascading&amp;rdquo; in the context of CSS specificity  Skills  Use CSS selectors to style an HTML page Use CSS specificity to apply CSS rules to specific HTML elements  Introduction Since HTML elements can have both a type (the tag) and several attributes (such as an id, a class, or a set of classes), we can use these types and attributes to select a specific DOM node or a set of specific DOM nodes.</description>
    </item>
    
    <item>
      <title>Step 2: Render the App markup to a string</title>
      <link>/javascript/performance/universal-rendering-lab/step-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/performance/universal-rendering-lab/step-2/</guid>
      <description>In the request handler that we just created, there is a portion of the string where we define the &amp;ldquo;root&amp;rdquo; element of our application: &amp;lt;div id=&amp;quot;root&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;.</description>
    </item>
    
    <item>
      <title>Step 2: Render the App markup to a string</title>
      <link>/react/performance/universal-rendering-lab/step-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/performance/universal-rendering-lab/step-2/</guid>
      <description>In the request handler that we just created, there is a portion of the string where we define the &amp;ldquo;root&amp;rdquo; element of our application: &amp;lt;div id=&amp;quot;root&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;.</description>
    </item>
    
    <item>
      <title>Strings Lab</title>
      <link>/javascript/foundations/labs/strings-lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/labs/strings-lab/</guid>
      <description>Step 1: Create the JavaScript file and Add the Starter Code cd $HOME/js-foundations/labs touch strings.js Add the following code to strings.</description>
    </item>
    
    <item>
      <title>Testing Database Interactions</title>
      <link>/python/nonrelational-db/testing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/nonrelational-db/testing/</guid>
      <description>Learning Objectives  Testing database interactions using the Pytest Library  Testing Cassandra Interactions For testing with Cassandra, we are going to use the same SQL set up script as the Cassandra labs.</description>
    </item>
    
    <item>
      <title>Testing Express</title>
      <link>/javascript/nodejs/testing/testing-express/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/nodejs/testing/testing-express/</guid>
      <description>Learning Objectives  Creating Mocks with Jest Testing an express route and middleware using nock and supertest  Creating Mocks With Jest Mocking is a powerful testing pattern use in just about all languages.</description>
    </item>
    
    <item>
      <title>Testing Generic Components</title>
      <link>/react/pillars/testing/react-testing-library/rtl-generic-components/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/testing/react-testing-library/rtl-generic-components/</guid>
      <description>Introduction  Generic Components are components that are intended to be reused throughout your application. They can easily be tested as they will not have dependencies on other components in your project (thus making them generic and reusable).</description>
    </item>
    
    <item>
      <title>The Circuit Breaker Pattern</title>
      <link>/javascript/pillars/resiliency-patterns/circuit-breaker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/pillars/resiliency-patterns/circuit-breaker/</guid>
      <description>The Circuit Breaker resiliency pattern.
 Topics 1. Learning Objectives 2. What is the Circuit Breaker Pattern?</description>
    </item>
    
    <item>
      <title>The useContext Hook</title>
      <link>/react/pillars/hooks/usecontext/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/hooks/usecontext/</guid>
      <description>Concepts and Skills  Understand how the useContext hook eliminates the need for nested component wrappers when consuming a Context value.</description>
    </item>
    
    <item>
      <title>Variables</title>
      <link>/javascript/foundations/variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/variables/</guid>
      <description>How to create variables in JavaScript.
Learning Objectives Concepts  Describe the purpose of JavaScript variables List the data types used by JavaScript Compare static vs.</description>
    </item>
    
    <item>
      <title>Deploying to PCF</title>
      <link>/javascript/pillars/restful-api-express-node/deploy-pcf/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/pillars/restful-api-express-node/deploy-pcf/</guid>
      <description>This lesson will walk you through deploying an application to Pivotal Cloud Foundry
 Topics 1.</description>
    </item>
    
    <item>
      <title>Git Interactive Rebase Lab</title>
      <link>/software-eng-essentials/git-pillars/interactive-rebase-lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/git-pillars/interactive-rebase-lab/</guid>
      <description>No hints this time
 Open the dir you worked on in the filter-branch lesson/lab Checkout a branch with the empty commits Get rid of those commits!</description>
    </item>
    
    <item>
      <title>ORM Relationships</title>
      <link>/python/relational-db/orm-relationships/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/relational-db/orm-relationships/</guid>
      <description>Learning Objectives  Understanding the SQLAlchemy Relationship API Mapping database table relationships to Python classes and objects  SQLAlchemy Relationship API SQLAlchemy supports different types of relationships:</description>
    </item>
    
    <item>
      <title>Selectors and Specificity Labs</title>
      <link>/web-essentials/webmastery-foundations/selectors-and-specificity-labs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/web-essentials/webmastery-foundations/selectors-and-specificity-labs/</guid>
      <description>Percipio lesson on selectors   CSS: Selectors  Play CSS Diner to learn more about CSS Selectors.</description>
    </item>
    
    <item>
      <title>Using the go test command</title>
      <link>/golang/testing/go-test/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/testing/go-test/</guid>
      <description>Learning Objectives  Identifying Existing Tests Execute a Test Running tests Recursively Running a Specific Test Short Flags Tags (Unit, Int) Args Flag Setting a Timeout Saving Test Results Generating coverage reports  Go Test The go test command is intended to be used in concert with the testing package which provides support for automating testing of Go packages.</description>
    </item>
    
    <item>
      <title>ORM Querying</title>
      <link>/python/relational-db/orm-querying/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/relational-db/orm-querying/</guid>
      <description>Learning Objectives  Understanding how to query the database tables using SQLAlchemy&amp;rsquo;s Query API Learn the different functions that can be used to customize our queries Understand the different types of joins for tables with relationships Using functions to manipulate data  The Query API The Query API provides us with the Query Object.</description>
    </item>
    
    <item>
      <title>Testify Assertion</title>
      <link>/golang/testing/testify-assertion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/testing/testify-assertion/</guid>
      <description>Learning Objectives  Installing testify assert methods  Life without testify Go allows for testing with its built-in testing framework.</description>
    </item>
    
    <item>
      <title>Testing with Python and ORM</title>
      <link>/python/relational-db/orm-testing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/relational-db/orm-testing/</guid>
      <description>Learning Objective  Getting familiar the Python Unittest Library Writing test using Unittest methods and assertions  Unittest Testing Library We will use the Python testing library, Unittest, to test our database interactions.</description>
    </item>
    
    <item>
      <title>Intro to SQL</title>
      <link>/software-eng-essentials/db-sql/sql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/db-sql/sql/</guid>
      <description>Learning Objectives Concepts  DDL and DML statements SQL Scripts  Skills  Create some data in the database Read some data from the database Update some data in the database Delete some data from the database  Intro to SQL Structured Query Language(SQL) lets you access and manipulate databases.</description>
    </item>
    
    <item>
      <title>Understanding Middleware</title>
      <link>/javascript/express/middleware/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/express/middleware/</guid>
      <description>Learning Objectives  Understand how Express is a middleware engine Describe the function signature of a middleware function Explain how the order of middleware registration affects the order of execution Write a simple middleware function  Introduction Middleware is the bread and butter of the Express framework.</description>
    </item>
    
    <item>
      <title>A New Terminal</title>
      <link>/software-eng-essentials/terminal-and-shell/labs/lab-a-new-terminal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/terminal-and-shell/labs/lab-a-new-terminal/</guid>
      <description>A long time ago in a unix environment far, far away, young Jedi padawans who knew only of desktop software were seduced by the dark side of the Force to enter&amp;hellip; The Terminal.</description>
    </item>
    
    <item>
      <title>Arrays Lab</title>
      <link>/javascript/foundations/labs/arrays-lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/labs/arrays-lab/</guid>
      <description>Step 1: Create the JavaScript file and Add the Starter Code cd $HOME/js-foundations/labs touch arrays.js Add the following code to arrays.</description>
    </item>
    
    <item>
      <title>Chart Creation</title>
      <link>/python/automation/charts/database-interaction/db-dataframe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/automation/charts/database-interaction/db-dataframe/</guid>
      <description>Tables to DataFrames To have the ability to working with Pandas, we first need to convert all database tables to DataFrames.</description>
    </item>
    
    <item>
      <title>Comments</title>
      <link>/python/foundation/comments/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/foundation/comments/</guid>
      <description>An introduction to IDLE, math functions and variables
Making comments in our code with Python There are two types of commenting in python: single-line and multi-line</description>
    </item>
    
    <item>
      <title>Component State</title>
      <link>/react/foundations/labs/lab-component-state/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/foundations/labs/lab-component-state/</guid>
      <description>Traffic Light Part 1 - Function Components with the useState hook Follow the Basic Instructions below using all function components</description>
    </item>
    
    <item>
      <title>Containerizing Your Application</title>
      <link>/cloud/containers/developing-with-docker/containerizing-your-application/containerizing-your-application/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/cloud/containers/developing-with-docker/containerizing-your-application/containerizing-your-application/</guid>
      <description>Concepts  Altering code to be stateless Source code should not depend on local variables Dockerizing a runtime Copying source code into a container Container port mapping Adding a web framework dependency Leverage build cache Set working directory Set user with permissions  Code should be stateless This relates to the following Factors:</description>
    </item>
    
    <item>
      <title>Context API</title>
      <link>/custom-workshops/frontend-at-thd/react-crash-course/context-api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/custom-workshops/frontend-at-thd/react-crash-course/context-api/</guid>
      <description>Learn about React&amp;rsquo;s Context API for sharing state across components.
Objectives  Review state in a React app Learn about the Context API Explore the use cases of Context Learn the 3 steps to using the Context API  Skills  Use the context API to share state in a React app Create a Context Object Use a Provider component to provide a value Use the useContext hook to consume a value  React App State Let&amp;rsquo;s review some concepts around React app state management.</description>
    </item>
    
    <item>
      <title>Coordinating Channels</title>
      <link>/golang/concurrency/coordination/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/concurrency/coordination/</guid>
      <description>We&amp;rsquo;ve seen how channels can be used for communication between concurrent processes, now lets discuss how to coordinate several concurrent processes.</description>
    </item>
    
    <item>
      <title>CSS Colors and Fonts</title>
      <link>/web-essentials/webmastery-foundations/colors-and-fonts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/web-essentials/webmastery-foundations/colors-and-fonts/</guid>
      <description>Learning Objectives Concepts  Explain how CSS works with color. Explain CSS font families and fonts.</description>
    </item>
    
    <item>
      <title>Customizing Views</title>
      <link>/python/web-framework/django_views/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/web-framework/django_views/</guid>
      <description>Overview A view is a “type” of Web page in your Django application that generally serves a specific function and has a specific template.</description>
    </item>
    
    <item>
      <title>Data Types</title>
      <link>/javascript/foundations/data-types/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/data-types/</guid>
      <description>Understanding the data types of the JavaScript language.
Data Types JavaScript supports primitive and composite (reference) data types.</description>
    </item>
    
    <item>
      <title>Directories</title>
      <link>/software-eng-essentials/command-line-bash/directories/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/command-line-bash/directories/</guid>
      <description>:lesson-title: Command Line and Bash Scripting :tags: command line commandline cli bash shell scripting scripts :description: Learning to use the power of the command line and bash shell scripting include::vars.</description>
    </item>
    
    <item>
      <title>Docker Networks</title>
      <link>/cloud/containers/developing-with-docker/int-testing/networks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/cloud/containers/developing-with-docker/int-testing/networks/</guid>
      <description>Concepts  Describe how Docker networks allow containers to communicate Explain the default network Explain named networks and how they differ from the default network  Introduction Docker networks:</description>
    </item>
    
    <item>
      <title>Docker Registries</title>
      <link>/cloud/containers/docker-fundamentals/docker-registries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/cloud/containers/docker-fundamentals/docker-registries/</guid>
      <description>Objectives  How to use Docker Hub? How to use THD&amp;rsquo;s Artifactory  What Are Registries?</description>
    </item>
    
    <item>
      <title>Error Handling</title>
      <link>/javascript/express/error-handling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/express/error-handling/</guid>
      <description>Learning Objectives  Understand how Express uses middleware functions to handle errors Dispatch an error from a route Write a generic error handler for an Express application Write a 404 error handler for an Express application  Introduction There are 2 aspects to proper error handling:</description>
    </item>
    
    <item>
      <title>External APIs</title>
      <link>/golang/api/external-apis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/api/external-apis/</guid>
      <description>Objectives  Discuss how to pull in data from an external API Display data from 3rd party along-side existing data Collect and send information to external API Formatting the data once retrieved  API Interaction To interact with APIs in Go, this lesson will use the net/http package provides HTTP client and server implementations.</description>
    </item>
    
    <item>
      <title>Git Stash</title>
      <link>/software-eng-essentials/git-pillars/stash/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/git-pillars/stash/</guid>
      <description>Learning Objectives  Holding changes out of the index Putting changes back into the index Selectively stash changes out of the index  Git Stash git stash puts aside a set of commits while you commit another set.</description>
    </item>
    
    <item>
      <title>Hands On Lab</title>
      <link>/application-security/api-security/02_human_to_service_oidc/40_lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/application-security/api-security/02_human_to_service_oidc/40_lab/</guid>
      <description>Identifying and Authorizing Users  This section covers the OIDC+Auth Code grant While not limited to browsers specifically it is the most common interaction with the flow developers and users have, but can be used with Native Mobile apps and even CLIs.</description>
    </item>
    
    <item>
      <title>History Labs</title>
      <link>/software-eng-essentials/git-foundations/history-labs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/git-foundations/history-labs/</guid>
      <description>Why Version control? Imagine you are part of a team that is tasked to build a bridge.</description>
    </item>
    
    <item>
      <title>Input, Output, and Streams</title>
      <link>/software-eng-essentials/terminal-and-shell/input-output-streams/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/terminal-and-shell/input-output-streams/</guid>
      <description>Input/Output In computer programming, input/output (or I/O) is the communication between computers and the outside world.</description>
    </item>
    
    <item>
      <title>Intro to Components</title>
      <link>/react/foundations/intro-to-components/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/foundations/intro-to-components/</guid>
      <description>An introduction to creating React Components.
Concepts  Define Components Compare stateful / container with stateless / presentation components Explain Component Composition  Skills  Use ES6 syntax for creating stateless components  Components  Components are the heart and soul of React.</description>
    </item>
    
    <item>
      <title>Intro to Redux</title>
      <link>/react/pillars/redux/intro-to-redux/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/redux/intro-to-redux/</guid>
      <description>Exploring Redux with vanilla JS
 Topics 1. Learning Objectives 1.1. Concepts 1.2. Skills   2.</description>
    </item>
    
    <item>
      <title>Intro to TDD</title>
      <link>/javascript/nodejs/testing/intro-to-tdd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/nodejs/testing/intro-to-tdd/</guid>
      <description>Learning Objectives  What is TDD Why use TDD Approaches to TDD  What is TDD Test Driven Development (TDD) is an approach to programming where test code drives the implementation and detailed design of the production code.</description>
    </item>
    
    <item>
      <title>JS Crash Course</title>
      <link>/custom-workshops/frontend-at-thd/js-crash-course/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/custom-workshops/frontend-at-thd/js-crash-course/</guid>
      <description>Object Destructuring One of the many features that ES2015 (aka ES6) brought us is the Destructuring Assignment for Objects.</description>
    </item>
    
    <item>
      <title>JSON Web Token (JWT)</title>
      <link>/application-security/api-security/01_service_to_service_oauth2/40_jwt/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/application-security/api-security/01_service_to_service_oauth2/40_jwt/</guid>
      <description>JWT JWT ( pronounced jot )
 Stands for JSON Web Token Is a spec defining the fields and value types the JSON should have It is the glue that make all this work.</description>
    </item>
    
    <item>
      <title>Lab: Gift List App Set Up</title>
      <link>/react/pillars/testing/tdd/gift-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/testing/tdd/gift-list/</guid>
      <description>Gift List App Set Up
 Topics 1. In this lesson you will learn: 2. The Demo 3.</description>
    </item>
    
    <item>
      <title>Lab: Test Drive Your Text Editor</title>
      <link>/software-eng-essentials/text-editors/text-editors-labs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/text-editors/text-editors-labs/</guid>
      <description>Instructions:
 Create a directory, text-editor-labs Complete these challenges with minimal use of the mouse or trackpad  Eggs and Ham  Create a file called eggs-and-ham.</description>
    </item>
    
    <item>
      <title>LookerML</title>
      <link>/software-eng-essentials/looker/lookml/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/looker/lookml/</guid>
      <description>This lesson will cover how Looker works as well as how to build and maintain your own LookML data model.</description>
    </item>
    
    <item>
      <title>Primitives</title>
      <link>/java/foundations/primitives/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/java/foundations/primitives/</guid>
      <description>Learning Objectives Concepts  Understanding primitive types List the primitive types  Skills  Declare variables using any of the primitive types  Variables Creating a variable has two main parts:</description>
    </item>
    
    <item>
      <title>Pytest Command</title>
      <link>/python/testing/pytest-command/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/testing/pytest-command/</guid>
      <description>Learning Objectives  Identifying Existing Tests Execute a Test Running Specific Tests Skip Tests Setting a Timeout Saving Test Results Generating Coverage Reports  pytest The pytest CLI command is intended to be used with test functions and classes found within a test file.</description>
    </item>
    
    <item>
      <title>React and Redux</title>
      <link>/react/pillars/redux/react-and-redux/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/redux/react-and-redux/</guid>
      <description>Using Redux in your React application
 Topics 1. Learning Objectives 1.1. Concepts 1.2. Skills   2.</description>
    </item>
    
    <item>
      <title>React.useCallback</title>
      <link>/react/pillars/perf-opt-strategies/use-callback/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/perf-opt-strategies/use-callback/</guid>
      <description>Declaring callback functions can cause unnecessary renders. Use React.useCallback to avoid the unnecessary re-renders.
Motivation  Recall that in JavaScript (and other functional programming languages) a function is just a value.</description>
    </item>
    
    <item>
      <title>Redis Set Up</title>
      <link>/golang/databases/redis-setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/databases/redis-setup/</guid>
      <description>If you have Homebrew installed, install Redis the following way: brew install redis Launch Redis on computer starts ln -sfv /usr/local/opt/redis/*.</description>
    </item>
    
    <item>
      <title>Sending Emails</title>
      <link>/python/automation/send-emails/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/automation/send-emails/</guid>
      <description>Learning Objectives  Create emails using Python Send emails using Python the Home Depot way  Emails A common thing that takes place in the industry is to automate the sending of emails.</description>
    </item>
    
    <item>
      <title>Server-side Rendering</title>
      <link>/javascript/performance/server-side-rendering/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/performance/server-side-rendering/</guid>
      <description>What is server-side rendering? Server-side rendering is one of the earliest techniques for serving web pages, and involves building a web document before it is sent to a client.</description>
    </item>
    
    <item>
      <title>Server-side Rendering</title>
      <link>/react/performance/server-side-rendering/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/performance/server-side-rendering/</guid>
      <description>What is server-side rendering? Server-side rendering is one of the earliest techniques for serving web pages, and involves building a web document before it is sent to a client.</description>
    </item>
    
    <item>
      <title>SQL Joins</title>
      <link>/software-eng-essentials/db-sql/sql-joins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/db-sql/sql-joins/</guid>
      <description>Learning Objectives Concepts  Learn how rows are related to other rows via foreign keys Describe the different types of joins: inner, left-outer, right-outer, and full-outer.</description>
    </item>
    
    <item>
      <title>Step 3: Call the API from the server to fetch data for the app</title>
      <link>/javascript/performance/universal-rendering-lab/step-3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/performance/universal-rendering-lab/step-3/</guid>
      <description>The markets aren&amp;rsquo;t getting populated because the function componentDidMount() in src/client/components/MarketList.jsx doesn&amp;rsquo;t ever get called when our app is rendered via renderToString.</description>
    </item>
    
    <item>
      <title>Step 3: Call the API from the server to fetch data for the app</title>
      <link>/react/performance/universal-rendering-lab/step-3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/performance/universal-rendering-lab/step-3/</guid>
      <description>The markets aren&amp;rsquo;t getting populated because the function componentDidMount() in src/client/components/MarketList.jsx doesn&amp;rsquo;t ever get called when our app is rendered via renderToString.</description>
    </item>
    
    <item>
      <title>Test Driven Development</title>
      <link>/golang/testing/tdd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/testing/tdd/</guid>
      <description>Goals To learn what test driven development is and where to start
Learning Objectives  What is TDD How to Start  What is TDD Test-Driven development is an incremental way to build a feature.</description>
    </item>
    
    <item>
      <title>Test Driven Development</title>
      <link>/software-eng-essentials/testing/tdd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/testing/tdd/</guid>
      <description>Goals To learn what test driven development is and where to start
Learning Objectives  What is TDD How to Start  What is TDD Test-Driven development is an incremental way to build a feature.</description>
    </item>
    
    <item>
      <title>Testing Forms</title>
      <link>/react/pillars/testing/react-testing-library/rtl-forms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/testing/react-testing-library/rtl-forms/</guid>
      <description>Introduction Forms in React generally have these characteristics:
 a &amp;lt;form&amp;gt; HTML element that contains one or more &amp;lt;input&amp;gt; elements a &amp;lt;submit&amp;gt; input or button that submits the form state variables that track the state of each input element inside the form a callback to invoke when submitting the form some form validation logic - an invalid form state may mean the submit button is disabled  Our ProductForm component has all of these characteristics, so let&amp;rsquo;s get to testing them.</description>
    </item>
    
    <item>
      <title>Testing Suite Structure</title>
      <link>/react/pillars/testing/tdd/test-suite-structure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/testing/tdd/test-suite-structure/</guid>
      <description>Testing Suite Structure
 Topics 1. In this lesson you will learn: 2. How do you structure a test suite?</description>
    </item>
    
    <item>
      <title>The useRef Hook</title>
      <link>/react/pillars/hooks/useref/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/hooks/useref/</guid>
      <description>Concepts and Skills  Learn how useRef can hold onto mutable objects within a React component Learn how useRef is sometimes necessary when using 3rd party libraries that are not written for React  Introduction The useRef hook returns a mutable object whose .</description>
    </item>
    
    <item>
      <title>Types</title>
      <link>/golang/foundations/types/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/foundations/types/</guid>
      <description>Go Types Learning Objectives Concepts  What is a built-in type The number types The string type Boolean types  Skills  Basic number literal arithmetic and operators Understanding String Using boolean types and operators.</description>
    </item>
    
    <item>
      <title>User Stories</title>
      <link>/software-eng-essentials/agile-lean/user-stories/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/agile-lean/user-stories/</guid>
      <description>Learning Objectives  Describe User Stories and their benefits List some benefits of User Stories Write a User Story that follows the INVEST criteria Describe Epics and Themes  Some History User stories:</description>
    </item>
    
    <item>
      <title>Using a User Defined Service</title>
      <link>/cloud/platforms/pcf-foundations/user-defined-service/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/cloud/platforms/pcf-foundations/user-defined-service/</guid>
      <description>These instructions assume that an external database has been created for you. You should be provided with the following information about the database you are to use:</description>
    </item>
    
    <item>
      <title>Git Stash Lab</title>
      <link>/software-eng-essentials/git-pillars/stash-lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/git-pillars/stash-lab/</guid>
      <description>Stashing Lab  Create a directory and call it git-stash-lab Navigate into the git-stash-lab directory Initialize this as a git repo Create three text files: test1.</description>
    </item>
    
    <item>
      <title>Intro to TDD Lab</title>
      <link>/javascript/nodejs/testing/tdd-js-lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/nodejs/testing/tdd-js-lab/</guid>
      <description>JavaScript TDD Lab This lab will require you to write both integration tests and unit tests.</description>
    </item>
    
    <item>
      <title>Lab: Gift App, Choose your own adventure</title>
      <link>/react/pillars/testing/tdd/gift-list-choice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/testing/tdd/gift-list-choice/</guid>
      <description>Gift App, Choose your own adventure
 Topics 1. Choose your own adventure lab 1.1. Level A: I got this!</description>
    </item>
    
    <item>
      <title>Redis and Golang</title>
      <link>/golang/databases/redis-golang/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/databases/redis-golang/</guid>
      <description>Redis and Golang Say now that we have an implementation done, you present the CRUD actions to the team and someone questions your choice in database.</description>
    </item>
    
    <item>
      <title>Lab: Gift App, Choose your own adventure: Option A</title>
      <link>/react/pillars/testing/tdd/gift-list-level-a/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/testing/tdd/gift-list-level-a/</guid>
      <description>Gift App, Choose your own adventure
 1. In this lesson you will learn:   How to turn acceptance criteria into tests</description>
    </item>
    
    <item>
      <title>Lab: Gift App, Choose your own adventure: Option B</title>
      <link>/react/pillars/testing/tdd/gift-list-level-b/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/testing/tdd/gift-list-level-b/</guid>
      <description>Gift App, Choose your own adventure
 1. In this lesson you will learn:   How to turn acceptance criteria into tests</description>
    </item>
    
    <item>
      <title>How to Test Routing</title>
      <link>/react/pillars/testing/tdd/gift-list-routing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/testing/tdd/gift-list-routing/</guid>
      <description>How to Test Routing
 Topics 1. How to Test Routing 1.1. Bonus     1.</description>
    </item>
    
    <item>
      <title>Advanced SQL Joins</title>
      <link>/software-eng-essentials/db-sql/advanced-sql-joins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/db-sql/advanced-sql-joins/</guid>
      <description>Learning Objectives Concepts  Learn how to join more than 2 tables together using inner, left-outer, right-outer, and full-outer joins Learn how to represent a many-to-many relationship  Skills  Write SQL queries that use joins to select related data from more than 2 tables.</description>
    </item>
    
    <item>
      <title>Async Redux</title>
      <link>/react/pillars/redux/async-redux/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/redux/async-redux/</guid>
      <description>Adding Async Support to Redux with redux-thunk
 Topics 1. Learning Objectives 1.1. Concepts 1.2. Skills   2.</description>
    </item>
    
    <item>
      <title>Container Basics</title>
      <link>/cloud/containers/docker-fundamentals/container-basics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/cloud/containers/docker-fundamentals/container-basics/</guid>
      <description>Objectives  Understand the difference between Images vs Containers Using Basic Docker Commands What is Docker Hub Running Containers Viewing lists of containers and images Removing containers and images  Running Containers docker create [OPTIONS] IMAGE [COMMAND] [ARG.</description>
    </item>
    
    <item>
      <title>Pytest Assertions</title>
      <link>/python/testing/pytest-assertions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/testing/pytest-assertions/</guid>
      <description>Learning Objectives  Showing the different Assertions that can be used with Pytest Combining parametrized test with assertions  pytest Assertions As we&amp;rsquo;ve seen, Assertions in pytest check rather a test condition returns True or False.</description>
    </item>
    
    <item>
      <title>Behavior Driven Development</title>
      <link>/golang/testing/bdd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/testing/bdd/</guid>
      <description>Goals Gain an understanding of what Behavior Driven Development is and how it could be accomplished.</description>
    </item>
    
    <item>
      <title>Behavior Driven Development</title>
      <link>/software-eng-essentials/testing/bdd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/testing/bdd/</guid>
      <description>Goals Gain an understanding of what Behavior Driven Development is and how it could be accomplished.</description>
    </item>
    
    <item>
      <title>Benchmarking</title>
      <link>/golang/concurrency/benchmarking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/concurrency/benchmarking/</guid>
      <description>When we are using concurrency, we probably want to know just how much of an efficiency benefit we&amp;rsquo;re gaining from it.</description>
    </item>
    
    <item>
      <title>Box Model</title>
      <link>/web-essentials/webmastery-foundations/box-model/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/web-essentials/webmastery-foundations/box-model/</guid>
      <description>Learning Objectives Concepts  Describe the box model Describe the difference between block, inline, and inline-block elements  Skills  Adjust element spacing using padding and margin Create floating elements to position content removed from the standard document flow Explain the difference between and use cases of static, relative, fixed, &amp;amp; absolute positioning Create a page with multicolumn layout  Box Model Intro The CSS box model is essentially a box that wraps around every HTML element.</description>
    </item>
    
    <item>
      <title>Client Credentials Flow</title>
      <link>/application-security/api-security/01_service_to_service_oauth2/50_client-cred-flow/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/application-security/api-security/01_service_to_service_oauth2/50_client-cred-flow/</guid>
      <description>Securing API to API Communications The client credentials flow is used to authorize one server against another, no humans.</description>
    </item>
    
    <item>
      <title>Commenting</title>
      <link>/java/foundations/comments/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/java/foundations/comments/</guid>
      <description>Learning Objectives Concepts  Line Comments Block Comments JavaDocs  Skills  Use comments to enhance code readability  Implementation Comments In general, comments are used to provide insight into a specific implementation or idea behind a block of code.</description>
    </item>
    
    <item>
      <title>Component Props</title>
      <link>/react/foundations/component-props/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/foundations/component-props/</guid>
      <description>Using props to configure React Components.
Introduction to Props  Since components are intended to be reusable, we need a way to configure them and send them data.</description>
    </item>
    
    <item>
      <title>Customization</title>
      <link>/software-eng-essentials/command-line-bash/customization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/command-line-bash/customization/</guid>
      <description>Customization  Bash profile Aliasing Commands Customizing the Prompt  Bash profile This file, which probably already exists on your system, is used to configure the shell, which is the program that supplies a command line.</description>
    </item>
    
    <item>
      <title>Database Migrations</title>
      <link>/golang/databases/migrations-golang/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/databases/migrations-golang/</guid>
      <description>Learning Objectives Concepts  Explain the golang-migrate package Adding migration files to a go project Use golang-migrate to create and migrate files from the command line Build a sample go script to migrate files  Golang and Database Migrations Database migrations are important for making changes to the database schema.</description>
    </item>
    
    <item>
      <title>Debugging Docker</title>
      <link>/cloud/containers/developing-with-docker/containerizing-your-application/debugging-docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/cloud/containers/developing-with-docker/containerizing-your-application/debugging-docker/</guid>
      <description>Concepts  Logging in Docker Checking Processes in Docker  Logging in Docker The docker logs command batch-retrieves logs present at the time of execution.</description>
    </item>
    
    <item>
      <title>Decisions Lab</title>
      <link>/javascript/foundations/labs/decisions-lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/labs/decisions-lab/</guid>
      <description>Let&amp;rsquo;s write a Tip Calculator.
Step 1: Create the JavaScript file and Add the Starter Code cd $HOME/js-foundations/labs touch tip-calculator.</description>
    </item>
    
    <item>
      <title>Docker Compose</title>
      <link>/cloud/containers/developing-with-docker/int-testing/docker-compose/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/cloud/containers/developing-with-docker/int-testing/docker-compose/</guid>
      <description>Concepts  Describe how Docker Compose allows for connecting multiple containers (services) for intercommunication Explain the purpose of the docker-compose.</description>
    </item>
    
    <item>
      <title>Events</title>
      <link>/react/foundations/labs/lab-events/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/foundations/labs/lab-events/</guid>
      <description>Lab - Build a Simple TODO App Use create-react-app to create a TODO app with the following:</description>
    </item>
    
    <item>
      <title>Expressions</title>
      <link>/java/foundations/expressions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/java/foundations/expressions/</guid>
      <description>Learning Objectives Concepts &amp;amp; Skills  Declaring variables Arithmetic expressions and operator precedence String expressions Logic expressions  Keyword: final The modifier final makes a variable immutable which means that once it has been assigned, it cannot be reassigned.</description>
    </item>
    
    <item>
      <title>Expressions</title>
      <link>/javascript/foundations/expressions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/expressions/</guid>
      <description>How to write numeric and boolean expression in JavaScript.
Expressions and Statements  Expressions can be evaluated to produce a value, for example: x + 5 Statements perform actions and do not produce a value, for example console.</description>
    </item>
    
    <item>
      <title>Full Architecture</title>
      <link>/application-security/api-security/02_human_to_service_oidc/50_full_architecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/application-security/api-security/02_human_to_service_oidc/50_full_architecture/</guid>
      <description>Putting together the OIDC + OAuth2 </description>
    </item>
    
    <item>
      <title>Generic Views</title>
      <link>/python/web-framework/django_generic_views/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/web-framework/django_generic_views/</guid>
      <description>Less code is better The stores() view is very simple – and, as mentioned above, redundant.</description>
    </item>
    
    <item>
      <title>Git Cherry Pick</title>
      <link>/software-eng-essentials/git-pillars/cherry-pick/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/git-pillars/cherry-pick/</guid>
      <description>Learning Objectives  Isolate a diff from a specific commit Play that diff onto a current branch  Scenario If you are working on a feature branch of a product and someone creates a fixbug or hotfix to fix a bug in production, your feature branch will need to bring in that bug fix as well.</description>
    </item>
    
    <item>
      <title>Git Cherry Pick Lab</title>
      <link>/software-eng-essentials/git-pillars/cherry-lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/git-pillars/cherry-lab/</guid>
      <description>The Setup  Work in the same repo as the filter practice: https://github.com/one-thd/om_labs_git-filter.git Run your favorite log to find the commit from fixbug1 that fixes bug 1.</description>
    </item>
    
    <item>
      <title>Git set up</title>
      <link>/software-eng-essentials/git-foundations/git-setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/git-foundations/git-setup/</guid>
      <description>Getting Started Before we can work with git, you first have to make sure you have git.</description>
    </item>
    
    <item>
      <title>Git set up</title>
      <link>/software-eng-essentials/git-pillars/git-setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/git-pillars/git-setup/</guid>
      <description>Getting Started Before we can work with git, you first have to make sure you have git.</description>
    </item>
    
    <item>
      <title>Go Variables</title>
      <link>/golang/foundations/variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/foundations/variables/</guid>
      <description>Go Variables Learning Objectives Concepts  Variable Declarations Short Variable Declarations Constants Multiple Variables Scope Type Definitions  Skills  Defining variables for given types Using variables in place of literals Be able to cleanly define multiple variables Get a basic understanding of scope in Go  Variables Basics There are a few basic rules that must be followed when using a variable in go:</description>
    </item>
    
    <item>
      <title>Knex Quick Reference</title>
      <link>/javascript/nodejs/advanced/express-and-bookshelf/knex-quick-reference/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/nodejs/advanced/express-and-bookshelf/knex-quick-reference/</guid>
      <description>Knex Commands
   Command Description     knex &amp;ndash;help Print the Knex CLI help message   knex init Create a new knexfile.</description>
    </item>
    
    <item>
      <title>Navigating the File System</title>
      <link>/software-eng-essentials/terminal-and-shell/navigating-file-system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/terminal-and-shell/navigating-file-system/</guid>
      <description>Learning Objectives  What is a file system Understanding Files and Directories Relative and Absolute Paths The Home Directory and Getting Home The pwd command Listing directory contents with the ls command  What is The File System?</description>
    </item>
    
    <item>
      <title>Print Functions Labs</title>
      <link>/python/foundation/print-function-labs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/foundation/print-function-labs/</guid>
      <description>Print Labs Multiple Print Statements Using four separate print statements, produce the following output on one line.</description>
    </item>
    
    <item>
      <title>Redux Beyond the Basics</title>
      <link>/react/pillars/redux/redux-beyond-the-basics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/redux/redux-beyond-the-basics/</guid>
      <description>Working with Redux side-effects and libraries
 Topics 1. Learning Objectives 1.1. Concepts 1.2. Skills   2.</description>
    </item>
    
    <item>
      <title>Redux Beyond the Basics Solutions</title>
      <link>/react/pillars/redux/redux-beyond-the-basics-solutions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/redux/redux-beyond-the-basics-solutions/</guid>
      <description>Working with Redux side-effects and libraries
 Topics 1. LAB 01 - Route and Nav Setup 1.</description>
    </item>
    
    <item>
      <title>Step 4: Attach event listeners in the client</title>
      <link>/javascript/performance/universal-rendering-lab/step-4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/performance/universal-rendering-lab/step-4/</guid>
      <description>Nothing happens when we click the &amp;ldquo;right&amp;rdquo; arrow in our application because we haven&amp;rsquo;t attached any event listeners in the client.</description>
    </item>
    
    <item>
      <title>Step 4: Attach event listeners in the client</title>
      <link>/react/performance/universal-rendering-lab/step-4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/performance/universal-rendering-lab/step-4/</guid>
      <description>We can use the hydrate function from react-dom to attach event listeners in the client.</description>
    </item>
    
    <item>
      <title>Structuring an Express App</title>
      <link>/javascript/express/structuring/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/express/structuring/</guid>
      <description>Learning Objectives  Apply best practices for structuring and organizing an Express application Use middleware for logging requests and responses Add centralized error handling Use routers to organize routes Use a data service for managing and persisting data  Introduction  In this lesson we will be applying everything we&amp;rsquo;ve learned so far.</description>
    </item>
    
    <item>
      <title>Testing Custom Hooks</title>
      <link>/react/pillars/testing/react-testing-library/rtl-custom-hooks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/testing/react-testing-library/rtl-custom-hooks/</guid>
      <description>Introduction  A custom hook is simply a function that uses other React hooks in its implementation.</description>
    </item>
    
    <item>
      <title>The Dockerfile</title>
      <link>/cloud/containers/docker-fundamentals/thedockerfile/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/cloud/containers/docker-fundamentals/thedockerfile/</guid>
      <description>Concepts  Using a docker file to create a custom image Using FROM to build from a base image Using COPY/ADD to add files to an image Using RUN to execute a command at built time Using CMD to execute a command at runtime Use Docker Build to build an image Tagging your images  What is the Dockerfile?</description>
    </item>
    
    <item>
      <title>The useReducer Hook</title>
      <link>/react/pillars/hooks/usereducer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/hooks/usereducer/</guid>
      <description>Concepts and Skills  Understand how useReducer allows for local state management in a function component.</description>
    </item>
    
    <item>
      <title>Universal Rendering</title>
      <link>/javascript/performance/universal-rendering/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/performance/universal-rendering/</guid>
      <description>What is universal rendering? Universal rendering is an approach for building web applications wherein the server provides the client with the HTML and CSS for the initial load while the client attaches event listeners to the page so that the user can interact with the application as soon as possible.</description>
    </item>
    
    <item>
      <title>Universal Rendering</title>
      <link>/react/performance/universal-rendering/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/performance/universal-rendering/</guid>
      <description>What is universal rendering? Universal rendering is an approach for building web applications wherein the server provides the client with the HTML and CSS for the initial load while the client attaches event listeners to the page so that the user can interact with the application as soon as possible.</description>
    </item>
    
    <item>
      <title>Universal Rendering Crash Course</title>
      <link>/custom-workshops/frontend-at-thd/universal-rendering-crash-course/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/custom-workshops/frontend-at-thd/universal-rendering-crash-course/</guid>
      <description>What is universal rendering? Universal rendering is an approach for building web applications wherein the server provides the client with the HTML and CSS for the initial load while the client attaches event listeners to the page so that the user can interact with the application as soon as possible.</description>
    </item>
    
    <item>
      <title>Versioning</title>
      <link>/golang/api/versioning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/api/versioning/</guid>
      <description>Objectives  Understand why API&amp;rsquo;s should be versioned Understand available versioning schemes/options Properly version API after changes have been made  Versioning APIs When creating and maintaining an API, one of the biggest blockers is taking care of updates to the API.</description>
    </item>
    
    <item>
      <title>Web Workers</title>
      <link>/react/pillars/perf-opt-strategies/web-worker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/perf-opt-strategies/web-worker/</guid>
      <description>Use Web Workers to offload long computations to a separate worker thread, freeing up the main UI thread to interact with the user and update the DOM.</description>
    </item>
    
    <item>
      <title>BDD with Ginkgo and Gomega</title>
      <link>/golang/testing/go-bdd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/testing/go-bdd/</guid>
      <description>Learning Objectives  Intro to BDD Generating tests Test Suite File Organizational functions It aliases Teardown and Setup for tests and suites  Behavioral Driven Development Behavioral Driven Development (BDD) is a software development approach that has evolved from TDD (Test Driven Development).</description>
    </item>
    
    <item>
      <title>Box Model Labs</title>
      <link>/web-essentials/webmastery-foundations/box-model-labs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/web-essentials/webmastery-foundations/box-model-labs/</guid>
      <description>View the following on Percipio Percipio CSS Box Model
Percipio CSS Selectors
Peripio CSS Positioning</description>
    </item>
    
    <item>
      <title>API Testing</title>
      <link>/golang/api/api-testing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/api/api-testing/</guid>
      <description>Where to Start Inside Out vs Outside In Where to start testing can sometimes be a bit hard to determine.</description>
    </item>
    
    <item>
      <title>Bash Scripting Intro</title>
      <link>/software-eng-essentials/command-line-bash/bash-scripting-intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/command-line-bash/bash-scripting-intro/</guid>
      <description>Learning to use the power of the command line and bash shell scripting
 What is a bash script?</description>
    </item>
    
    <item>
      <title>Build Context</title>
      <link>/cloud/containers/docker-fundamentals/build-context/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/cloud/containers/docker-fundamentals/build-context/</guid>
      <description>Concepts  Use a PATH or URL as a context. Filter the build context.  What is build context?</description>
    </item>
    
    <item>
      <title>Concurrency Patterns</title>
      <link>/golang/concurrency/patterns/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/concurrency/patterns/</guid>
      <description>Now that we have a basic understanding of Concurrency in Golang and the basic tools, let&amp;rsquo;s take a deeper dive into some of the patterns we can accomplish using those tools.</description>
    </item>
    
    <item>
      <title>Control Structures</title>
      <link>/golang/foundations/control-structures/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/foundations/control-structures/</guid>
      <description>Control! You must learn control! Learning Objectives Concepts  If statements The Switch statements For — the only loop you will ever need.</description>
    </item>
    
    <item>
      <title>Dependency Injection</title>
      <link>/golang/testing/dependency/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/testing/dependency/</guid>
      <description>Goals Understand what Dependency Injection (DI) is and why it allows for smaller, digestable units that make testing an application easier.</description>
    </item>
    
    <item>
      <title>Dependency Injection</title>
      <link>/software-eng-essentials/testing/dependency/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/testing/dependency/</guid>
      <description>Goals Understand what Dependency Injection (DI) is and why it allows for smaller, digestable units that make testing an application easier.</description>
    </item>
    
    <item>
      <title>Django Admin</title>
      <link>/python/web-framework/django_admin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/web-framework/django_admin/</guid>
      <description>Philosophy Generating admin sites for your staff or clients to add, change, and delete content is tedious work that doesn’t require much creativity.</description>
    </item>
    
    <item>
      <title>Easter Calculation Lab</title>
      <link>/java/foundations/easter-lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/java/foundations/easter-lab/</guid>
      <description>Starter code for this lab can be found: here
A convenient algorithm for determining the date of Easter in a given year was devised in 1876 and first appeared in Butcher’s Ecclesiastical Handbook.</description>
    </item>
    
    <item>
      <title>Forms</title>
      <link>/react/foundations/labs/lab-forms-calculator/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/foundations/labs/lab-forms-calculator/</guid>
      <description>A lab for working with React and forms.
Use controlled components to build a simple form that calculates a user&amp;rsquo;s input</description>
    </item>
    
    <item>
      <title>Gitting Started</title>
      <link>/software-eng-essentials/git-foundations/gitting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/git-foundations/gitting-started/</guid>
      <description>git help A great resource is the help command within git itself. Simply type:
git help A list of common commands will pop up in your terminal.</description>
    </item>
    
    <item>
      <title>HTML Forms</title>
      <link>/web-essentials/webmastery-foundations/html-forms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/web-essentials/webmastery-foundations/html-forms/</guid>
      <description>Learning Objectives  Introduce the html form element Discuss form actions Review the attributes available to the input element  Skills  Build interactive forms Understand the available input options  Forms The HTML &amp;lt;form&amp;gt; element allows users to interact with an application.</description>
    </item>
    
    <item>
      <title>Iterations Lab</title>
      <link>/javascript/foundations/labs/iterations-lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/labs/iterations-lab/</guid>
      <description>Step 1: Create the JavaScript file and Add the Starter Code cd $HOME/js-foundations/labs touch iterations.js Add the following code to iterations.</description>
    </item>
    
    <item>
      <title>Kitchen Organizer</title>
      <link>/software-eng-essentials/terminal-and-shell/labs/lab-kitchen-organizer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/terminal-and-shell/labs/lab-kitchen-organizer/</guid>
      <description>Follow the instructions in: Kitchen Organizer.</description>
    </item>
    
    <item>
      <title>Managing the File System</title>
      <link>/software-eng-essentials/terminal-and-shell/managing-file-system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/terminal-and-shell/managing-file-system/</guid>
      <description>Learning Objectives  Managing directories - the mkdir, rmdir, and rm -r commands Managing Files - the touch, cp commands Moving and Renaming Files and Directories - the mv command Copying Files and Directories - the cp command Removing Files - the rm command Viewing file contents - cat, more or less, head and tail Searching files - grep  Creating Directories  The command to create a directory is mkdir (make directory).</description>
    </item>
    
    <item>
      <title>Math Functions</title>
      <link>/python/foundation/math-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/foundation/math-functions/</guid>
      <description>Math Functions abs()
Finds the absolute value
print(90 - 120) print(abs(90 - 120)) Output:
-30 30 pow()</description>
    </item>
    
    <item>
      <title>Multi-stage Docker Builds</title>
      <link>/cloud/containers/developing-with-docker/containerizing-your-application/multi-stage-docker-builds/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/cloud/containers/developing-with-docker/containerizing-your-application/multi-stage-docker-builds/</guid>
      <description>Concepts  Multi-stage build Targeting a specific stage in a multi-stage build  Multi-stage build The node:12-stretch image is based off Debian and it has tools like curl installed.</description>
    </item>
    
    <item>
      <title>Pagination</title>
      <link>/react/pillars/perf-opt-strategies/pagination/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/perf-opt-strategies/pagination/</guid>
      <description>Use Pagination to avoid rendering a large data set all at once.
Problem Loading and rendering large data sets can become a performance concern due to:</description>
    </item>
    
    <item>
      <title>PCF Deployment Checklist</title>
      <link>/cloud/platforms/pcf-foundations/checklist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/cloud/platforms/pcf-foundations/checklist/</guid>
      <description>.cfignore your node_modules Create a .cfignore file that specifies node_modules (a single line of text, similar to the .</description>
    </item>
    
    <item>
      <title>PropTypes (optional)</title>
      <link>/react/foundations/prop-types/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/foundations/prop-types/</guid>
      <description>Using PropTypes to verify a component&amp;rsquo;s props.
NOTE: this is an optional lesson as propTypes are not essential to learning React.</description>
    </item>
    
    <item>
      <title>Step 5: Pass data from the server to the client</title>
      <link>/javascript/performance/universal-rendering-lab/step-5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/performance/universal-rendering-lab/step-5/</guid>
      <description>One way that we can pass data from the server to the client is by serializing it (parsing it into a string) and including it in the response that we send to the client.</description>
    </item>
    
    <item>
      <title>Step 5: Pass data from the server to the client</title>
      <link>/react/performance/universal-rendering-lab/step-5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/performance/universal-rendering-lab/step-5/</guid>
      <description>One way that we can pass data from the server to the client is by serializing it (parsing it into a string) and including it in the response that we send to the client.</description>
    </item>
    
    <item>
      <title>Strings</title>
      <link>/javascript/foundations/strings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/strings/</guid>
      <description>An introduction to JavaScript Strings.
Objectives  Use String methods to access and manipulate String values Use String templates to create strings that contain evaluated JavaScript expressions  Creating Strings  String literals can be written with single quotes or double quotes.</description>
    </item>
    
    <item>
      <title>Testing an Express App</title>
      <link>/javascript/express/testing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/express/testing/</guid>
      <description>Learning Objectives  Install dependencies for jest and supertest Define testing startup scripts in package.</description>
    </item>
    
    <item>
      <title>Testing Routes</title>
      <link>/react/pillars/testing/react-testing-library/rtl-routes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/testing/react-testing-library/rtl-routes/</guid>
      <description>Introduction  The react-router library provides dynamic routing for React Applications, resulting in a SPA experience for the user.</description>
    </item>
    
    <item>
      <title>HTML Forms Labs</title>
      <link>/web-essentials/webmastery-foundations/html-forms-labs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/web-essentials/webmastery-foundations/html-forms-labs/</guid>
      <description>Build a Basic Form Create a form that contains inputs for the following data
 LDAP Email Years with THD Password don&amp;rsquo;t enter your actual password!</description>
    </item>
    
    <item>
      <title>Testing Techniques</title>
      <link>/golang/testing/testing-techniques/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/testing/testing-techniques/</guid>
      <description>Goals To delve into techniques that are considered standard in the Go community.
Learning Objectives  Comparing Types and Collections Dependency Injection in Go   Comparing Types and Collections When comparing two types we have to keep in mind that Go is pass by value.</description>
    </item>
    
    <item>
      <title>Array, Slices and Maps</title>
      <link>/golang/foundations/array-slice-map/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/foundations/array-slice-map/</guid>
      <description>Go Collections: Arrays, Slices and Maps Learning Objectives Concepts  Creating and using  Arrays Slices Maps   Using range to loop over arrays, slices and maps  Arrays  Have fixed size collection of elements of the same type.</description>
    </item>
    
    <item>
      <title>Arrays</title>
      <link>/javascript/foundations/arrays/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/arrays/</guid>
      <description>Objectives  Declare an Array in JavaScript Access elements in an Array Use push and pop to add and remove elements from an Array Use shift and unshift to add and remove elements from an Array Use splice and slice to access and manipulate sections of an Array  What Are Arrays?</description>
    </item>
    
    <item>
      <title>Component State</title>
      <link>/react/foundations/component-state/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/foundations/component-state/</guid>
      <description>How React components manage state.
Concepts  Understand React&amp;rsquo;s Uni-Directional Data Flow Describe how React updates the view without mutating state variables Use the useState hook to manage component state Compare State vs.</description>
    </item>
    
    <item>
      <title>Control Flow</title>
      <link>/java/foundations/control-flow/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/java/foundations/control-flow/</guid>
      <description>Learning Objectives Concepts &amp;amp; Skills  Write if/else Switch case Use a for loop for iteration Use a while loop  Algorithms There are only three necessary control structures needed to solve problems:</description>
    </item>
    
    <item>
      <title>Debouncing</title>
      <link>/react/pillars/perf-opt-strategies/debounce/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/perf-opt-strategies/debounce/</guid>
      <description>Use debouncing to prevent an operation from executing too often.
Problem  Sometimes an expensive operation or network request can be triggered too frequently, consuming resources and affecting overall performance and responsiveness.</description>
    </item>
    
    <item>
      <title>File Permissions</title>
      <link>/software-eng-essentials/terminal-and-shell/file-permissions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/terminal-and-shell/file-permissions/</guid>
      <description>Learning Objectives  Managing file ownership - the chown and chgrp commands File permissions - the chmod command  Introduction  In a UNIX based file system, every file and directory has an owner, a group, and a set of permissions.</description>
    </item>
    
    <item>
      <title>Gitting Started Labs</title>
      <link>/software-eng-essentials/git-foundations/gitting-started-labs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/git-foundations/gitting-started-labs/</guid>
      <description>git Research In groups, you&amp;rsquo;ll be assigned to a few of the following commands:
  git init</description>
    </item>
    
    <item>
      <title>Mocking, Stubbing, and Spying</title>
      <link>/golang/testing/mocks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/testing/mocks/</guid>
      <description>Goals Understand what mocks, stubs, and spies are and how to use them.
Learning Objectives  What are mocks, stubs, and spies When and how to use them  What are Mocks, Stubs, and Spies To best understand mocks, stubs, and spies a proper understanding of Dependency Injection is needed.</description>
    </item>
    
    <item>
      <title>Mocking, Stubbing, and Spying</title>
      <link>/software-eng-essentials/testing/mocks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/testing/mocks/</guid>
      <description>Goals Understand what mocks, stubs, and spies are and how to use them.
Learning Objectives  What are mocks, stubs, and spies When and how to use them  What are Mocks, Stubs, and Spies To best understand mocks, stubs, and spies a proper understanding of Dependency Injection is needed.</description>
    </item>
    
    <item>
      <title>Objects Lab</title>
      <link>/javascript/foundations/labs/objects-lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/labs/objects-lab/</guid>
      <description>Step 1: Create the JavaScript file and Add the Starter Code cd $HOME/js-foundations/labs touch objects.js Add the following code to objects.</description>
    </item>
    
    <item>
      <title>Running a Service in Docker</title>
      <link>/cloud/containers/docker-fundamentals/services-in-docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/cloud/containers/docker-fundamentals/services-in-docker/</guid>
      <description>Concepts  Understanding Port Mappings Exposing Ports in a Container Running a container in detached mode Reattaching to a container that is in detached mode  Port Mapping Before you can run you application, you need to be sure that your application is reachable.</description>
    </item>
    
    <item>
      <title>Server Side Rendering</title>
      <link>/javascript/express/ssr/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/express/ssr/</guid>
      <description>Learning Objectives  Describe CSR and SSR List some benefits of SSR Use Express to write a SSR application  Introduction There are 3 ways that HTML can be generated for a web page:</description>
    </item>
    
    <item>
      <title>Side Effects</title>
      <link>/react/foundations/labs/lab-side-effects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/foundations/labs/lab-side-effects/</guid>
      <description>In this lab you will clone an existing React project add the useEffect hook to properly fetch data from a RESTful server.</description>
    </item>
    
    <item>
      <title>Step 6: Measure performance</title>
      <link>/javascript/performance/universal-rendering-lab/step-6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/performance/universal-rendering-lab/step-6/</guid>
      <description>Using the skills that we acquired in the gathering metrics lesson, let&amp;rsquo;s measure the FCP and FMP of our application now that we have implemented universal rendering.</description>
    </item>
    
    <item>
      <title>Step 6: Measure performance</title>
      <link>/react/performance/universal-rendering-lab/step-6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/performance/universal-rendering-lab/step-6/</guid>
      <description>Using the skills that we acquired in the gathering metrics lesson, let&amp;rsquo;s measure the FCP and FMP of our application now that we have implemented universal rendering.</description>
    </item>
    
    <item>
      <title>Terminal: Text Editing</title>
      <link>/software-eng-essentials/command-line-bash/terminal-text-editing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/command-line-bash/terminal-text-editing/</guid>
      <description>Objectives  GNU Nano, nanu nanu! Emacs Vim  GNU Nano, nanu nanu! Nano session</description>
    </item>
    
    <item>
      <title>Transitions and Animations</title>
      <link>/web-essentials/webmastery-foundations/transitions-and-animations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/web-essentials/webmastery-foundations/transitions-and-animations/</guid>
      <description>Learning Objectives Concepts  Describe keyframe animation Compare &amp;amp; contrast using CSS and JS for animations  Skills  Use CSS Transitions to animate elements Use CSS Animations to create detailed animations  Intro In the past (before CSS3) developers had to use JavaScript and jQuery to make elements move around on the page.</description>
    </item>
    
    <item>
      <title>Variables</title>
      <link>/python/foundation/variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/foundation/variables/</guid>
      <description>Variables! This is based on a Monty Python-inspired math problem:
Assume a swallow weighs 60 grams, and one swallow is capable of carrying 1/3 of its own weight.</description>
    </item>
    
    <item>
      <title>Variables Labs</title>
      <link>/python/foundation/math-variables-labs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/foundation/math-variables-labs/</guid>
      <description>An introduction to IDLE, math functions and variables
Math and Variables Exercises Swallow Exercise  Can a swallow carry a coconut?</description>
    </item>
    
    <item>
      <title>Golang Mocks, Stubs and Spies</title>
      <link>/golang/testing/go-mock/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/testing/go-mock/</guid>
      <description>Objectives  Rehash of Dependency Injection and how its important to Mocks, Stubs and Spies Why using mocking The difference between a mock and a stub Generating mocks, stubs and spies with:  Go&amp;rsquo;s built-in mock package gomock&amp;rsquo;s mockgen testify&amp;rsquo;s mock package    Goals Become familiar with stubs, mocks, and spies.</description>
    </item>
    
    <item>
      <title>Transitions and Animations Labs</title>
      <link>/web-essentials/webmastery-foundations/transitions-and-animation-lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/web-essentials/webmastery-foundations/transitions-and-animation-lab/</guid>
      <description>Build a Smooth Accordion Here is some starter code for an accordion (taken from Paul Hayes article Creating an accordion using CSS transitions).</description>
    </item>
    
    <item>
      <title>Bonus</title>
      <link>/javascript/performance/universal-rendering-lab/bonus/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/performance/universal-rendering-lab/bonus/</guid>
      <description>We finished early! Is there anything else that we can do to improve the performance of our application?</description>
    </item>
    
    <item>
      <title>Bonus</title>
      <link>/react/performance/universal-rendering-lab/bonus/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/performance/universal-rendering-lab/bonus/</guid>
      <description>We finished early! Is there anything else that we can do to improve the performance of our application?</description>
    </item>
    
    <item>
      <title>Component State with JS Classes</title>
      <link>/react/foundations/state-with-classes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/foundations/state-with-classes/</guid>
      <description>Writing Container (stateful) Components with JavaScript Classes.
 NOTE: this is an optional lesson but may be helpful as legacy React code uses JavaScript classes for managing state.</description>
    </item>
    
    <item>
      <title>Context</title>
      <link>/react/foundations/labs/lab-context/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/foundations/labs/lab-context/</guid>
      <description>In this lab you will be replacing Prop Drilling with the Context API.
Instructions for the lab can be found here.</description>
    </item>
    
    <item>
      <title>Context API</title>
      <link>/react/pillars/perf-opt-strategies/context/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/perf-opt-strategies/context/</guid>
      <description>Background React&amp;rsquo;s Context API provides a way to share values between components without having to explicitly pass a prop through every level of the tree (thus avoiding prop-drilling).</description>
    </item>
    
    <item>
      <title>Control Flow - Making Decisions</title>
      <link>/javascript/foundations/control-flow-decisions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/control-flow-decisions/</guid>
      <description>Learning Objectives  Describe Control Flow Discuss how JavaScript makes decisions Identify and discuss boolean operators Use if, else if, and else to control the flow of the program Apply different boolean operators in conditional statements  What is Control Flow?</description>
    </item>
    
    <item>
      <title>CSS Responsive Layouts</title>
      <link>/web-essentials/webmastery-foundations/responsive-layouts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/web-essentials/webmastery-foundations/responsive-layouts/</guid>
      <description>Learning Objectives Concepts  Describe the purpose of responsive layouts. Discuss the role of media queries in responsive web design.</description>
    </item>
    
    <item>
      <title>Docker and THD Artifactory</title>
      <link>/cloud/containers/docker-fundamentals/docker-artifactory/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/cloud/containers/docker-fundamentals/docker-artifactory/</guid>
      <description>Using The Home Depot&amp;rsquo;s Artifactory as an Image Registry
Objectives  How to appropriately tag your image to push to Artifactory Pushing to Artifactory  Pushing Images to THD Artifactory You will first need to tag your images appropriately in order to push.</description>
    </item>
    
    <item>
      <title>Escalating kill scripts</title>
      <link>/software-eng-essentials/command-line-bash/escalating-kill-script/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/command-line-bash/escalating-kill-script/</guid>
      <description>Objectives  A custom escalating kill script Choose your $PATH An enhanced version of the custom kill script  Writing an executable bash script As a practical application of extending the versatile Bash shell, in this section we’re going to write a program that’s very useful: a bash script designed to kill a program as safely as possible.</description>
    </item>
    
    <item>
      <title>Functions in Go</title>
      <link>/golang/foundations/function-intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/foundations/function-intro/</guid>
      <description>Functions in Go Learning Objectives Concepts  Create and use basic functions Create and use functions with multiple return values Built in defer function  Skills  Creating basic functions Understand how to take input and return output Understand how to receive and return multiple return values in a function  What is a Function?</description>
    </item>
    
    <item>
      <title>Functions Lab</title>
      <link>/javascript/foundations/labs/functions-lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/labs/functions-lab/</guid>
      <description>Step 1: Create the JavaScript file cd $HOME/js-foundations/labs touch functions.js Step 2: Implement the fizzBuzz function  Write a function named fizzBuzz that takes a single argument The argument should be a number/integer Write a condition that determines if the argument is evenly divisible  If the argument is evenly divisible by 3 and 5 return the string &amp;ldquo;FizzBuzz&amp;rdquo; If the number can be evenly divisible by 3 return the string &amp;ldquo;Fizz&amp;rdquo; If the number is evenly divisible by 5 return the string &amp;ldquo;Buzz&amp;rdquo; If none of these conditions apply, return the number    Step 3: Test your solution Add a statement that calls your fizzBuzz function with a value, such as 3 and prints the result to the console.</description>
    </item>
    
    <item>
      <title>Git Branching Out</title>
      <link>/software-eng-essentials/git-foundations/git-branching-out/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/git-foundations/git-branching-out/</guid>
      <description>Branches Branching means that you diverge from the main line of development and continue to work without messing with that main line.</description>
    </item>
    
    <item>
      <title>Nodemon</title>
      <link>/javascript/express/nodemon/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/express/nodemon/</guid>
      <description>Nodemon Learning Objectives  Monitor and automatically restart a node application Install and run nodemon in an application  Restarting a Server The Problem:</description>
    </item>
    
    <item>
      <title>Shell Configuration</title>
      <link>/software-eng-essentials/terminal-and-shell/shell-configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/terminal-and-shell/shell-configuration/</guid>
      <description>Learning Objectives  Explain the purpose of environment variables Describe the purpose of the shell configuration files  For bash: .</description>
    </item>
    
    <item>
      <title>Software Objects</title>
      <link>/java/foundations/object/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/java/foundations/object/</guid>
      <description>Learning Objectives Concepts  Object States and Behavior Fields and Methods Object Encapsulation Modularity of Code  Skills  Describe what makes an effective software object Design basic software objects  Objects Object types are not as straightforward as primitive types.</description>
    </item>
    
    <item>
      <title>CSS Responsive Layouts Labs</title>
      <link>/web-essentials/webmastery-foundations/responsive-layouts-labs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/web-essentials/webmastery-foundations/responsive-layouts-labs/</guid>
      <description>Follow this link to complete the exercise. The intention is to utilize what you&amp;rsquo;ve learned about responsive design and media queries to create a website with HTML and CSS: Falcon Gazette Exercise</description>
    </item>
    
    <item>
      <title>Additional Resources</title>
      <link>/cloud/containers/docker-fundamentals/additional-resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/cloud/containers/docker-fundamentals/additional-resources/</guid>
      <description>Additional Resources Docker Documentation
 Docker Documentation Docker overview Docker Samples  PluralSight Courses
 Docker and Kubernetes: The Big Picture | Pluralsight Getting Started with Docker | Pluralsight Docker Deep Dive | Pluralsight Docker Networking | Pluralsight  Youtube Videos</description>
    </item>
    
    <item>
      <title>Arrow Functions Lab</title>
      <link>/javascript/foundations/labs/arrow-functions-lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/labs/arrow-functions-lab/</guid>
      <description>Step 1: Create the JavaScript file and Add the Starter Code cd $HOME/js-foundations/labs touch arrow-functions.js Add the following code to arrow-functions.</description>
    </item>
    
    <item>
      <title>Classes and Objects</title>
      <link>/java/foundations/class/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/java/foundations/class/</guid>
      <description>Learning Objectives Concepts  Classes and their members (fields and methods) Object instantiations  Skills  Writing a class with custom behavior Create objects and utilize the defined behavior  Java Classes Imagine, if you will, that you&amp;rsquo;re making gingerbread cookies.</description>
    </item>
    
    <item>
      <title>Control Flow - Iteration</title>
      <link>/javascript/foundations/control-flow-iteration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/control-flow-iteration/</guid>
      <description>Learning Objectives  Learn how to write for loops. Learn how to write while loops. Learn how to write do.</description>
    </item>
    
    <item>
      <title>Django Testing</title>
      <link>/python/web-framework/django_testing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/web-framework/django_testing/</guid>
      <description>Why Test!?! We don&amp;rsquo;t need to stress the importance of testing your code, but if you need an explanation go here</description>
    </item>
    
    <item>
      <title>Events</title>
      <link>/react/foundations/events/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/foundations/events/</guid>
      <description>Handling events and user interaction
Objectives  Learn how React manages user events Write event handlers to change state Register event handlers with HTML elements (buttons, text fields, etc.</description>
    </item>
    
    <item>
      <title>Flexbox</title>
      <link>/web-essentials/webmastery-foundations/flexbox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/web-essentials/webmastery-foundations/flexbox/</guid>
      <description>Learning Objectives Concepts  Give an example of a problem solved by Flexbox. Contrast flex containers and flex items.</description>
    </item>
    
    <item>
      <title>Generating and Handling Errors in Go</title>
      <link>/golang/foundations/errors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/foundations/errors/</guid>
      <description>Learning Objectives  Built in function: panic Errors are Values  Panic Panic is
 A built in function Used as a way to exit a program when an unexpected/unrecoverable error occurred Will cause the program to exit and display the panic message.</description>
    </item>
    
    <item>
      <title>Git Branching Out Labs</title>
      <link>/software-eng-essentials/git-foundations/git-branching-out-labs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/git-foundations/git-branching-out-labs/</guid>
      <description>Branch Practice  Navigate back to our git-workshop repository. List all of the branches for this repo.</description>
    </item>
    
    <item>
      <title>Input</title>
      <link>/python/foundation/formatting-and-input/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/foundation/formatting-and-input/</guid>
      <description>String Formatting Displaying Numbers and Strings We&amp;rsquo;ve introduced one built-in method for Python: print(). Another function important to strings is the str() method.</description>
    </item>
    
    <item>
      <title>Processes</title>
      <link>/software-eng-essentials/terminal-and-shell/processes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/terminal-and-shell/processes/</guid>
      <description>Learning Objectives  Define a process View running processes Terminating a process  Introduction  When an application (or program) is running on your computer it is running as a process or as a set of processes.</description>
    </item>
    
    <item>
      <title>Routing</title>
      <link>/react/foundations/labs/lab-routing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/foundations/labs/lab-routing/</guid>
      <description>The React Music Browser App  To get more experience with React Router, we will be building a Music Browser application.</description>
    </item>
    
    <item>
      <title>Scripting and receiving input</title>
      <link>/software-eng-essentials/command-line-bash/scripting-and-receiving-input/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/command-line-bash/scripting-and-receiving-input/</guid>
      <description>Objectives  Command line arguments Variables Arrays User input Reading from STDIN  Command line arguments We have already created a script that receives command line arguments.</description>
    </item>
    
    <item>
      <title>Flexbox Labs</title>
      <link>/web-essentials/webmastery-foundations/flexbox-labs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/web-essentials/webmastery-foundations/flexbox-labs/</guid>
      <description> Complete the CSS: Using Flexbox for Layout Play Flexbox Froggy and try to complete all 24 levels Play Flexbox Defense and try to complete all 12 levels Complete the Flexbox Cats Lab  Additional Resources  Flexbox Playground The Ultimate Flexbox Cheatsheet CSS Tricks Guide to Flexbox A Visual Guide to CSS3 Flexbox Properties Solved by Flexbox Flexplorer Holy Grail Layout - Solved By Flexbox The CSS grid Module CSS Tricks&amp;rsquo; Guide to Flexbox A Visual Guide to CSS Flexbox Properties Solved by Flexbox Flexplorer  Screencasts      </description>
    </item>
    
    <item>
      <title>Gitting back together</title>
      <link>/software-eng-essentials/git-foundations/gitting-back-together/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/git-foundations/gitting-back-together/</guid>
      <description>Merging Merging allows two branches back together to be put back together by combining multiple sequences of commits into one unified history.</description>
    </item>
    
    <item>
      <title>Gitting Back Together Labs</title>
      <link>/software-eng-essentials/git-foundations/gitting-back-together-labs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/git-foundations/gitting-back-together-labs/</guid>
      <description>Merge Inside your existing repository (If you did not already create a repository, do so now) and checkout the master branch.</description>
    </item>
    
    <item>
      <title>Control flow loops and functions</title>
      <link>/software-eng-essentials/command-line-bash/control-flow-loops-and-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/command-line-bash/control-flow-loops-and-functions/</guid>
      <description>Learning to use the power of the command line and bash shell scripting
 Control Flow - if and case Statements Loops - while/until/for Functions select statements  if and case statements The if statement An if statement basically says, if a particular test is true, then perform a given set of actions.</description>
    </item>
    
    <item>
      <title>CSS Grid</title>
      <link>/web-essentials/webmastery-foundations/grid/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/web-essentials/webmastery-foundations/grid/</guid>
      <description>CSS grid layout (or CSS grid) is a technique in Cascading Style Sheets that allows web developers to create complex responsive web design layouts more easily and consistently across browsers.</description>
    </item>
    
    <item>
      <title>Custom Hooks</title>
      <link>/react/pillars/hooks/customhooks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/hooks/customhooks/</guid>
      <description>Concepts and Skills  Understand how to write custom hooks that wrap one or more built-in hooks.</description>
    </item>
    
    <item>
      <title>Exceptions</title>
      <link>/python/foundation/exceptions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/foundation/exceptions/</guid>
      <description>Error handling and writing exceptions Let&amp;rsquo;s purposefully create a few types of errors so we understand what they look like and how to handle them before we even encounter them in our programs.</description>
    </item>
    
    <item>
      <title>GitHub Intro</title>
      <link>/software-eng-essentials/git-foundations/intro-to-github/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/git-foundations/intro-to-github/</guid>
      <description>Learning Objectives Concepts  Showcase GitHub Discuss how to use GitHub effectively Explain the GitHub lingo (fork, clone, pull, etc)  Skills  Integrate GitHub&amp;rsquo;s many helpful features into your projects Understand and navigate GitHub&amp;rsquo;s UI  Collaboration Until now, we have used git locally.</description>
    </item>
    
    <item>
      <title>Inheritance</title>
      <link>/java/foundations/inheritance/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/java/foundations/inheritance/</guid>
      <description>Learning Objectives Concepts  Parent/Child relationships in Objects Using the super keyword Inheritance from the Object class  Skills  Create your own child class Utilize the special access of child to the parent Override Object methods  Inheritance Inheritance is when you are given something, passed down from (usually) a parent or grandparent in your family.</description>
    </item>
    
    <item>
      <title>Modern Array Methods Lab</title>
      <link>/javascript/foundations/labs/modern-array-methods-lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/labs/modern-array-methods-lab/</guid>
      <description>Step 1: Create the JavaScript file and Add the Starter Code cd $HOME/js-foundations/labs touch modern-array-methods.js Add the following code to modern-array-methods.</description>
    </item>
    
    <item>
      <title>Objects and JSON</title>
      <link>/javascript/foundations/objects-and-json/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/objects-and-json/</guid>
      <description>An introduction to JavaScript objects and JSON.
Learning Objectives  Explain how to work with objects in JavaScript Introduce JSON Discuss the difference between primitive and reference types Build complex objects List, update, mutate properties of objects  Objects An object is a set of properties (keys) and values.</description>
    </item>
    
    <item>
      <title>Pointers</title>
      <link>/golang/foundations/pointers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/foundations/pointers/</guid>
      <description>Learning Objectives  Pointers Creating &amp;amp; Using Structs Creating and Using Methods and an Instance of a Struct  Pointers  Allow you to pass variables by reference Can be edited in multiple locations  Pass by Value Refresher  By default data is passed by value ( a copy is made ) For example, when a string is passed as an argument to a function, the value of the string is passed along as a copy.</description>
    </item>
    
    <item>
      <title>Quiz</title>
      <link>/react/pillars/perf-opt-strategies/quiz/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/perf-opt-strategies/quiz/</guid>
      <description>Quiz (for discussion)  What kinds of performance problems might we see in a React application?</description>
    </item>
    
    <item>
      <title>Summary</title>
      <link>/react/pillars/perf-opt-strategies/summary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/perf-opt-strategies/summary/</guid>
      <description>Other Performance Considerations Mapping Over an Array in JSX When mapping over an array to create a JSX array, always use the key prop.</description>
    </item>
    
    <item>
      <title>THD Style Guide</title>
      <link>/python/web-framework/thd_api_and_ux/thd_style_guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/web-framework/thd_api_and_ux/thd_style_guide/</guid>
      <description>THD Style Guide Set Up You can find Home Depot&amp;rsquo;s style guide for HTML, CSS and JavaScript here.</description>
    </item>
    
    <item>
      <title>CSS Grid Expanded</title>
      <link>/web-essentials/webmastery-foundations/additional/cssgrid_container_properties/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/web-essentials/webmastery-foundations/additional/cssgrid_container_properties/</guid>
      <description>CSS Grid Layout CSS Grid Layout (aka Grid), is a two-dimensional grid-based layout system that aims to do nothing less than completely change the way we design grid-based user interfaces.</description>
    </item>
    
    <item>
      <title>CSS Grid Labs</title>
      <link>/web-essentials/webmastery-foundations/grid-labs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/web-essentials/webmastery-foundations/grid-labs/</guid>
      <description>Play CSS Garden
Additional Resources  CSS grid container in more detail CSS grid items in more detail Things I&amp;rsquo;ve Learned About CSS Grid Layout Let&amp;rsquo;s get griddy with it Complete grid guide Create a page layout with CSS grid  </description>
    </item>
    
    <item>
      <title>CSS Grid Items Expanded</title>
      <link>/web-essentials/webmastery-foundations/additional/cssgrid_item_properties/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/web-essentials/webmastery-foundations/additional/cssgrid_item_properties/</guid>
      <description>This is a continuation lesson with the CSS Grid Container lesson
 float, display: inline-block, display: table-cell, vertical-align and column-* properties have no effect on a grid item.</description>
    </item>
    
    <item>
      <title>Recreate Launch</title>
      <link>/web-essentials/webmastery-foundations/recreate-launch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/web-essentials/webmastery-foundations/recreate-launch/</guid>
      <description>Recreate the Launch webpage in HTML and CSS For this lab, we&amp;rsquo;ll be using three visual templates to create a static responsive website.</description>
    </item>
    
    <item>
      <title>CSS Best Practices</title>
      <link>/web-essentials/webmastery-foundations/css-best-practices/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/web-essentials/webmastery-foundations/css-best-practices/</guid>
      <description>Introduction CSS source code can get messy in a hurry. Here we discuss a set of modern best practices for using CSS.</description>
    </item>
    
    <item>
      <title>Error Handling Lab</title>
      <link>/javascript/foundations/labs/error-handling-lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/labs/error-handling-lab/</guid>
      <description>Step 1: Create the JavaScript file and Add the Starter Code cd $HOME/js-foundations/labs touch error-handling.js Add the following code to error-handling.</description>
    </item>
    
    <item>
      <title>Exceptions Labs</title>
      <link>/python/foundation/exceptions-labs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/foundation/exceptions-labs/</guid>
      <description>Error Writing Exercises Create a new file called exception_writing.
Write try and except statements around these print functions depending on the error that you encounter</description>
    </item>
    
    <item>
      <title>Forms</title>
      <link>/react/foundations/forms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/foundations/forms/</guid>
      <description>Strategies for React Form Controls.
Learning Objectives  Describe two strategies for managing form controls Implement a controlled form control component   NOTE: Much of the content of this lesson was shamelessly taken from https://goshakkk.</description>
    </item>
    
    <item>
      <title>Functions</title>
      <link>/javascript/foundations/functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/functions/</guid>
      <description>An introduction to functions in JavaScript.
Learning Objectives After this lesson, developers will be able to:</description>
    </item>
    
    <item>
      <title>GitHub Intro Labs</title>
      <link>/software-eng-essentials/git-foundations/intro-to-github-labs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/git-foundations/intro-to-github-labs/</guid>
      <description>GitHub Interactions Class Activity  Before doing this lab, the instructor will create a repo called Zoo that has a README.</description>
    </item>
    
    <item>
      <title>HTML &amp; CSS Cheatsheet</title>
      <link>/web-essentials/cheatsheets/html-css-cheatsheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/web-essentials/cheatsheets/html-css-cheatsheet/</guid>
      <description>Resource W3Schools HTML Reference 
Common Terms    Term  Description     HTML Hyper Text Markup Language, markup language used for representing structured text.</description>
    </item>
    
    <item>
      <title>Interface</title>
      <link>/java/foundations/interface/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/java/foundations/interface/</guid>
      <description>Learning Objectives Concepts  Abstraction Interfaces vs Classes  Skills  Creating a Java Interface Implementing an interface  Abstraction Abstraction is the process of separating ideas from implementation.</description>
    </item>
    
    <item>
      <title>SASS</title>
      <link>/web-essentials/webmastery-foundations/sass/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/web-essentials/webmastery-foundations/sass/</guid>
      <description>Learning Objectives Concepts  Describe some problems with CSS that Sass solves. Describe what a Preprocessor does.</description>
    </item>
    
    <item>
      <title>SASS Crash Course</title>
      <link>/custom-workshops/frontend-at-thd/sass-crash-course/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/custom-workshops/frontend-at-thd/sass-crash-course/</guid>
      <description>Learning Objectives Concepts  Describe some problems with CSS that Sass solves. Describe what a Preprocessor does.</description>
    </item>
    
    <item>
      <title>Structs and Methods</title>
      <link>/golang/foundations/structs-and-methods/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/foundations/structs-and-methods/</guid>
      <description>Learning Objectives  Creating &amp;amp; Using Structs Creating and Using Methods and an Instance of a Struct  Structs The struct</description>
    </item>
    
    <item>
      <title>Subshell</title>
      <link>/software-eng-essentials/command-line-bash/subshell/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/command-line-bash/subshell/</guid>
      <description>Objectives  Subshell Local variables Environment variables  Subshell A subshell is a child instance of a parent shell.</description>
    </item>
    
    <item>
      <title>SASS Labs</title>
      <link>/web-essentials/webmastery-foundations/sass-labs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/web-essentials/webmastery-foundations/sass-labs/</guid>
      <description>Given a div container that has 3 child divs:
&amp;lt;body&amp;gt; &amp;lt;div class=&amp;#34;container&amp;#34;&amp;gt;Colors &amp;lt;div class=&amp;#34;red&amp;#34;&amp;gt; &amp;lt;p&amp;gt;Red&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;green&amp;#34;&amp;gt;&amp;lt;p&amp;gt;Green&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;blue&amp;#34;&amp;gt; &amp;lt;p&amp;gt;Blue&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/body&amp;gt; Using only vanilla CSS (no Sass, no Bootstrap, no Foundation) style the above HTML as follows:</description>
    </item>
    
    <item>
      <title>Code Style with Prettier</title>
      <link>/javascript/foundations/prettier/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/prettier/</guid>
      <description>An introduction to code style and static code analysis / linting.
Learning Objectives  Define code style and explain why it is important.</description>
    </item>
    
    <item>
      <title>Static Analysis with ESLint</title>
      <link>/javascript/foundations/eslint/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/eslint/</guid>
      <description>An introduction to code style and static code analysis / linting.
Learning Objectives  Explain static code analysis Configure and run eslint to discover and fix potential coding problems  What Is Static Analysis Static analysis, also called static code analysis, is the process of analyzing a computer program to find problems without actually executing the code.</description>
    </item>
    
    <item>
      <title>Refactoring</title>
      <link>/javascript/foundations/refactoring/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/refactoring/</guid>
      <description>An introduction to refactoring code.
Learning Objectives  Describe what refactoring is List the benefits of refactoring Provide examples of refactoring  What is Refactoring?</description>
    </item>
    
    <item>
      <title>Booleans</title>
      <link>/python/foundation/booleans/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/foundation/booleans/</guid>
      <description>Boolean Introduction A boolean is a data type that can be either true or false.</description>
    </item>
    
    <item>
      <title>CSS Frameworks</title>
      <link>/web-essentials/webmastery-foundations/frameworks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/web-essentials/webmastery-foundations/frameworks/</guid>
      <description>Learning Objectives Concepts  Bootstrap History How to Bootstrap  Skills  How to install bootstrap on your project Become familiar with bootstrap documentation Build websites with ease  What is Front End Framework?</description>
    </item>
    
    <item>
      <title>Data Structures</title>
      <link>/java/foundations/data-structures/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/java/foundations/data-structures/</guid>
      <description>Learning Objectives Concepts &amp;amp; Skills Creating and using:
 Arrays Lists: Array Maps: Hash   Data Structures are collections of associated data.</description>
    </item>
    
    <item>
      <title>Git Workflow</title>
      <link>/software-eng-essentials/git-foundations/workflow/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/git-foundations/workflow/</guid>
      <description>Learning Objectives  Discuss strategies for handling workflow Demonstrate GitHub flow Showcase GitHub&amp;rsquo;s Code Review options  Skills  Use GitHub Flow to tighten up your team&amp;rsquo;s development cycles Conduct collaborative code reviews    Managing your workflow with GitHub Now that you&amp;rsquo;ve mastered git and GitHub, it&amp;rsquo;s time to discuss workflow strategies.</description>
    </item>
    
    <item>
      <title>Higher Order Functions Lab</title>
      <link>/javascript/foundations/labs/higher-order-functions-lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/labs/higher-order-functions-lab/</guid>
      <description>Step 1: Create the JavaScript file and Add the Starter Code cd $HOME/js-foundations/labs touch higher-order-functions.js Add the following code to higher-order-functions.</description>
    </item>
    
    <item>
      <title>Interfaces</title>
      <link>/golang/foundations/interfaces/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/foundations/interfaces/</guid>
      <description>Learning Objectives  Understanding Interfaces in Go Creating an Interface Implementing an interface  Interfaces in Go Interfaces in go:</description>
    </item>
    
    <item>
      <title>Managing Side Effects</title>
      <link>/react/foundations/side-effects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/foundations/side-effects/</guid>
      <description>Managing Side Effects in React Components.
Objectives  Explain side effects Apply the useEffect hook to manage side effects in a React component.</description>
    </item>
    
    <item>
      <title>Regex in Bash</title>
      <link>/software-eng-essentials/command-line-bash/bash/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/command-line-bash/bash/</guid>
      <description>Regex in grep (egrep) Anchors    ^ $     ^Harry : Starts with the word &amp;lsquo;Harry&amp;rsquo;.</description>
    </item>
    
    <item>
      <title>Regex in Bash</title>
      <link>/software-eng-essentials/fundamentals-of-regex/bash/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/fundamentals-of-regex/bash/</guid>
      <description>Regex in grep (egrep) Anchors    ^ $     ^Harry : Starts with the word &amp;lsquo;Harry&amp;rsquo;.</description>
    </item>
    
    <item>
      <title>Variable Scope</title>
      <link>/javascript/foundations/variable-scope/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/variable-scope/</guid>
      <description>Learn the rules of variable scope in JavaScript.
Objectives  Define scope in the context of programming Describe the rules of scope in Javascript Describe the impact of hoisting on variable scope Discuss the scoping rules for variables declared with var, let, and const  What is Scope?</description>
    </item>
    
    <item>
      <title>CSS Frameworks Labs</title>
      <link>/web-essentials/webmastery-foundations/frameworks-lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/web-essentials/webmastery-foundations/frameworks-lab/</guid>
      <description>Create your html document
 At the top of the &amp;lt;body&amp;gt; wrap an &amp;lt;h1&amp;gt; in a &amp;lt;div&amp;gt; and insert the content &amp;lsquo;Good Coffee Co.</description>
    </item>
    
    <item>
      <title>Arrow Functions</title>
      <link>/javascript/foundations/arrow-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/arrow-functions/</guid>
      <description>An introduction to function expressions and arrow functions.
Function Expressions Before introducing arrow functions, let&amp;rsquo;s first discuss function expressions.</description>
    </item>
    
    <item>
      <title>Boolean Labs</title>
      <link>/python/foundation/boolean-labs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/foundation/boolean-labs/</guid>
      <description>Boolean Exercise In partners or groups of three, rotate through the following list and explain why you think each would evaluate to True or False</description>
    </item>
    
    <item>
      <title>Closures Lab</title>
      <link>/javascript/foundations/labs/closures-lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/labs/closures-lab/</guid>
      <description>Step 1: Create the JavaScript file and Add the Starter Code cd $HOME/js-foundations/labs touch closures.js Add the following code to closures.</description>
    </item>
    
    <item>
      <title>Data Structures Advanced</title>
      <link>/java/foundations/data-structures-advanced/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/java/foundations/data-structures-advanced/</guid>
      <description>Learning Objectives Concepts &amp;amp; Skills Creating and using:
 Lists: Linked Stacks Queues   There are many Data Structures in Java.</description>
    </item>
    
    <item>
      <title>Intro to the DOM</title>
      <link>/web-essentials/webmastery-foundations/dom-intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/web-essentials/webmastery-foundations/dom-intro/</guid>
      <description>HTML &amp;amp; The DOM HTML and DOM are related but separate concepts.
 HTML: the language used to create an HTML Web Page / Document DOM: the Document Object Model, i.</description>
    </item>
    
    <item>
      <title>Sed and Awk</title>
      <link>/software-eng-essentials/command-line-bash/sed-and-awk/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/command-line-bash/sed-and-awk/</guid>
      <description>Objectives  Defining SED Introduction to the AWK Language  Defining The SED command stands for &amp;ldquo;stream editor.</description>
    </item>
    
    <item>
      <title>Styling Components</title>
      <link>/react/foundations/styling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/foundations/styling/</guid>
      <description>Learn various ways to style your components.
Concepts  Describe the Problem with CSS for Styling Components Discuss various ways to style React Components  Inline Styling External Stylesheets Styling with JavaScript Objects The Styled Components library    Skills  Be able to make informed decisions about how to style your components Set up your project to use CSS preprocessors Install and Use CSS frameworks  The Problems with CSS for Styling Components  CSS was designed for styling static web sites Thus the Cascading rules of CSS mean that CSS applies styles globally.</description>
    </item>
    
    <item>
      <title>Wildcards and Brace Expansion</title>
      <link>/software-eng-essentials/command-line-bash/wildcards-and-brace-expansion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/command-line-bash/wildcards-and-brace-expansion/</guid>
      <description>Objectives  Know how to play a single wildcard The wide ranging world of brackets Using brace expansion   Know how to play a single wildcard Pattern matching example</description>
    </item>
    
    <item>
      <title>Higher Order Functions</title>
      <link>/javascript/foundations/higher-order-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/higher-order-functions/</guid>
      <description>What are Higher Order Functions and Callbacks?    Higher order functions are essential to programming in JavaScript A Higher Order Function has at least one of the two following characteristics:  accepts a function as an argument, or returns a function as it&amp;rsquo;s result   The most common use case for higher order functions is the callback  Higher order functions really shine when we want to write &amp;ldquo;generic&amp;rdquo; code.</description>
    </item>
    
    <item>
      <title>Context API</title>
      <link>/react/foundations/context/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/foundations/context/</guid>
      <description>Learn about React&amp;rsquo;s Context API for sharing state across components.
Objectives  Review state in a React app Learn about the Context API Explore the use cases of Context Learn the 3 steps to using the Context API  Skills  Use the context API to share state in a React app Create a Context Object Use a Provider component to provide a value Use the useContext hook to consume a value  React App State Let&amp;rsquo;s review some concepts around React app state management.</description>
    </item>
    
    <item>
      <title>DOM Manipulation and DOM Events</title>
      <link>/web-essentials/webmastery-foundations/dom-manipulation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/web-essentials/webmastery-foundations/dom-manipulation/</guid>
      <description>Learning Objectives Concepts  Understanding how the DOM is represented Identifying the difference between the HTML document and the DOM  Skills  Access nodes in the DOM using JavaScript Modify content in DOM (thus, the page) using JavaScript Manipulate the DOM based on an external event  The Document Object Model (DOM) is a JavaScript representation of the HTML document loaded into the browser.</description>
    </item>
    
    <item>
      <title>Exceptions</title>
      <link>/java/foundations/exceptions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/java/foundations/exceptions/</guid>
      <description>Learning Objectives Concepts &amp;amp; Skills  Define exceptions vs errors Catching exceptions   No application is bulletproof.</description>
    </item>
    
    <item>
      <title>Modern Array Methods</title>
      <link>/javascript/foundations/modern-array-methods/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/modern-array-methods/</guid>
      <description>Modern Array methods in JavaScript.
Learning Objectives Concepts  List the modern JavaScript array methods. Discuss the advantages of the modern array methods.</description>
    </item>
    
    <item>
      <title>OOP Lab</title>
      <link>/javascript/foundations/labs/oop-lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/labs/oop-lab/</guid>
      <description>Step 1: Create the JavaScript file and Add the Starter Code cd $HOME/js-foundations/labs touch oop.js Add the following code to oop.</description>
    </item>
    
    <item>
      <title>Reclaim Data</title>
      <link>/software-eng-essentials/git-foundations/reclaim-data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/git-foundations/reclaim-data/</guid>
      <description>Learning Objectives  To be able to recover work you accidentally deleted  Recover a deleted line Recover a deleted file Recover a deleted branch How to avoid a detached head Cherry Picking    So you&amp;rsquo;ve ruined your life.</description>
    </item>
    
    <item>
      <title>Strings</title>
      <link>/python/foundation/strings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/foundation/strings/</guid>
      <description>Strings We mentioned strings before because they&amp;rsquo;re a good place to introduce the print() function to create the &amp;ldquo;Hello world!</description>
    </item>
    
    <item>
      <title>DOM Manipulation and DOM Events Labs</title>
      <link>/web-essentials/webmastery-foundations/dom-manipulation-labs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/web-essentials/webmastery-foundations/dom-manipulation-labs/</guid>
      <description>Selecting Nodes &amp;lt;html&amp;gt; &amp;lt;body&amp;gt; &amp;lt;header&amp;gt; &amp;lt;ul&amp;gt; &amp;lt;li class=&amp;#34;first&amp;#34;&amp;gt;Item 1&amp;lt;/li&amp;gt; &amp;lt;li class=&amp;#34;selected&amp;#34;&amp;gt;Item 2&amp;lt;/li&amp;gt; &amp;lt;li class=&amp;#34;last&amp;#34;&amp;gt;Item 3&amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;/header&amp;gt; &amp;lt;div class=&amp;#34;col&amp;#34;&amp;gt; &amp;lt;section&amp;gt; &amp;lt;h2&amp;gt;Section 1&amp;lt;/h2&amp;gt; &amp;lt;/section&amp;gt; &amp;lt;section class=&amp;#34;current&amp;#34;&amp;gt; &amp;lt;h2 class=&amp;#34;highlight&amp;#34;&amp;gt;Section 2&amp;lt;/h2&amp;gt; &amp;lt;/section&amp;gt; &amp;lt;section&amp;gt; &amp;lt;h1&amp;gt;Section 3&amp;lt;/h1&amp;gt; &amp;lt;/section&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; Using the above html:</description>
    </item>
    
    <item>
      <title>Closures</title>
      <link>/javascript/foundations/closures/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/closures/</guid>
      <description>An Introduction to Closures in JavaScript.
Learning Objectives  Define a closure Explain why closures are used Write a function that uses a closure to control access to data  What is a Closure?</description>
    </item>
    
    <item>
      <title>Classes Lab</title>
      <link>/javascript/foundations/labs/classes-lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/labs/classes-lab/</guid>
      <description>Step 1: Create the JavaScript file and Add the Starter Code cd $HOME/js-foundations/labs touch classes.js Add the following code to classes.</description>
    </item>
    
    <item>
      <title>CLI Lab</title>
      <link>/java/foundations/cli-lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/java/foundations/cli-lab/</guid>
      <description>The goal of this lab is to create a basic Command Line Interface in Java. There are a general set of features we are looking for that you will need to include but feel free to use your creativity and knowledge to go above and beyond these requirements!</description>
    </item>
    
    <item>
      <title>DOM Manipulation with jQuery</title>
      <link>/web-essentials/webmastery-foundations/jquery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/web-essentials/webmastery-foundations/jquery/</guid>
      <description>Learning Objectives Concepts  jQuery provides simpler syntax for adding event handlers to the DOM - separating application logic from content markup  Skills  Learn how to use jQuery, a JavaScript library, to create interactive web pages Use jQuery to create event listeners Practice reading documentation  Intro jQuery is a 3rd-party library that is intended to make front-end development tasks — particularly those involving DOM selection and manipulation — easier, faster, and more fun.</description>
    </item>
    
    <item>
      <title>Error Handling</title>
      <link>/javascript/foundations/error-handling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/error-handling/</guid>
      <description>What is Error Handling  Error handling is where code is written to detect and/or respond to an error.</description>
    </item>
    
    <item>
      <title>React Router v4</title>
      <link>/react/foundations/react-router-v4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/foundations/react-router-v4/</guid>
      <description>Adding routes to React applications using React Router version 4.
Concepts  Introduce React Router Add dynamic routes to an application  Introduction  Now that you understand how to build a single page application, it&amp;rsquo;s time to discuss routing.</description>
    </item>
    
    <item>
      <title>Reclaim Data Labs</title>
      <link>/software-eng-essentials/git-foundations/reclaim-data-labs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/git-foundations/reclaim-data-labs/</guid>
      <description>Let&amp;rsquo;s practice reclaiming data! Before you learn how to fix stuff we have to learn how to break it.</description>
    </item>
    
    <item>
      <title>Strings Labs</title>
      <link>/python/foundation/strings-labs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/foundation/strings-labs/</guid>
      <description>String Labs If you need a refresher on how to get user input: link:./formatting-and-input#user_input[User Input Explanation]</description>
    </item>
    
    <item>
      <title>DOM Manipulation with jQuery Labs</title>
      <link>/web-essentials/webmastery-foundations/jquery-labs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/web-essentials/webmastery-foundations/jquery-labs/</guid>
      <description>IMDB Following the directions below to practice using jQuery:
 Go to IMDB IMDB uses jQuery, so we can use our Chrome developer console to manipulate the site in real time using jQuery.</description>
    </item>
    
    <item>
      <title>React Router v5</title>
      <link>/react/foundations/react-router-v5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/foundations/react-router-v5/</guid>
      <description>Adding routes to React applications using React Router version 5.
Concepts  Introduce React Router Add dynamic routes to an application  Introduction  Now that you understand how to build a single page application, it&amp;rsquo;s time to discuss routing.</description>
    </item>
    
    <item>
      <title>React Router v6</title>
      <link>/react/foundations/react-router-v6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/foundations/react-router-v6/</guid>
      <description>Adding routes to React applications using React Router version 6.
Concepts  Introduce React Router Add dynamic routes to an application  Introduction  Now that you understand how to build a single page application, it&amp;rsquo;s time to discuss routing.</description>
    </item>
    
    <item>
      <title>Functions</title>
      <link>/python/foundation/functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/foundation/functions/</guid>
      <description>User Defined Functions Introduction to functions Functions are important because they allow us to divide code into useful blocks.</description>
    </item>
    
    <item>
      <title>Promises Lab</title>
      <link>/javascript/foundations/labs/promises-lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/labs/promises-lab/</guid>
      <description>Step 1: Create the JavaScript file and Add the Starter Code cd $HOME/js-foundations/labs touch promises.js Add the following code to promises.</description>
    </item>
    
    <item>
      <title>Templating Engines</title>
      <link>/web-essentials/webmastery-foundations/templating/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/web-essentials/webmastery-foundations/templating/</guid>
      <description>Template engines allows the use of static template files in a web application, making it easier to design an HTML page.</description>
    </item>
    
    <item>
      <title>Templating Engines Labs</title>
      <link>/web-essentials/webmastery-foundations/templating-labs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/web-essentials/webmastery-foundations/templating-labs/</guid>
      <description>Create template to display a list of all the members of a team(You choose! Sports? Software?</description>
    </item>
    
    <item>
      <title>Async Await Lab</title>
      <link>/javascript/foundations/labs/async-await-lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/labs/async-await-lab/</guid>
      <description>Step 1: Create the JavaScript file and Add the Starter Code cd $HOME/js-foundations/labs touch async-await.js Add the following code to async-await.</description>
    </item>
    
    <item>
      <title>Function Labs</title>
      <link>/python/foundation/functions-labs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/foundation/functions-labs/</guid>
      <description>Functions Exercises Age Calculator Create a function called age_calculator that takes in two parameters (Two different years) and returns the difference of the two years:</description>
    </item>
    
    <item>
      <title>OOP</title>
      <link>/javascript/foundations/oop/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/oop/</guid>
      <description>An introduction to Object-Oriented JavaScript and Prototypal Inheritance.
Learning Objectives  What is Object-Oriented Programming? Use Constructor functions to create objects.</description>
    </item>
    
    <item>
      <title>Server-side Rendering</title>
      <link>/web-essentials/webmastery-foundations/server-side/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/web-essentials/webmastery-foundations/server-side/</guid>
      <description>Server-side rendering works by converting HTML files in the server into usable information for the browser.</description>
    </item>
    
    <item>
      <title>Add a Front-End to your existing API</title>
      <link>/web-essentials/webmastery-foundations/project-add-front-end/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/web-essentials/webmastery-foundations/project-add-front-end/</guid>
      <description>Project Guidelines Team up with your partner from the API project and add a front-end.</description>
    </item>
    
    <item>
      <title>Classes</title>
      <link>/javascript/foundations/classes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/classes/</guid>
      <description>An introduction to ES-2015 classes.
Learning Objectives  Explain how ES-2015 Classes are used in JavaScript Write JavaScript classes with constructors and methods  Background  Before ES-2015, JavaScript objects were created via object literals or constructor functions.</description>
    </item>
    
    <item>
      <title>Data Structures</title>
      <link>/python/foundation/data-structures/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/foundation/data-structures/</guid>
      <description>Data Structures Introduction It is very common to want to list numbers or strings. This is possible with data structures.</description>
    </item>
    
    <item>
      <title>Data Structure Labs</title>
      <link>/python/foundation/data-structures-labs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/foundation/data-structures-labs/</guid>
      <description>Create a Python file called data_structures.py.
Lists Exercise Magic 8-Ball
Create a function called shake_ball that has no parameters.</description>
    </item>
    
    <item>
      <title>Asynchronous Execution and Callbacks</title>
      <link>/javascript/foundations/async-execution-and-callbacks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/async-execution-and-callbacks/</guid>
      <description>Learn about asynchronous operations in JavaScript.
Asynchronous Operations  JavaScript is a single-threaded programming language. This means only one thing can happen at a time.</description>
    </item>
    
    <item>
      <title>Conditional Statements</title>
      <link>/python/foundation/conditional-statements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/foundation/conditional-statements/</guid>
      <description>Conditional Statements In life, we constantly have to make decisions based on current circumstances.
 If I have enough money in the bank, I will go to a fancy dinner tonight.</description>
    </item>
    
    <item>
      <title>Go Modules Deep Dive</title>
      <link>/golang/foundations/gomods/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/foundations/gomods/</guid>
      <description>Learning Objectives  Converting to GOMODs from GOPATH mode Getting dependencies Clean up the cache Versioning dependencies Creating a release version  Go Module mode -&amp;gt; GOPATH mode To convert a project from GOPATH to GOMODs mode, do the following:</description>
    </item>
    
    <item>
      <title>RTL Cheat Sheet</title>
      <link>/react/pillars/testing/react-testing-library/rtl-cheat-sheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/pillars/testing/react-testing-library/rtl-cheat-sheet/</guid>
      <description>This Cheatsheet was taken from RTL Cheatsheet (Printable PDF).
 For a more detailed cheatsheet, see: RTL Cheatsheet.</description>
    </item>
    
    <item>
      <title>Conditional Statements Labs</title>
      <link>/python/foundation/conditional-statements-labs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/foundation/conditional-statements-labs/</guid>
      <description>Applying your knowledge Run the below script and run through the exercise a couple of times with a partner to understand it.</description>
    </item>
    
    <item>
      <title>Promises</title>
      <link>/javascript/foundations/promises/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/promises/</guid>
      <description>An introduction to JavaScript promises.
What Are Promises? Promises are objects that:
 have state, the state being one of the following:  PENDING: we are still waiting for the data RESOLVED: we have successfully received the data REJECTED: an error has occurred   manage callbacks:  resolve - the success callback reject - the error callback   can be chained together  Promises have a then method that takes a callback used to process the data once it is available.</description>
    </item>
    
    <item>
      <title>Async / Await</title>
      <link>/javascript/foundations/async-await/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/javascript/foundations/async-await/</guid>
      <description>An introduction to Async/Await
Learning Objectives  Understand how async / await simplifies asynchronous code Know when to use async / await Handle errors in async / await code with try / catch Refactor asynchronous code to read like synchronous code using async / await  The Problem  Promises improved our asynchronous code over callbacks, especially when performing multiple asynchronous operations with interdependencies.</description>
    </item>
    
    <item>
      <title>Loops</title>
      <link>/python/foundation/loops/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/foundation/loops/</guid>
      <description>Loop Introduction From what we have learned so far, to print all of the values from a list called numbers we would have to do something like the following:</description>
    </item>
    
    <item>
      <title>File Manipulations</title>
      <link>/python/foundation/file-manipulation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/foundation/file-manipulation/</guid>
      <description>File Systems Before talking about how to read and write to a file, we need to figure out direct the program to the location of the file.</description>
    </item>
    
    <item>
      <title>Loops Labs</title>
      <link>/python/foundation/loops-labs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/foundation/loops-labs/</guid>
      <description>For Loops Create a String letters = [&amp;#39;O&amp;#39;, &amp;#39;r&amp;#39;, &amp;#39;a&amp;#39;, &amp;#39;n&amp;#39;, &amp;#39;g&amp;#39;, &amp;#39;e&amp;#39;, &amp;#39; &amp;#39;, &amp;#39;M&amp;#39;, &amp;#39;e&amp;#39;, &amp;#39;t&amp;#39;, &amp;#39;h&amp;#39;, &amp;#39;o&amp;#39;, &amp;#39;d&amp;#39;] Create a function that is called create_string that does not have any parameters.</description>
    </item>
    
    <item>
      <title>File Manipulation Labs</title>
      <link>/python/foundation/file-manipulation-labs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/foundation/file-manipulation-labs/</guid>
      <description>CSV Manipulation Exercises
For this exercise, we&amp;rsquo;ll use many of the concepts we&amp;rsquo;ve already reviewed in this course.</description>
    </item>
    
    <item>
      <title>Classes</title>
      <link>/python/foundation/classes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/foundation/classes/</guid>
      <description>Python has been an object-oriented language since the time it existed. Object-oriented programming (OOP) focuses on creating reusable patterns of code, in contrast to procedural programming, which focuses on explicit sequenced instructions.</description>
    </item>
    
    <item>
      <title>Classes Labs</title>
      <link>/python/foundation/classes-labs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/foundation/classes-labs/</guid>
      <description>String Manipulation Create a new file called string_manipulation.py.
Inside your new file, create a class called StringManipulation.</description>
    </item>
    
    <item>
      <title>Unit Tests</title>
      <link>/python/testing/additional-material/unit-tests/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/testing/additional-material/unit-tests/</guid>
      <description>Introducing Unit Testing in Python Using the unittest module Let&amp;rsquo;s see what a unit and tests look like as a whole:</description>
    </item>
    
    <item>
      <title>Unit Test Labs</title>
      <link>/python/testing/additional-material/unit-tests-labs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/testing/additional-material/unit-tests-labs/</guid>
      <description>Write a unit test Take the age calculator we created previously, and write a test for it.</description>
    </item>
    
    <item>
      <title>Generators</title>
      <link>/python/foundation/generators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/foundation/generators/</guid>
      <description>Iteration &amp;amp; Iterables Iteration is the repetition of some kind of process over and over again.</description>
    </item>
    
    <item>
      <title>Decorators</title>
      <link>/python/foundation/decorators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/foundation/decorators/</guid>
      <description>First Class Objects In Python, functions are first-class objects. This means that functions can be passed around, and used as arguments, just like any other value (e.</description>
    </item>
    
    <item>
      <title>UNIX Shell Commands</title>
      <link>/software-eng-essentials/git-foundations/unix-commands/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/git-foundations/unix-commands/</guid>
      <description>Directory Commands    Command Description Examples     pwd print the current working directory pwd   cd change to a new directory cd ~/Downloads   ls [options] [pattern] print a listing of the current directory ls; ls -als *.</description>
    </item>
    
    <item>
      <title>UNIX Shell Commands</title>
      <link>/software-eng-essentials/git-pillars/unix-commands/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/git-pillars/unix-commands/</guid>
      <description>Directory Commands    Command Description Examples     pwd print the current working directory pwd   cd change to a new directory cd ~/Downloads   ls [options] [pattern] print a listing of the current directory ls; ls -als *.</description>
    </item>
    
    <item>
      <title>UNIX Shell Commands</title>
      <link>/software-eng-essentials/terminal-and-shell/unix-commands/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/terminal-and-shell/unix-commands/</guid>
      <description>Directory Commands    Command Description Examples     pwd print the current working directory pwd   cd change to a new directory cd ~/Downloads   ls [options] [pattern] print a listing of the current directory ls; ls -als *.</description>
    </item>
    
    <item>
      <title>CLI Cheatsheet</title>
      <link>/software-eng-essentials/topic-cheatsheets/cli-cheatsheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/topic-cheatsheets/cli-cheatsheet/</guid>
      <description>This guide is for users of Mac OS and Windows Powershell. Unless specified, commands apply to usage on both systems.</description>
    </item>
    
    <item>
      <title>Git CLI Cheatsheet</title>
      <link>/software-eng-essentials/topic-cheatsheets/git-cli-cheatsheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/topic-cheatsheets/git-cli-cheatsheet/</guid>
      <description>Resource Github Education Cheat Sheet
Common Terms    Term Description     Git Version control system that lets you manage and keep track of your source code history   Github A cloud-based hosting service that lets you manage Git repositories   Repository (Repo) Repository tracks all changes made to files in your project, building a history over time in the .</description>
    </item>
    
    <item>
      <title>Budget App</title>
      <link>/react/foundations/labs/lab-budget-app/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/react/foundations/labs/lab-budget-app/</guid>
      <description>A lab for working with components, props, state, and events.
Part 1: Setup Let&amp;rsquo;s start by spinning up a react app and creating our first component.</description>
    </item>
    
    <item>
      <title></title>
      <link>/_footer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/_footer/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>/placeholder/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/placeholder/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>/web-essentials/webmastery-foundations/solutions/frameworks-lab-with-answers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/web-essentials/webmastery-foundations/solutions/frameworks-lab-with-answers/</guid>
      <description>Learning Objectives Skills  How to install bootstrap on your project Become familiar with bootstrap documentation Build websites with ease  HTML - The Structure This is a paired exercise, feel free to work at your own pace with your partner.</description>
    </item>
    
    <item>
      <title></title>
      <link>/web-essentials/webmastery-foundations/solutions/sass-lab-with-answers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/web-essentials/webmastery-foundations/solutions/sass-lab-with-answers/</guid>
      <description>Lab The starter for this lab is at SASS Lab 1 Starter The completed lab is at SASS Lab 1 Finished</description>
    </item>
    
    <item>
      <title></title>
      <link>/web-essentials/webmastery-foundations/solutions/sign_up_form_with_answers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/web-essentials/webmastery-foundations/solutions/sign_up_form_with_answers/</guid>
      <description>Learning Objectives Concepts  Understand custom styling with vanilla css  Skills  Build an html form Gain understanding of the more complex parts of css  HTML Create a new project  create the HTML document create a css directory and a main stylesheet link the css and html together  &amp;lt;!</description>
    </item>
    
    <item>
      <title></title>
      <link>/web-essentials/webmastery-foundations/src/sass/mixins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/web-essentials/webmastery-foundations/src/sass/mixins/</guid>
      <description>Mixins &amp;lt;section class=&amp;#34;box1&amp;#34;&amp;gt; &amp;lt;h1&amp;gt;News&amp;lt;/h1&amp;gt; &amp;lt;article&amp;gt; &amp;lt;h2&amp;gt;Article goes here.&amp;lt;/h2&amp;gt; &amp;lt;/article&amp;gt; &amp;lt;/section&amp;gt; &amp;lt;section class=&amp;#34;box2&amp;#34;&amp;gt; &amp;lt;h1&amp;gt;Weather&amp;lt;/h1&amp;gt; &amp;lt;article&amp;gt; &amp;lt;h2&amp;gt;Article goes here.</description>
    </item>
    
    <item>
      <title></title>
      <link>/web-essentials/webmastery-foundations/src/sass/nesting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/web-essentials/webmastery-foundations/src/sass/nesting/</guid>
      <description>Nesting &amp;lt;nav&amp;gt; &amp;lt;ul&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a href=&amp;#34;#news&amp;#34;&amp;gt;News&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a href=&amp;#34;#weather&amp;#34;&amp;gt;Weather&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a href=&amp;#34;#sports&amp;#34;&amp;gt;Sports&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;/nav&amp;gt; &amp;lt;h2&amp;gt;Here is some fruit&amp;lt;/h2&amp;gt; &amp;lt;ul&amp;gt; &amp;lt;li&amp;gt;Apple&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;Orange&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;Banana&amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; nav { ul { margin: 0; padding: 0; list-style: none; } li { display: inline-block; } a { display: block; padding: 6px 12px; text-decoration: none; } } </description>
    </item>
    
    <item>
      <title></title>
      <link>/web-essentials/webmastery-foundations/src/sass/vars/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/web-essentials/webmastery-foundations/src/sass/vars/</guid>
      <description>Variables and Color Functions &amp;lt;h1&amp;gt;This is a level 1 heading&amp;lt;/h1&amp;gt; &amp;lt;h2&amp;gt;This is a level 2 heading&amp;lt;/h2&amp;gt; &amp;lt;p&amp;gt;This is a paragraph&amp;lt;/p&amp;gt; &amp;lt;button&amp;gt;I am a button, click Me!</description>
    </item>
    
    <item>
      <title>Base Conversion</title>
      <link>/python/foundation/additional-resources/base-conversions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/foundation/additional-resources/base-conversions/</guid>
      <description>Base Introduction Our everyday number system is a Base-10 system. The Base-10 number system is known as the decimal system and has 10 digits to show all numbers 0, 1, 2, 3, 4, 5, 6, 7, 8, 9.</description>
    </item>
    
    <item>
      <title>Go FAQs</title>
      <link>/golang/fromjava/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/fromjava/faq/</guid>
      <description>Java libraries are &amp;ldquo;mature&amp;rdquo;, how can I be sure Go libraries can handle our needs? There are several things in Go&amp;rsquo;s corner here:</description>
    </item>
    
    <item>
      <title>If and Functions</title>
      <link>/software-eng-essentials/command-line-bash/if-and-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/command-line-bash/if-and-functions/</guid>
      <description>Objectives  If statements Tests Boolean operators Functions Passing arguments to a function Return values Overriding commands  If statements An if statement basically says, if a particular test is true, then perform a given set of actions.</description>
    </item>
    
    <item>
      <title>Intro to DataGrip</title>
      <link>/software-eng-essentials/db-sql/intro-to-datagrip/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/db-sql/intro-to-datagrip/</guid>
      <description>DataGrip DataGrip is an IDE from JetBrains built for database developers. It allows you to quickly migrate and refactor relational databases, construct efficient, statically checked SQL queries and much more.</description>
    </item>
    
    <item>
      <title>Logging in</title>
      <link>/software-eng-essentials/command-line-bash/login/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/command-line-bash/login/</guid>
      <description>Linux Intro What Is Linux? Linux is a piece of software called the kernel.
The kernel handles tasks such as booting the system and interacting with hardware devices.</description>
    </item>
    
    <item>
      <title>Metacharacters</title>
      <link>/software-eng-essentials/command-line-bash/metacharacters/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/command-line-bash/metacharacters/</guid>
      <description>Advanced Linux Commands Intro Connecting and Expanding Commands Metacharacters The shell uses metacharacters to allow commands to be strung together.</description>
    </item>
    
    <item>
      <title>Performance</title>
      <link>/golang/testing/future-additions/performance/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/testing/future-additions/performance/</guid>
      <description>Benchmarking Tests func BenchmarkCalculate(b *testing.B){ ... Ran with: go test -bench
Capping CPU Usage During Test Note: We&amp;rsquo;re going to use benchmarking in the next couple of topics as it can clearly demonstrate the concepts being covered, but rest assured, benchmarking will have its own lesson.</description>
    </item>
    
    <item>
      <title>Picture Manipulation</title>
      <link>/python/foundation/additional-resources/picture-manipulation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/foundation/additional-resources/picture-manipulation/</guid>
      <description>Create a Python file called picture_manipulation.py within a PyCharm project called python-fundamentals
Have you ever played with special photo effects on a computer?</description>
    </item>
    
    <item>
      <title>Picture Manipulation Lab</title>
      <link>/python/foundation/additional-resources/picture-manipulation-labs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/foundation/additional-resources/picture-manipulation-labs/</guid>
      <description>Picture Manipulation
Changing Views of Images Open your Python file called changing_view.py within PyCharm. Your file should look like the following:</description>
    </item>
    
    <item>
      <title>PostgreSQL Setup</title>
      <link>/software-eng-essentials/db-sql/postgres-setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/db-sql/postgres-setup/</guid>
      <description>Background PostgreSQL has already been installed on each computer via homebrew. Now we just need a way to auto-start or manual-start postgres when a student is logged in.</description>
    </item>
    
    <item>
      <title>Remote Postgres Setup</title>
      <link>/software-eng-essentials/db-sql/remote-postgres-setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/db-sql/remote-postgres-setup/</guid>
      <description>The following instructions will guide you through setting up a postgreSQL database on an ephermal server on https://server.</description>
    </item>
    
    <item>
      <title>Scripting Fundamentals</title>
      <link>/software-eng-essentials/command-line-bash/scripting-fundamentals/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software-eng-essentials/command-line-bash/scripting-fundamentals/</guid>
      <description>Objectives  Command line arguments Variables User input Reading from STDIN  Command line arguments We have already created a script that receives command line arguments.</description>
    </item>
    
    <item>
      <title>Teacher PostgreSQL Setup</title>
      <link>/python/relational-db/teacher-postgresql-setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/relational-db/teacher-postgresql-setup/</guid>
      <description>Go to https://server.homedepot.com
 Click Catalog (Located at the top of the window) Click on PostgreSQL and use the following credentials:  Group: Development Name of depoloyed service: Postgresql (CentOS7) Environment: Atlanta - Dev Servers Server Size: Small (1 x 2) Quantity: 1.</description>
    </item>
    
    <item>
      <title>Tkinter</title>
      <link>/python/foundation/additional-resources/tkinter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/foundation/additional-resources/tkinter/</guid>
      <description>Tkinter Tkinter is the standard GUI library for Python. Python when combined with Tkinter provides a fast and easy way to create GUI applications.</description>
    </item>
    
    <item>
      <title>Tkinter Lab</title>
      <link>/python/foundation/additional-resources/tkinter-labs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/foundation/additional-resources/tkinter-labs/</guid>
      <description>GitHub GUI The goto way of working with GitHub is to work in the terminal. This is a great way for a user to fully understand how Git and GitHub work.</description>
    </item>
    
  </channel>
</rss>